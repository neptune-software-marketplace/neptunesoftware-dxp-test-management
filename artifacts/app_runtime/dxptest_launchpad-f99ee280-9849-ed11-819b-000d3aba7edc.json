{
	"id": "f99ee280-9849-ed11-819b-000d3aba7edc",
	"createdAt": "2022-10-12T11:25:37.426Z",
	"createdBy": "rommel@neptune-software.com",
	"objects": [
		{
			"fieldNo": "8447f113-5868-47cc-cc90-05652669235a",
			"fieldName": "onLoad",
			"fieldParent": 0,
			"fieldType": "neptune.Script",
			"script": [
				"==OBJECT STRING==",
				"// Neptune Namespace",
				"sap.n = {",
				"    Shell: {},",
				"    Launchpad: {},",
				"    Phonegap: {",
				"        loaded: false",
				"    },",
				"    Fingerprint: {},",
				"    Documentation: {},",
				"    Push: {},",
				"    PDF: {},",
				"    Apps: {},",
				"    Enhancement: {}",
				"};",
				"",
				"if (typeof nep === 'undefined') nep = {};",
				"",
				"function isCordova() {",
				"    return window.hasOwnProperty('cordova') || typeof (cordova) === 'object';",
				"}",
				"",
				"// Browser/Phonegap Startup",
				"if (isCordova()) {",
				"    document.addEventListener('deviceready', onDeviceReady, false);",
				"} else {",
				"    onDeviceReady();",
				"}",
				"",
				"// onDeviceReady",
				"function onDeviceReady() {",
				"    sap.n.Phonegap.loaded = true;",
				"    // Catch error on Windows 10",
				"    if (typeof MSApp !== 'undefined') {",
				"        window.onerror = function (message, file, line, col, error) {",
				"            console.error(message);",
				"            return true;",
				"        };",
				"",
				"        alert = navigator.notification.alert;",
				"",
				"        // Hide Backbutton on App",
				"        setTimeout(function () {",
				"            let currentView = Windows.UI.Core.SystemNavigationManager.getForCurrentView();",
				"            currentView.appViewBackButtonVisibility = Windows.UI.Core.AppViewBackButtonVisibility.collapsed;",
				"        }, 200);",
				"    }",
				"",
				"    document.addEventListener('pause', onPause, false);",
				"    document.addEventListener('resume', onResume, false);",
				"    document.addEventListener('backbutton', onBackButton, false);",
				"",
				"    if (navigator.app) {",
				"        try {",
				"            navigator.app.overrideButton('menubutton', true);",
				"        } catch (error) {",
				"",
				"        }",
				"    }",
				"",
				"    document.addEventListener('menubutton', onMenuButton, false);",
				"    window.addEventListener('offline', onOffline, false);",
				"    window.addEventListener('online', onOnline, false);",
				"    document.addEventListener('searchbutton', onSearchButton, false);",
				"    document.addEventListener('volumedownbutton', onVolumeDownButton, false);",
				"    document.addEventListener('volumeupbutton', onVolumeUpButton, false);",
				"",
				"    // Android (API>19) supports VIBRATION natively - fallback for existing apps",
				"    if (sap.ui.Device.os.android) {",
				"        if (typeof navigator.notification === 'object' && typeof navigator.notification.vibrate === 'undefined') {",
				"            navigator.notification.vibrate = function (mSecs) {",
				"                navigator.vibrate(mSecs);",
				"            }",
				"        }",
				"    }",
				"",
				"    // Android SSL ",
				"    if (isCordova() && cordova.plugins && cordova.plugins.certificates) cordova.plugins.certificates.trustUnsecureCerts(true);",
				"",
				"    // InAppBrowser ",
				"    if (isCordova()) window.open = cordova.InAppBrowser.open;",
				"}",
				"",
				"function onOffline() {",
				"    AppCache.isOffline = true;",
				"    AppCacheShellNetwork.setVisible(true);",
				"    AppCache_butNewUser.setEnabled(false);",
				"",
				"    if (AppCache.isMobile && AppCache.isRestricted) return;",
				"",
				"    sap.n.Launchpad.RebuildTiles();",
				"",
				"    if (typeof sap.n.Phonegap.onOfflineCustom === 'function') {",
				"        sap.n.Phonegap.onOfflineCustom();",
				"        return;",
				"    }",
				"}",
				"",
				"function onOnline() {",
				"    AppCache.isOffline = false;",
				"    AppCacheShellNetwork.setVisible(false);",
				"    AppCache_butNewUser.setEnabled(true);",
				"",
				"    if (AppCache.isMobile && AppCache.isRestricted) return;",
				"",
				"    sap.n.Launchpad.RebuildTiles();",
				"",
				"    if (typeof sap.n.Phonegap.onOnlineCustom === 'function') {",
				"        sap.n.Phonegap.onOnlineCustom();",
				"        return;",
				"    }",
				"}",
				"",
				"function onPause() {",
				"    AppCache.inBackground = true;",
				"",
				"    // Inactivity",
				"    if (AppCache.timerLock && !AppCache.isRestricted) lockStart = Date.now();",
				"",
				"",
				"    if (typeof sap.n.Phonegap.onPauseCustom === 'function') {",
				"        sap.n.Phonegap.onPauseCustom();",
				"        return;",
				"    }",
				"}",
				"",
				"function onResume() {",
				"    setTimeout(function () {",
				"        AppCache.inBackground = false;",
				"",
				"        if (typeof navigator.splashscreen !== 'undefined') navigator.splashscreen.hide();",
				"        sap.ui.core.BusyIndicator.hide();",
				"",
				"        // Inactivity",
				"        if (AppCache.timerLock && !AppCache.isRestricted) {",
				"            let lockEnd = Date.now();",
				"            let lockDiff = (lockEnd - lockStart) / 1000.",
				"            if (lockDiff > AppCache.timerLock) AppCache.Lock();",
				"        }",
				"",
				"        if (typeof sap.n.Phonegap.onResumeCustom === 'function') {",
				"            sap.n.Phonegap.onResumeCustom();",
				"            return;",
				"        }",
				"    }, 100);",
				"}",
				"",
				"function onBackButton() {",
				"",
				"    if (typeof sap.n.Phonegap.onBackButtonCustom === 'function') {",
				"        sap.n.Phonegap.onBackButtonCustom();",
				"        return;",
				"    }",
				"",
				"    if (AppCache.CurrentApp === AppCache.StartApp && AppCache.enablePasscode === true) {",
				"        AppCache.Lock();",
				"    }",
				"",
				"}",
				"",
				"function onMenuButton() {",
				"",
				"    if (typeof sap.n.Phonegap.onMenuButtonCustom === 'function') {",
				"        sap.n.Phonegap.onMenuButtonCustom();",
				"        return;",
				"    }",
				"",
				"}",
				"",
				"function onSearchButton() {",
				"",
				"    if (typeof sap.n.Phonegap.onSearchButtonCustom === 'function') {",
				"        sap.n.Phonegap.onSearchButtonCustom();",
				"        return;",
				"    }",
				"",
				"}",
				"",
				"function onVolumeDownButton() {",
				"",
				"    if (typeof sap.n.Phonegap.onVolumeDownButtonCustom === 'function') {",
				"        sap.n.Phonegap.onVolumeDownButtonCustom();",
				"        return;",
				"    }",
				"",
				"}",
				"",
				"function onVolumeUpButton() {",
				"",
				"    if (typeof sap.n.Phonegap.onVolumeUpButtonCustom === 'function') {",
				"        sap.n.Phonegap.onVolumeUpButtonCustom();",
				"        return;",
				"    }",
				"",
				"}",
				"",
				"window.onOffline = onOffline;",
				"window.onOnline = onOnline;"
			],
			"request": [],
			"response": [],
			"attributes": [],
			"data": []
		},
		{
			"fieldNo": "cc953eb9-626e-4c4a-87de-9bb923d35090",
			"fieldName": "topShell",
			"fieldParent": 0,
			"fieldType": "sap.m.Shell",
			"script": "",
			"request": [],
			"response": [],
			"attributes": [
				{
					"attribute": "visible",
					"grouping": "Properties",
					"value": "false",
					"script": "",
					"translation": []
				},
				{
					"attribute": "styleClass",
					"grouping": "Properties",
					"value": "nepLaunchpadShell nepPage",
					"script": "",
					"translation": []
				},
				{
					"attribute": "appWidthLimited",
					"grouping": "Properties",
					"value": "false",
					"script": "",
					"translation": []
				}
			],
			"data": [
				{
					"fieldNo": "cd066348-ca46-4f89-9904-13d74a63fbcb",
					"fieldName": "appShell",
					"fieldParent": "cc953eb9-626e-4c4a-87de-9bb923d35090",
					"fieldType": "sap.m.App",
					"script": "",
					"request": [],
					"response": [],
					"attributes": [
						{
							"attribute": "autoFocus",
							"grouping": "Properties",
							"value": "false",
							"script": "",
							"translation": []
						}
					],
					"data": [
						{
							"fieldNo": "63351f31-547d-43db-8b6a-898b9977f552",
							"fieldName": "pageShell",
							"fieldParent": "cd066348-ca46-4f89-9904-13d74a63fbcb",
							"fieldType": "sap.m.Page",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "styleClass",
									"grouping": "Properties",
									"value": "nepPage pageShell",
									"script": "",
									"translation": []
								},
								{
									"attribute": "showSubHeader",
									"grouping": "Properties",
									"value": "false",
									"script": "",
									"translation": []
								},
								{
									"attribute": "showHeader",
									"grouping": "Properties",
									"value": "false",
									"script": "",
									"translation": []
								},
								{
									"attribute": "showFooter",
									"grouping": "Properties",
									"value": "false",
									"script": "",
									"translation": []
								},
								{
									"attribute": "backgroundDesign",
									"grouping": "Properties",
									"value": "Transparent",
									"script": "",
									"translation": []
								}
							],
							"data": [
								{
									"fieldNo": "c4f9114f-174e-425b-faa9-3118b594c945",
									"fieldName": "actionPWA",
									"fieldParent": "63351f31-547d-43db-8b6a-898b9977f552",
									"fieldType": "sap.m.Bar",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "visible",
											"grouping": "Properties",
											"value": "false",
											"script": "",
											"translation": []
										},
										{
											"attribute": "position",
											"grouping": "Parent",
											"value": "setSubHeader",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "00046d71-c91f-4ad9-b64c-48ef3319d5da",
											"fieldName": "Left",
											"fieldParent": "c4f9114f-174e-425b-faa9-3118b594c945",
											"fieldType": "neptune.BarContent",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "position",
													"grouping": "Parent",
													"value": "ContentLeft",
													"script": "",
													"translation": []
												}
											],
											"data": [
												{
													"fieldNo": "22ae1e0d-5e3a-46df-cdcc-6c929e30c127",
													"fieldName": "toolPWA",
													"fieldParent": "00046d71-c91f-4ad9-b64c-48ef3319d5da",
													"fieldType": "sap.m.Toolbar",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "styleClass",
															"grouping": "Properties",
															"value": "nepPWAToolbar",
															"script": "",
															"translation": []
														},
														{
															"attribute": "position",
															"grouping": "Parent",
															"value": "HeaderToolbar",
															"script": "",
															"translation": []
														}
													],
													"data": [
														{
															"fieldNo": "8d1bf547-3303-4e8c-fa06-3df565bd62fa",
															"fieldName": "toolPWATitle",
															"fieldParent": "22ae1e0d-5e3a-46df-cdcc-6c929e30c127",
															"fieldType": "sap.m.Text",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "text",
																	"grouping": "Properties",
																	"value": "Add to homescreen",
																	"script": "",
																	"translation": [
																		{
																			"language": "DA",
																			"value": "Føj til hjemmeskærmen"
																		},
																		{
																			"language": "IT",
																			"value": "Aggiungere alla schermata Home"
																		},
																		{
																			"language": "PL",
																			"value": "Dodaj do ekranu głównego"
																		},
																		{
																			"language": "PT",
																			"value": "Adicionar à tela inicial"
																		},
																		{
																			"language": "ES",
																			"value": "Añadir a la pantalla principal"
																		},
																		{
																			"language": "SV",
																			"value": "Lägg till på hemskärmen"
																		},
																		{
																			"language": "FR",
																			"value": "Ajouter à l'écran d'accueil"
																		},
																		{
																			"language": "NO",
																			"value": "Legg til på hjemmeskjermen"
																		},
																		{
																			"language": "DE",
																			"value": "Zum Startbildschirm hinzufügen"
																		},
																		{
																			"language": "EN",
																			"value": "Add to homescreen"
																		}
																	]
																}
															],
															"data": []
														},
														{
															"fieldNo": "8ba8c775-92c0-4b52-808d-e6b10ff9163c",
															"fieldName": "toolPWASpacer",
															"fieldParent": "22ae1e0d-5e3a-46df-cdcc-6c929e30c127",
															"fieldType": "sap.m.ToolbarSpacer",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [],
															"data": []
														},
														{
															"fieldNo": "cdb17e90-8132-46f6-a784-ba0b9432444c",
															"fieldName": "toolPWAInstall",
															"fieldParent": "22ae1e0d-5e3a-46df-cdcc-6c929e30c127",
															"fieldType": "sap.m.Button",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "type",
																	"grouping": "Properties",
																	"value": "Accept",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "text",
																	"grouping": "Properties",
																	"value": "Install",
																	"script": "",
																	"translation": [
																		{
																			"language": "DA",
																			"value": "Installere"
																		},
																		{
																			"language": "IT",
																			"value": "Installare"
																		},
																		{
																			"language": "PL",
																			"value": "zainstalować"
																		},
																		{
																			"language": "PT",
																			"value": "Instalar"
																		},
																		{
																			"language": "ES",
																			"value": "Instalar en pc"
																		},
																		{
																			"language": "SV",
																			"value": "Installera"
																		},
																		{
																			"language": "FR",
																			"value": "Installer"
																		},
																		{
																			"language": "NO",
																			"value": "Installere"
																		},
																		{
																			"language": "DE",
																			"value": "Installieren"
																		},
																		{
																			"language": "EN",
																			"value": "Install"
																		}
																	]
																},
																{
																	"attribute": "press",
																	"grouping": "Events",
																	"value": "Anonymous Function",
																	"script": [
																		"==OBJECT STRING==",
																		"_pwadeferredPrompt.prompt();\r",
																		"_pwadeferredPrompt.userChoice\r",
																		"    .then(function(choiceResult) {\r",
																		"        if (choiceResult.outcome === 'accepted') {\r",
																		"            actionPWA.setVisible(false);\r",
																		"            pageShell.setShowSubHeader(false);\r",
																		"            sap.n.Layout.setHeaderPadding();\r",
																		"        }\r",
																		"        _pwadeferredPrompt = null;        \r",
																		"    });"
																	],
																	"translation": []
																}
															],
															"data": []
														},
														{
															"fieldNo": "f30dc30d-79aa-479a-f3bf-dd78a2122163",
															"fieldName": "toolPWANotNow",
															"fieldParent": "22ae1e0d-5e3a-46df-cdcc-6c929e30c127",
															"fieldType": "sap.m.Button",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "type",
																	"grouping": "Properties",
																	"value": "Reject",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "text",
																	"grouping": "Properties",
																	"value": "Not now",
																	"script": "",
																	"translation": [
																		{
																			"language": "DA",
																			"value": "Ikke nu"
																		},
																		{
																			"language": "IT",
																			"value": "Non adesso"
																		},
																		{
																			"language": "PL",
																			"value": "Nie teraz"
																		},
																		{
																			"language": "PT",
																			"value": "Agora não"
																		},
																		{
																			"language": "ES",
																			"value": "Ahora no"
																		},
																		{
																			"language": "SV",
																			"value": "Inte nu"
																		},
																		{
																			"language": "FR",
																			"value": "Pas maintenant"
																		},
																		{
																			"language": "NO",
																			"value": "Ikke nå"
																		},
																		{
																			"language": "DE",
																			"value": "Nicht jetzt"
																		},
																		{
																			"language": "EN",
																			"value": "Not now"
																		}
																	]
																},
																{
																	"attribute": "press",
																	"grouping": "Events",
																	"value": "Anonymous Function",
																	"script": [
																		"==OBJECT STRING==",
																		"actionPWA.setVisible(false);",
																		"pageShell.setShowSubHeader(false);",
																		"pageShell.rerender();",
																		"sap.n.Layout.setHeaderPadding();"
																	],
																	"translation": []
																}
															],
															"data": []
														}
													]
												}
											]
										}
									]
								},
								{
									"fieldNo": "b8bab2c5-8e19-4416-eae9-ff3a28d1cf24",
									"fieldName": "launchpadContainer",
									"fieldParent": "63351f31-547d-43db-8b6a-898b9977f552",
									"fieldType": "sap.m.FlexBox",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "styleClass",
											"grouping": "Properties",
											"value": "nepLaunchpadContainer",
											"script": "",
											"translation": []
										},
										{
											"attribute": "renderType",
											"grouping": "Properties",
											"value": "Div",
											"script": "",
											"translation": []
										},
										{
											"attribute": "fitContainer",
											"grouping": "Properties",
											"value": "true",
											"script": "",
											"translation": []
										},
										{
											"attribute": "direction",
											"grouping": "Properties",
											"value": "Column",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "f0f258ae-7569-468a-c773-a7819488c33c",
											"fieldName": "topMenu",
											"fieldParent": "b8bab2c5-8e19-4416-eae9-ff3a28d1cf24",
											"fieldType": "sap.m.Panel",
											"description": "",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "styleClassPadding",
													"grouping": "Properties",
													"value": "sapUiNoContentPadding",
													"script": "",
													"translation": []
												},
												{
													"attribute": "styleClass",
													"grouping": "Properties",
													"value": "nepTopMenu",
													"script": "",
													"translation": []
												},
												{
													"attribute": "height",
													"grouping": "Properties",
													"value": "49px",
													"script": "",
													"translation": []
												},
												{
													"attribute": "expandAnimation",
													"grouping": "Properties",
													"value": true,
													"script": "",
													"translation": []
												},
												{
													"attribute": "backgroundDesign",
													"grouping": "Properties",
													"value": "Transparent",
													"script": "",
													"translation": []
												}
											],
											"data": [
												{
													"fieldNo": "766bdea0-e6f4-485b-a0c5-7103482992a6",
													"fieldName": "topMenuToolbar",
													"fieldParent": "f0f258ae-7569-468a-c773-a7819488c33c",
													"fieldType": "sap.m.Toolbar",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "visible",
															"grouping": "Properties",
															"value": "false",
															"script": "",
															"translation": []
														},
														{
															"attribute": "position",
															"grouping": "Parent",
															"value": "HeaderToolbar",
															"script": "",
															"translation": []
														}
													],
													"data": []
												},
												{
													"fieldNo": "a619f5c3-0886-47af-9882-8b0c0e84a7a2",
													"fieldName": "toolTopMenu",
													"fieldParent": "f0f258ae-7569-468a-c773-a7819488c33c",
													"fieldType": "sap.m.HBox",
													"description": "",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "visible",
															"grouping": "Properties",
															"value": true,
															"script": "",
															"translation": []
														},
														{
															"attribute": "styleClass",
															"grouping": "Properties",
															"value": "nepTopMenuContent",
															"script": "",
															"translation": []
														},
														{
															"attribute": "justifyContent",
															"grouping": "Properties",
															"value": "SpaceBetween",
															"script": "",
															"translation": []
														}
													],
													"data": [
														{
															"fieldNo": "ab18c413-4f59-40ae-8cd8-5b52a6433023",
															"fieldName": "topContainerLeft",
															"fieldParent": "a619f5c3-0886-47af-9882-8b0c0e84a7a2",
															"fieldType": "sap.m.VBox",
															"description": "",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [],
															"data": [
																{
																	"fieldNo": "2e2b96ab-9829-41bb-fa2f-65f6065ff13a",
																	"fieldName": "topLayoutLeft",
																	"fieldParent": "ab18c413-4f59-40ae-8cd8-5b52a6433023",
																	"fieldType": "sap.m.HBox",
																	"description": "",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "height",
																			"grouping": "Properties",
																			"value": "48px",
																			"script": "",
																			"translation": []
																		}
																	],
																	"data": [
																		{
																			"fieldNo": "333db848-5a32-4194-fe57-7cb103a9e608",
																			"fieldName": "layoutShellBoxOverflow",
																			"fieldParent": "2e2b96ab-9829-41bb-fa2f-65f6065ff13a",
																			"fieldType": "sap.m.VBox",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "visible",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "styleClassMargin",
																					"grouping": "Properties",
																					"value": "sapUiTinyMarginBegin",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": [
																				{
																					"fieldNo": "57373720-9f7b-4811-a2ed-4184ef1d256e",
																					"fieldName": "AppCacheShellMenu",
																					"fieldParent": "333db848-5a32-4194-fe57-7cb103a9e608",
																					"fieldType": "sap.m.Button",
																					"description": "",
																					"script": "",
																					"request": [],
																					"response": [],
																					"attributes": [
																						{
																							"attribute": "width",
																							"grouping": "Properties",
																							"value": "48px",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "type",
																							"grouping": "Properties",
																							"value": "Transparent",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "tooltip",
																							"grouping": "Properties",
																							"value": "Menu",
																							"script": "",
																							"translation": [
																								{
																									"language": "1",
																									"value": "菜单"
																								},
																								{
																									"language": "A",
																									"value": "قائمة طعام"
																								},
																								{
																									"language": "D",
																									"value": "Menü"
																								},
																								{
																									"language": "F",
																									"value": "Menu"
																								},
																								{
																									"language": "H",
																									"value": "Menü"
																								},
																								{
																									"language": "K",
																									"value": "Menu"
																								},
																								{
																									"language": "O",
																									"value": "Meny"
																								},
																								{
																									"language": "P",
																									"value": "Cardápio"
																								},
																								{
																									"language": "R",
																									"value": "Меню"
																								},
																								{
																									"language": "S",
																									"value": "Menú"
																								},
																								{
																									"language": "W",
																									"value": "Меню"
																								},
																								{
																									"language": "IT",
																									"value": "Menù"
																								},
																								{
																									"language": "PL",
																									"value": "Menu"
																								},
																								{
																									"language": "PT",
																									"value": "Cardápio"
																								},
																								{
																									"language": "ES",
																									"value": "Menú"
																								},
																								{
																									"language": "SV",
																									"value": "Meny"
																								},
																								{
																									"language": "NO",
																									"value": "Meny"
																								},
																								{
																									"language": "DE",
																									"value": "Menü"
																								},
																								{
																									"language": "EN",
																									"value": "Menu"
																								}
																							]
																						},
																						{
																							"attribute": "styleClass",
																							"grouping": "Properties",
																							"value": "nep",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "icon",
																							"grouping": "Properties",
																							"value": "sap-icon://grid",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "press",
																							"grouping": "Events",
																							"value": "Anonymous Function",
																							"script": [
																								"==OBJECT STRING==",
																								"if (sap.ui.Device.resize.width < sap.n.Launchpad.verticalMenuLimit) launchpadContentMenu.setWidth(\"0px\");",
																								"",
																								"if (AppCache.config.verticalMenu && sap.ui.Device.resize.width >= sap.n.Launchpad.verticalMenuLimit) {",
																								"    let size = (launchpadContentMenu.getWidth() === \"0px\") ? \"300px\" : \"0px\";",
																								"    launchpadContentMenu.addItem(pageVerticalMenu);",
																								"    launchpadContentMenu.setWidth(size);",
																								"    openAppMaster.setVisible((openApps.getItems().length > 0));",
																								"} else {",
																								"",
																								"    launchpadOverflow.addItem(pageVerticalMenu);",
																								"    openAppMaster.setVisible((openApps.getItems().length > 0));",
																								"",
																								"    applyCSSToElmId('launchpadOverflowContainer', { width: '100%' });",
																								"    applyCSSToElmId('launchpadOverflowClickArea', { display: 'block' });",
																								"",
																								"    setTimeout(function () {",
																								"        launchpadOverflow.addStyleClass(\"nepLaunchpadMenuOverflowOpen\");",
																								"    }, 10);",
																								"}",
																								"",
																								"sap.n.Layout.setHeaderPadding();",
																								""
																							],
																							"translation": []
																						}
																					],
																					"data": []
																				}
																			]
																		},
																		{
																			"fieldNo": "6878a189-5b7d-4391-cb46-c1bcc4d6f9a9",
																			"fieldName": "topLayoutLogo",
																			"fieldParent": "2e2b96ab-9829-41bb-fa2f-65f6065ff13a",
																			"fieldType": "sap.m.HBox",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "visible",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "renderType",
																					"grouping": "Properties",
																					"value": "Bare",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": [
																				{
																					"fieldNo": "77d5b786-2ede-4611-b5c5-5465c01c71de",
																					"fieldName": "boxShellLogoDesktop",
																					"fieldParent": "6878a189-5b7d-4391-cb46-c1bcc4d6f9a9",
																					"fieldType": "sap.m.VBox",
																					"description": "",
																					"script": "",
																					"request": [],
																					"response": [],
																					"attributes": [
																						{
																							"attribute": "visible",
																							"grouping": "Properties",
																							"value": true,
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "styleClassVisibility",
																							"grouping": "Properties",
																							"value": "sapUiHideOnPhone",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "styleClass",
																							"grouping": "Properties",
																							"value": "nepTopMenuIconContainerDesktop",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "renderType",
																							"grouping": "Properties",
																							"value": "Bare",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "justifyContent",
																							"grouping": "Properties",
																							"value": "Center",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "height",
																							"grouping": "Properties",
																							"value": "48px",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "alignItems",
																							"grouping": "Properties",
																							"value": "Center",
																							"script": "",
																							"translation": []
																						}
																					],
																					"data": [
																						{
																							"fieldNo": "680ccd38-3804-492a-dff9-554f1ea5611b",
																							"fieldName": "AppCacheShellLogoDesktop",
																							"fieldParent": "77d5b786-2ede-4611-b5c5-5465c01c71de",
																							"fieldType": "sap.m.Image",
																							"description": "",
																							"script": "",
																							"request": [],
																							"response": [],
																							"attributes": [
																								{
																									"attribute": "styleClass",
																									"grouping": "Properties",
																									"value": "nepTopMenuIcon nepTopMenuIconDesktop",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "alt",
																									"grouping": "Properties",
																									"value": "Home Icon",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "press",
																									"grouping": "Events",
																									"value": "Anonymous Function",
																									"script": [
																										"==OBJECT STRING==",
																										"if (AppCache.isMobile && AppCache.isRestricted) return;",
																										"AppCache._Home();",
																										""
																									],
																									"translation": []
																								}
																							],
																							"data": []
																						}
																					]
																				},
																				{
																					"fieldNo": "15a62493-286c-477a-dfbb-79b6f011c104",
																					"fieldName": "boxShellLogoMobile",
																					"fieldParent": "6878a189-5b7d-4391-cb46-c1bcc4d6f9a9",
																					"fieldType": "sap.m.VBox",
																					"description": "",
																					"script": "",
																					"request": [],
																					"response": [],
																					"attributes": [
																						{
																							"attribute": "width",
																							"grouping": "Properties",
																							"value": "48px",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "visible",
																							"grouping": "Properties",
																							"value": true,
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "styleClassVisibility",
																							"grouping": "Properties",
																							"value": "sapUiVisibleOnlyOnPhone",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "styleClass",
																							"grouping": "Properties",
																							"value": "nepTopMenuIconContainerMobile",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "renderType",
																							"grouping": "Properties",
																							"value": "Bare",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "justifyContent",
																							"grouping": "Properties",
																							"value": "Center",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "height",
																							"grouping": "Properties",
																							"value": "48px",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "alignItems",
																							"grouping": "Properties",
																							"value": "Center",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "alignContent",
																							"grouping": "Properties",
																							"value": "Center",
																							"script": "",
																							"translation": []
																						}
																					],
																					"data": [
																						{
																							"fieldNo": "7cfd6cc9-fad8-422a-c5b4-6bb0fa34891a",
																							"fieldName": "AppCacheShellLogoMobile",
																							"fieldParent": "15a62493-286c-477a-dfbb-79b6f011c104",
																							"fieldType": "sap.m.Image",
																							"description": "",
																							"script": "",
																							"request": [],
																							"response": [],
																							"attributes": [
																								{
																									"attribute": "styleClass",
																									"grouping": "Properties",
																									"value": "nepTopMenuIcon nepTopMenuIconMobile",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "alt",
																									"grouping": "Properties",
																									"value": "Home Icon",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "press",
																									"grouping": "Events",
																									"value": "Anonymous Function",
																									"script": [
																										"==OBJECT STRING==",
																										"if (AppCache.isMobile && AppCache.isRestricted) return;",
																										"AppCache._Home();",
																										""
																									],
																									"translation": []
																								}
																							],
																							"data": []
																						}
																					]
																				},
																				{
																					"fieldNo": "94974f6b-4247-4f3a-ed9d-7e0415b012a2",
																					"fieldName": "AppCacheShellBack",
																					"fieldParent": "6878a189-5b7d-4391-cb46-c1bcc4d6f9a9",
																					"fieldType": "sap.m.Button",
																					"script": "",
																					"request": [],
																					"response": [],
																					"attributes": [
																						{
																							"attribute": "visible",
																							"grouping": "Properties",
																							"value": "false",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "type",
																							"grouping": "Properties",
																							"value": "Transparent",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "icon",
																							"grouping": "Properties",
																							"value": "sap-icon://nav-back",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "press",
																							"grouping": "Events",
																							"value": "AppCache.Back();",
																							"script": "AppCache.Back();",
																							"translation": []
																						}
																					],
																					"data": []
																				}
																			]
																		},
																		{
																			"fieldNo": "d2007d73-f435-4b35-93e7-3bfd1f090c97",
																			"fieldName": "layoutShellTitle",
																			"fieldParent": "2e2b96ab-9829-41bb-fa2f-65f6065ff13a",
																			"fieldType": "sap.m.VBox",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "visible",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "renderType",
																					"grouping": "Properties",
																					"value": "Bare",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "justifyContent",
																					"grouping": "Properties",
																					"value": "Center",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "height",
																					"grouping": "Properties",
																					"value": "48px",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": [
																				{
																					"fieldNo": "b74e1ed2-e58e-49cb-de8b-eb2917943afc",
																					"fieldName": "AppCacheShellTitle",
																					"fieldParent": "d2007d73-f435-4b35-93e7-3bfd1f090c97",
																					"fieldType": "sap.m.Title",
																					"description": "",
																					"script": "",
																					"request": [],
																					"response": [],
																					"attributes": [
																						{
																							"attribute": "titleStyle",
																							"grouping": "Properties",
																							"value": "H5",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "styleClass",
																							"grouping": "Properties",
																							"value": "nepMobileTitle",
																							"script": "",
																							"translation": []
																						}
																					],
																					"data": []
																				}
																			]
																		},
																		{
																			"fieldNo": "7ef41e7f-b943-44ca-e1a6-b43d054d298b",
																			"fieldName": "AppCacheAppButton",
																			"fieldParent": "2e2b96ab-9829-41bb-fa2f-65f6065ff13a",
																			"fieldType": "sap.m.FlexBox",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "styleClassVisibility",
																					"grouping": "Properties",
																					"value": "sapUiVisibleOnlyOnDesktop",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "styleClass",
																					"grouping": "Properties",
																					"value": "nepTopGroups",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "renderType",
																					"grouping": "Properties",
																					"value": "Div",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "justifyContent",
																					"grouping": "Properties",
																					"value": "Start",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "fitContainer",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "alignContent",
																					"grouping": "Properties",
																					"value": "Center",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": [
																				{
																					"fieldNo": "4528a700-5d73-4b29-d25e-6a5c62d9d73b",
																					"fieldName": "AppCacheShellAppTitle",
																					"fieldParent": "7ef41e7f-b943-44ca-e1a6-b43d054d298b",
																					"fieldType": "sap.m.Title",
																					"description": "",
																					"script": "",
																					"request": [],
																					"response": [],
																					"attributes": [
																						{
																							"attribute": "titleStyle",
																							"grouping": "Properties",
																							"value": "H5",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "styleClassMargin",
																							"grouping": "Properties",
																							"value": "sapUiTinyMarginBegin",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "styleClass",
																							"grouping": "Properties",
																							"value": "nepMobileTitle",
																							"script": "",
																							"translation": []
																						}
																					],
																					"data": []
																				}
																			]
																		}
																	]
																}
															]
														},
														{
															"fieldNo": "846e90a2-99fd-4241-b5df-b99ad24d159d",
															"fieldName": "topContainerRight",
															"fieldParent": "a619f5c3-0886-47af-9882-8b0c0e84a7a2",
															"fieldType": "sap.m.VBox",
															"description": "",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "visible",
																	"grouping": "Properties",
																	"value": true,
																	"script": "",
																	"translation": []
																}
															],
															"data": [
																{
																	"fieldNo": "2e4678cf-9016-4d24-af10-108deecd35cc",
																	"fieldName": "topLayoutRight",
																	"fieldParent": "846e90a2-99fd-4241-b5df-b99ad24d159d",
																	"fieldType": "sap.m.HBox",
																	"description": "",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "visible",
																			"grouping": "Properties",
																			"value": true,
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "alignItems",
																			"grouping": "Properties",
																			"value": "Start",
																			"script": "",
																			"translation": []
																		}
																	],
																	"data": [
																		{
																			"fieldNo": "b0fd88f6-6c5a-4018-c5b9-123442d3c836",
																			"fieldName": "AppCacheShellOpenApps",
																			"fieldParent": "2e4678cf-9016-4d24-af10-108deecd35cc",
																			"fieldType": "sap.m.HBox",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "wrap",
																					"grouping": "Properties",
																					"value": "Wrap",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "visible",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "styleClassVisibility",
																					"grouping": "Properties",
																					"value": "sapUiHideOnPhone",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "styleClass",
																					"grouping": "Properties",
																					"value": "nepShellOpenApps",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "renderType",
																					"grouping": "Properties",
																					"value": "Div",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "justifyContent",
																					"grouping": "Properties",
																					"value": "End",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "fitContainer",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "46c42aa0-443e-4ef5-c1f5-4e3b36ae0ea6",
																			"fieldName": "AppCacheShellDebug",
																			"fieldParent": "2e4678cf-9016-4d24-af10-108deecd35cc",
																			"fieldType": "sap.m.Button",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "visible",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "type",
																					"grouping": "Properties",
																					"value": "Transparent",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "icon",
																					"grouping": "Properties",
																					"value": "sap-icon://fa-solid/bug",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "press",
																					"grouping": "Events",
																					"value": "sap.n.Debug.OpenDialog();",
																					"script": "sap.n.Debug.OpenDialog();",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "9e0f94d5-16e3-4b9d-ab4a-6c87f6a4b193",
																			"fieldName": "AppCacheShellNetwork",
																			"fieldParent": "2e4678cf-9016-4d24-af10-108deecd35cc",
																			"fieldType": "sap.m.Button",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "visible",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "type",
																					"grouping": "Properties",
																					"value": "Transparent",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "styleClass",
																					"grouping": "Properties",
																					"value": "iconNetwork",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "icon",
																					"grouping": "Properties",
																					"value": "sap-icon://feed",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "31e6a0fb-d282-41ce-d8e2-f8880e66b8fa",
																			"fieldName": "AppCacheShellHelp",
																			"fieldParent": "2e4678cf-9016-4d24-af10-108deecd35cc",
																			"fieldType": "sap.m.Button",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "visible",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "type",
																					"grouping": "Properties",
																					"value": "Transparent",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "icon",
																					"grouping": "Properties",
																					"value": "sap-icon://sys-help-2",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "press",
																					"grouping": "Events",
																					"value": "Anonymous Function",
																					"script": [
																						"==OBJECT STRING==",
																						"let rootDir = '/public/views/';",
																						"if (parseInt(AppCache.p9Version) <= 21) rootDir = '/views/';",
																						"",
																						"if (sap.n.Launchpad.isPhone()) {",
																						"    AppCache.Load('cockpit_doc_reader', {",
																						"        dialogShow: true,",
																						"        dialogTitle: AppCache_tHelp.getText(),",
																						"        dialogHideMinimize: true,",
																						"        dialogHideMosaic: true,",
																						"        dialogHideMaximize: true,",
																						"        rootDir: rootDir",
																						"    });",
																						"} else {",
																						"    sap.n.Shell.loadSidepanel('cockpit_doc_reader', sap.n.Launchpad.currentTile.title, {",
																						"        additionaltext: AppCache_tHelp.getText(),",
																						"        rootDir: rootDir",
																						"    });",
																						"}",
																						""
																					],
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "956f04f5-4528-4b72-d8f9-4875796f573c",
																			"fieldName": "AppCacheShellDialog",
																			"fieldParent": "2e4678cf-9016-4d24-af10-108deecd35cc",
																			"fieldType": "sap.m.Button",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "visible",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "type",
																					"grouping": "Properties",
																					"value": "Transparent",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "icon",
																					"grouping": "Properties",
																					"value": "sap-icon://drop-down-list",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "press",
																					"grouping": "Events",
																					"value": "AppCacheUserDialog.openBy(this);",
																					"script": "AppCacheUserDialog.openBy(this);",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "708a4487-6829-44c1-fd94-8fcf7d65e2a6",
																			"fieldName": "AppCacheShellUser",
																			"fieldParent": "2e4678cf-9016-4d24-af10-108deecd35cc",
																			"fieldType": "sap.m.Button",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "visible",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "type",
																					"grouping": "Properties",
																					"value": "Transparent",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "tooltip",
																					"grouping": "Properties",
																					"value": "User Menu",
																					"script": "",
																					"translation": [
																						{
																							"language": "1",
																							"value": "用户菜单"
																						},
																						{
																							"language": "A",
																							"value": "قائمة المستخدم"
																						},
																						{
																							"language": "D",
																							"value": "Benutzermenü"
																						},
																						{
																							"language": "F",
																							"value": "Menu utilisateur"
																						},
																						{
																							"language": "H",
																							"value": "felhasználói menü"
																						},
																						{
																							"language": "K",
																							"value": "Brugermenu"
																						},
																						{
																							"language": "O",
																							"value": "Brukermeny"
																						},
																						{
																							"language": "P",
																							"value": "menu do usuário"
																						},
																						{
																							"language": "R",
																							"value": "Меню пользователя"
																						},
																						{
																							"language": "S",
																							"value": "Menú del Usuario"
																						},
																						{
																							"language": "W",
																							"value": "Меню на потребителя"
																						},
																						{
																							"language": "IT",
																							"value": "Menu utente"
																						},
																						{
																							"language": "PL",
																							"value": "Menu użytkownika"
																						},
																						{
																							"language": "PT",
																							"value": "menu do usuário"
																						},
																						{
																							"language": "ES",
																							"value": "Menú del Usuario"
																						},
																						{
																							"language": "SV",
																							"value": "Användarmeny"
																						},
																						{
																							"language": "NO",
																							"value": "Brukermeny"
																						},
																						{
																							"language": "DE",
																							"value": "Benutzermenü"
																						},
																						{
																							"language": "EN",
																							"value": "User Menu"
																						}
																					]
																				},
																				{
																					"attribute": "styleClassMargin",
																					"grouping": "Properties",
																					"value": "sapUiSmallMarginEnd",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "styleClass",
																					"grouping": "Properties",
																					"value": "nepUserButton",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "iconFirst",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "iconDensityAware",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "icon",
																					"grouping": "Properties",
																					"value": "sap-icon://fa-solid/user-circle",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "enabled",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "press",
																					"grouping": "Events",
																					"value": "sap.n.Launchpad.settingsMenuOpen();",
																					"script": "sap.n.Launchpad.settingsMenuOpen();",
																					"translation": []
																				}
																			],
																			"data": []
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"fieldNo": "36db12ae-3e47-458d-fdbd-f4d20dabd690",
											"fieldName": "launchpadContent",
											"fieldParent": "b8bab2c5-8e19-4416-eae9-ff3a28d1cf24",
											"fieldType": "sap.m.FlexBox",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "styleClass",
													"grouping": "Properties",
													"value": "nepLaunchpadContent",
													"script": "",
													"translation": []
												},
												{
													"attribute": "renderType",
													"grouping": "Properties",
													"value": "Div",
													"script": "",
													"translation": []
												},
												{
													"attribute": "fitContainer",
													"grouping": "Properties",
													"value": "true",
													"script": "",
													"translation": []
												},
												{
													"attribute": "direction",
													"grouping": "Properties",
													"value": "Row",
													"script": "",
													"translation": []
												}
											],
											"data": [
												{
													"fieldNo": "68f33b51-c653-4e66-b16d-c0a4f58759d0",
													"fieldName": "launchpadContentMenu",
													"fieldParent": "36db12ae-3e47-458d-fdbd-f4d20dabd690",
													"fieldType": "sap.m.VBox",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "width",
															"grouping": "Properties",
															"value": "0px",
															"script": "",
															"translation": []
														},
														{
															"attribute": "styleClass",
															"grouping": "Properties",
															"value": "nepLaunchpadContentMenu",
															"script": "",
															"translation": []
														},
														{
															"attribute": "renderType",
															"grouping": "Properties",
															"value": "Div",
															"script": "",
															"translation": []
														},
														{
															"attribute": "height",
															"grouping": "Properties",
															"value": "100%",
															"script": "",
															"translation": []
														},
														{
															"attribute": "fitContainer",
															"grouping": "Properties",
															"value": "true",
															"script": "",
															"translation": []
														}
													],
													"data": [
														{
															"fieldNo": "4b20d572-4fd0-4ea8-bd4a-3388d845f3e9",
															"fieldName": "pageVerticalMenu",
															"fieldParent": "68f33b51-c653-4e66-b16d-c0a4f58759d0",
															"fieldType": "sap.m.Page",
															"description": "",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "visible",
																	"grouping": "Properties",
																	"value": true,
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "styleClass",
																	"grouping": "Properties",
																	"value": "nepMainBar nepMultiMenu",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "showSubHeader",
																	"grouping": "Properties",
																	"value": "false",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "showHeader",
																	"grouping": "Properties",
																	"value": true,
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "backgroundDesign",
																	"grouping": "Properties",
																	"value": "Transparent",
																	"script": "",
																	"translation": []
																}
															],
															"data": [
																{
																	"fieldNo": "ba1cb0d7-5438-40e4-8ce9-26f8babb451f",
																	"fieldName": "headerVerticalMenu",
																	"fieldParent": "4b20d572-4fd0-4ea8-bd4a-3388d845f3e9",
																	"fieldType": "sap.m.Bar",
																	"description": "",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "visible",
																			"grouping": "Properties",
																			"value": true,
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "position",
																			"grouping": "Parent",
																			"value": "setCustomHeader",
																			"script": "",
																			"translation": []
																		}
																	],
																	"data": [
																		{
																			"fieldNo": "9b3d3b9f-38f3-4e13-9730-ebd588b5b105",
																			"fieldName": "Left",
																			"fieldParent": "ba1cb0d7-5438-40e4-8ce9-26f8babb451f",
																			"fieldType": "neptune.BarContent",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "position",
																					"grouping": "Parent",
																					"value": "ContentLeft",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": [
																				{
																					"fieldNo": "23fd7be8-0042-457b-e328-d0227167763f",
																					"fieldName": "toolVerticalMenu",
																					"fieldParent": "9b3d3b9f-38f3-4e13-9730-ebd588b5b105",
																					"fieldType": "sap.m.Toolbar",
																					"description": "",
																					"script": "",
																					"request": [],
																					"response": [],
																					"attributes": [
																						{
																							"attribute": "width",
																							"grouping": "Properties",
																							"value": "100%",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "visible",
																							"grouping": "Properties",
																							"value": true,
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "styleClass",
																							"grouping": "Properties",
																							"value": "nepToolNoBorder",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "enabled",
																							"grouping": "Properties",
																							"value": true,
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "enableCompactMode",
																							"grouping": "Properties",
																							"value": true,
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "design",
																							"grouping": "Properties",
																							"value": "Transparent",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "position",
																							"grouping": "Parent",
																							"value": "HeaderToolbar",
																							"script": "",
																							"translation": []
																						}
																					],
																					"data": [
																						{
																							"fieldNo": "b1dc0efa-aa76-40a1-b72c-3953686c4c1b",
																							"fieldName": "toolVerticalMenuFilter",
																							"fieldParent": "23fd7be8-0042-457b-e328-d0227167763f",
																							"fieldType": "sap.m.SearchField",
																							"script": "",
																							"request": [],
																							"response": [],
																							"attributes": [
																								{
																									"attribute": "liveChange",
																									"grouping": "Events",
																									"value": "Anonymous Function",
																									"script": [
																										"==OBJECT STRING==",
																										"let binding = ContentMenu.getBinding('items');\r",
																										"let searchValue = this.getValue() || '';\r",
																										"let filterArr = [];\r",
																										"\r",
																										"// Use UI5 Filter to get results\r",
																										"if (!!searchValue) {\r",
																										"    filterArr.push(new sap.ui.model.Filter({\r",
																										"        filters: [\r",
																										"            new sap.ui.model.Filter('title', 'Contains', searchValue),\r",
																										"            new sap.ui.model.Filter('filter', 'Contains', searchValue),\r",
																										"            new sap.ui.model.Filter('tags', 'Contains', searchValue)\r",
																										"        ],\r",
																										"        and: false\r",
																										"    }));\r",
																										"}\r",
																										"\r",
																										"AppCacheShellSearchTags.getSelectedItems().forEach(function (item) {\r",
																										"    filterArr.push(new sap.ui.model.Filter('tags', 'Contains', item.getText()));\r",
																										"});\r",
																										"\r",
																										"binding.filter(filterArr);\r",
																										"\r",
																										"ContentMenu.expandToLevel(99);\r",
																										"sap.n.Launchpad.setMenuActiveState();"
																									],
																									"translation": []
																								}
																							],
																							"data": []
																						},
																						{
																							"fieldNo": "50288483-4bba-456c-e85b-6a383d9221c9",
																							"fieldName": "toolVerticalMenuTags",
																							"fieldParent": "23fd7be8-0042-457b-e328-d0227167763f",
																							"fieldType": "sap.m.Button",
																							"description": "",
																							"script": "",
																							"request": [],
																							"response": [],
																							"attributes": [
																								{
																									"attribute": "tooltip",
																									"grouping": "Properties",
																									"value": "Filter by tags",
																									"script": "",
																									"translation": [
																										{
																											"language": "1",
																											"value": "按标签过滤"
																										},
																										{
																											"language": "A",
																											"value": "التصفية حسب العلامات"
																										},
																										{
																											"language": "D",
																											"value": "Nach Tags filtern"
																										},
																										{
																											"language": "F",
																											"value": "Filtrer par tags"
																										},
																										{
																											"language": "H",
																											"value": "Szűrés címkék szerint"
																										},
																										{
																											"language": "K",
																											"value": "Filtrer efter tags"
																										},
																										{
																											"language": "O",
																											"value": "Filtrer etter tagger"
																										},
																										{
																											"language": "P",
																											"value": "Filtrar por tags"
																										},
																										{
																											"language": "R",
																											"value": "Фильтровать по тегам"
																										},
																										{
																											"language": "S",
																											"value": "Filtrar por etiquetas"
																										},
																										{
																											"language": "W",
																											"value": "Филтриране по тагове"
																										},
																										{
																											"language": "IT",
																											"value": "Filtra per tag"
																										},
																										{
																											"language": "PL",
																											"value": "Filtruj według tagów"
																										},
																										{
																											"language": "PT",
																											"value": "Filtrar por tags"
																										},
																										{
																											"language": "ES",
																											"value": "Filtrar por etiquetas"
																										},
																										{
																											"language": "SV",
																											"value": "Filtrera efter taggar"
																										},
																										{
																											"language": "NO",
																											"value": "Filtrer etter koder"
																										},
																										{
																											"language": "DE",
																											"value": "Nach Tags filtern"
																										},
																										{
																											"language": "EN",
																											"value": "Filter by tags"
																										}
																									]
																								},
																								{
																									"attribute": "iconFirst",
																									"grouping": "Properties",
																									"value": true,
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "iconDensityAware",
																									"grouping": "Properties",
																									"value": true,
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "icon",
																									"grouping": "Properties",
																									"value": "sap-icon://fa-solid/hashtag",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "enabled",
																									"grouping": "Properties",
																									"value": true,
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "press",
																									"grouping": "Events",
																									"value": "Anonymous Function",
																									"script": [
																										"==OBJECT STRING==",
																										"let show = !pageVerticalMenu.getShowSubHeader();",
																										"pageVerticalMenu.setShowSubHeader(show);",
																										"// if (!show) {",
																										"//     AppCacheShellSearchTags.removeAllSelectedItems();",
																										"//     toolVerticalMenuFilter.fireLiveChange();",
																										"// }",
																										""
																									],
																									"translation": []
																								}
																							],
																							"data": []
																						},
																						{
																							"fieldNo": "9d5c23a7-2d7f-4384-aa91-c11c6b8ed97c",
																							"fieldName": "toolVerticalMenuExpand",
																							"fieldParent": "23fd7be8-0042-457b-e328-d0227167763f",
																							"fieldType": "sap.m.Button",
																							"description": "",
																							"script": "",
																							"request": [],
																							"response": [],
																							"attributes": [
																								{
																									"attribute": "visible",
																									"grouping": "Properties",
																									"value": true,
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "tooltip",
																									"grouping": "Properties",
																									"value": "Expand",
																									"script": "",
																									"translation": [
																										{
																											"language": "1",
																											"value": "扩大"
																										},
																										{
																											"language": "A",
																											"value": "وسعت"
																										},
																										{
																											"language": "D",
																											"value": "Erweitern"
																										},
																										{
																											"language": "F",
																											"value": "Développer"
																										},
																										{
																											"language": "H",
																											"value": "Kiterjed"
																										},
																										{
																											"language": "K",
																											"value": "Udvide"
																										},
																										{
																											"language": "O",
																											"value": "Utvide"
																										},
																										{
																											"language": "P",
																											"value": "Expandir"
																										},
																										{
																											"language": "R",
																											"value": "расширять"
																										},
																										{
																											"language": "S",
																											"value": "Expandir"
																										},
																										{
																											"language": "W",
																											"value": "Разширете"
																										},
																										{
																											"language": "IT",
																											"value": "Espandere"
																										},
																										{
																											"language": "PL",
																											"value": "Rozszerzać"
																										},
																										{
																											"language": "PT",
																											"value": "Expandir"
																										},
																										{
																											"language": "ES",
																											"value": "Expandir"
																										},
																										{
																											"language": "SV",
																											"value": "Bygga ut"
																										},
																										{
																											"language": "NO",
																											"value": "Utvide"
																										},
																										{
																											"language": "DE",
																											"value": "Erweitern"
																										},
																										{
																											"language": "EN",
																											"value": "Expand"
																										}
																									]
																								},
																								{
																									"attribute": "iconFirst",
																									"grouping": "Properties",
																									"value": true,
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "iconDensityAware",
																									"grouping": "Properties",
																									"value": true,
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "icon",
																									"grouping": "Properties",
																									"value": "sap-icon://expand-group",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "enabled",
																									"grouping": "Properties",
																									"value": true,
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "press",
																									"grouping": "Events",
																									"value": "Anonymous Function",
																									"script": [
																										"==OBJECT STRING==",
																										"ContentMenu.expandToLevel(99);",
																										"sap.n.Launchpad.setMenuActiveState();",
																										"",
																										"sap.n.Launchpad.openAppExpanded = true;",
																										"sap.n.Launchpad.setOpenAppsExpanded();",
																										""
																									],
																									"translation": []
																								}
																							],
																							"data": []
																						},
																						{
																							"fieldNo": "9eab9319-a918-475f-e46d-06f9640fa8f4",
																							"fieldName": "toolVerticalMenuCollapse",
																							"fieldParent": "23fd7be8-0042-457b-e328-d0227167763f",
																							"fieldType": "sap.m.Button",
																							"description": "",
																							"script": "",
																							"request": [],
																							"response": [],
																							"attributes": [
																								{
																									"attribute": "visible",
																									"grouping": "Properties",
																									"value": true,
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "tooltip",
																									"grouping": "Properties",
																									"value": "Collapse",
																									"script": "",
																									"translation": [
																										{
																											"language": "1",
																											"value": "坍方"
																										},
																										{
																											"language": "A",
																											"value": "انهيار"
																										},
																										{
																											"language": "D",
																											"value": "Zusammenbruch"
																										},
																										{
																											"language": "F",
																											"value": "Effondrer"
																										},
																										{
																											"language": "H",
																											"value": "Összeomlás"
																										},
																										{
																											"language": "K",
																											"value": "Falde sammen"
																										},
																										{
																											"language": "O",
																											"value": "Kollapse"
																										},
																										{
																											"language": "P",
																											"value": "Colapso"
																										},
																										{
																											"language": "R",
																											"value": "коллапс"
																										},
																										{
																											"language": "S",
																											"value": "Colapso"
																										},
																										{
																											"language": "W",
																											"value": "колапс"
																										},
																										{
																											"language": "IT",
																											"value": "Crollo"
																										},
																										{
																											"language": "PL",
																											"value": "Zawalić się"
																										},
																										{
																											"language": "PT",
																											"value": "Colapso"
																										},
																										{
																											"language": "ES",
																											"value": "Colapso"
																										},
																										{
																											"language": "SV",
																											"value": "Kollaps"
																										},
																										{
																											"language": "NO",
																											"value": "Kollapse"
																										},
																										{
																											"language": "DE",
																											"value": "Zusammenbruch"
																										},
																										{
																											"language": "EN",
																											"value": "Collapse"
																										}
																									]
																								},
																								{
																									"attribute": "iconFirst",
																									"grouping": "Properties",
																									"value": true,
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "iconDensityAware",
																									"grouping": "Properties",
																									"value": true,
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "icon",
																									"grouping": "Properties",
																									"value": "sap-icon://collapse-group",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "enabled",
																									"grouping": "Properties",
																									"value": true,
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "press",
																									"grouping": "Events",
																									"value": "Anonymous Function",
																									"script": [
																										"==OBJECT STRING==",
																										"ContentMenu.expandToLevel(0);",
																										"sap.n.Launchpad.setMenuActiveState();",
																										"",
																										"sap.n.Launchpad.openAppExpanded = false;",
																										"sap.n.Launchpad.setOpenAppsExpanded();",
																										""
																									],
																									"translation": []
																								}
																							],
																							"data": []
																						}
																					]
																				}
																			]
																		}
																	]
																},
																{
																	"fieldNo": "ac7c4304-fdd7-4f0a-83c6-5b86f316bc1d",
																	"fieldName": "subHeaderVerticalMenu",
																	"fieldParent": "4b20d572-4fd0-4ea8-bd4a-3388d845f3e9",
																	"fieldType": "sap.m.Bar",
																	"description": "",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "visible",
																			"grouping": "Properties",
																			"value": true,
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "styleClass",
																			"grouping": "Properties",
																			"value": "nepMainBarSubHeader2",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "position",
																			"grouping": "Parent",
																			"value": "setSubHeader",
																			"script": "",
																			"translation": []
																		}
																	],
																	"data": [
																		{
																			"fieldNo": "5d828049-c475-47a2-d2b8-9bff0e4a6889",
																			"fieldName": "Left",
																			"fieldParent": "ac7c4304-fdd7-4f0a-83c6-5b86f316bc1d",
																			"fieldType": "neptune.BarContent",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "position",
																					"grouping": "Parent",
																					"value": "ContentLeft",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": [
																				{
																					"fieldNo": "94a845a7-8bfb-49c9-b077-78ffd9190166",
																					"fieldName": "toolVerticalMenuSub",
																					"fieldParent": "5d828049-c475-47a2-d2b8-9bff0e4a6889",
																					"fieldType": "sap.m.Toolbar",
																					"description": "",
																					"script": "",
																					"request": [],
																					"response": [],
																					"attributes": [
																						{
																							"attribute": "visible",
																							"grouping": "Properties",
																							"value": true,
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "styleClass",
																							"grouping": "Properties",
																							"value": "nepToolNoBorder",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "enabled",
																							"grouping": "Properties",
																							"value": true,
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "enableCompactMode",
																							"grouping": "Properties",
																							"value": true,
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "design",
																							"grouping": "Properties",
																							"value": "Transparent",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "position",
																							"grouping": "Parent",
																							"value": "HeaderToolbar",
																							"script": "",
																							"translation": []
																						}
																					],
																					"data": [
																						{
																							"fieldNo": "4c041dbe-9247-4178-ec8b-cc4bfcaa0ee9",
																							"fieldName": "AppCacheShellSearchTags",
																							"fieldParent": "94a845a7-8bfb-49c9-b077-78ffd9190166",
																							"fieldType": "sap.m.MultiComboBox",
																							"description": "",
																							"script": "",
																							"request": [],
																							"response": [],
																							"attributes": [
																								{
																									"attribute": "placeholder",
																									"grouping": "Properties",
																									"value": "Filter by tags",
																									"script": "",
																									"translation": [
																										{
																											"language": "1",
																											"value": "按标签过滤"
																										},
																										{
																											"language": "A",
																											"value": "التصفية حسب العلامات"
																										},
																										{
																											"language": "D",
																											"value": "Nach Tags filtern"
																										},
																										{
																											"language": "F",
																											"value": "Filtrer par tags"
																										},
																										{
																											"language": "H",
																											"value": "Szűrés címkék szerint"
																										},
																										{
																											"language": "K",
																											"value": "Filtrer efter tags"
																										},
																										{
																											"language": "O",
																											"value": "Filtrer etter tagger"
																										},
																										{
																											"language": "P",
																											"value": "Filtrar por tags"
																										},
																										{
																											"language": "R",
																											"value": "Фильтровать по тегам"
																										},
																										{
																											"language": "S",
																											"value": "Filtrar por etiquetas"
																										},
																										{
																											"language": "W",
																											"value": "Филтриране по тагове"
																										},
																										{
																											"language": "IT",
																											"value": "Filtra per tag"
																										},
																										{
																											"language": "PL",
																											"value": "Filtruj według tagów"
																										},
																										{
																											"language": "PT",
																											"value": "Filtrar por tags"
																										},
																										{
																											"language": "ES",
																											"value": "Filtrar por etiquetas"
																										},
																										{
																											"language": "SV",
																											"value": "Filtrera efter taggar"
																										},
																										{
																											"language": "NO",
																											"value": "Filtrer etter koder"
																										},
																										{
																											"language": "DE",
																											"value": "Nach Tags filtern"
																										},
																										{
																											"language": "EN",
																											"value": "Filter by tags"
																										}
																									]
																								},
																								{
																									"attribute": "selectionChange",
																									"grouping": "Events",
																									"value": "Anonymous Function",
																									"script": [
																										"==OBJECT STRING==",
																										"//",
																										"toolVerticalMenuFilter.fireLiveChange();",
																										"this.close();",
																										""
																									],
																									"translation": []
																								}
																							],
																							"data": []
																						}
																					]
																				}
																			]
																		}
																	]
																},
																{
																	"fieldNo": "fb80099a-5a4f-4947-97e7-10fa4ed97048",
																	"fieldName": "scrollVerticalMenu",
																	"fieldParent": "4b20d572-4fd0-4ea8-bd4a-3388d845f3e9",
																	"fieldType": "sap.m.ScrollContainer",
																	"description": "",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "vertical",
																			"grouping": "Properties",
																			"value": "true",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "height",
																			"grouping": "Properties",
																			"value": "100%",
																			"script": "",
																			"translation": []
																		}
																	],
																	"data": [
																		{
																			"fieldNo": "6f1ec9ad-e98a-4799-b12d-c745e8029ef6",
																			"fieldName": "appContainerVertical",
																			"fieldParent": "fb80099a-5a4f-4947-97e7-10fa4ed97048",
																			"fieldType": "sap.m.VBox",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [],
																			"data": [
																				{
																					"fieldNo": "a7739842-472d-4ad5-cfde-57d15acc1c68",
																					"fieldName": "appGhost",
																					"fieldParent": "6f1ec9ad-e98a-4799-b12d-c745e8029ef6",
																					"fieldType": "sap.m.VBox",
																					"description": "",
																					"script": "",
																					"request": [],
																					"response": [],
																					"attributes": [],
																					"data": [
																						{
																							"fieldNo": "53c2e325-ae09-44a6-f70c-af78d6b185cf",
																							"fieldName": "openAppMaster",
																							"fieldParent": "a7739842-472d-4ad5-cfde-57d15acc1c68",
																							"fieldType": "sap.m.Button",
																							"description": "",
																							"script": "",
																							"request": [],
																							"response": [],
																							"attributes": [
																								{
																									"attribute": "text",
																									"grouping": "Properties",
																									"value": "Active Apps",
																									"script": "",
																									"translation": [
																										{
																											"language": "1",
																											"value": "活动应用"
																										},
																										{
																											"language": "A",
																											"value": "التطبيقات النشطة"
																										},
																										{
																											"language": "D",
																											"value": "Aktive Apps"
																										},
																										{
																											"language": "F",
																											"value": "Applications actives"
																										},
																										{
																											"language": "H",
																											"value": "Aktív alkalmazások"
																										},
																										{
																											"language": "K",
																											"value": "Aktive apps"
																										},
																										{
																											"language": "O",
																											"value": "Aktive apper"
																										},
																										{
																											"language": "P",
																											"value": "Aplicativos ativos"
																										},
																										{
																											"language": "R",
																											"value": "Активные приложения"
																										},
																										{
																											"language": "S",
																											"value": "Aplicaciones activas"
																										},
																										{
																											"language": "W",
																											"value": "Активни приложения"
																										},
																										{
																											"language": "IT",
																											"value": "App attive"
																										},
																										{
																											"language": "PL",
																											"value": "Aktywne aplikacje"
																										},
																										{
																											"language": "PT",
																											"value": "Apps ativos"
																										},
																										{
																											"language": "ES",
																											"value": "Aplicaciones activas"
																										},
																										{
																											"language": "SV",
																											"value": "Aktiva appar"
																										},
																										{
																											"language": "NO",
																											"value": "Aktive apper"
																										},
																										{
																											"language": "DE",
																											"value": "Aktive Apps"
																										},
																										{
																											"language": "EN",
																											"value": "Active Apps"
																										}
																									]
																								},
																								{
																									"attribute": "styleClass",
																									"grouping": "Properties",
																									"value": "nepOpenAppsBtn nepOpenAppsBtnMaster",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "iconFirst",
																									"grouping": "Properties",
																									"value": true,
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "iconDensityAware",
																									"grouping": "Properties",
																									"value": true,
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "icon",
																									"grouping": "Properties",
																									"value": "sap-icon://fa-solid/caret-down",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "enabled",
																									"grouping": "Properties",
																									"value": true,
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "press",
																									"grouping": "Events",
																									"value": "Anonymous Function",
																									"script": [
																										"==OBJECT STRING==",
																										"sap.n.Launchpad.openAppExpanded = !sap.n.Launchpad.openAppExpanded;",
																										"sap.n.Launchpad.setOpenAppsExpanded();",
																										"",
																										"// sap.n.Utils.userSetting.update({",
																										"//     AREA: \"LAUNCHPAD\",",
																										"//     GROUPING: \"MULTI_MENU\",",
																										"//     NAME: \"EXPAND_OPEN_APPS\",",
																										"//     KEY0: \"Expand\",",
																										"//     VAL0: sap.n.Launchpad.openAppExpanded ? \"yes\" : \"no\"",
																										"// });",
																										""
																									],
																									"translation": []
																								}
																							],
																							"data": []
																						},
																						{
																							"fieldNo": "66cf3724-f69e-4943-d66a-3f550fb3cde6",
																							"fieldName": "openApps",
																							"fieldParent": "a7739842-472d-4ad5-cfde-57d15acc1c68",
																							"fieldType": "sap.m.VBox",
																							"description": "",
																							"script": "",
																							"request": [],
																							"response": [],
																							"attributes": [],
																							"data": []
																						}
																					]
																				}
																			]
																		},
																		{
																			"fieldNo": "0680cb82-818e-49f4-fea2-113e608a5db2",
																			"fieldName": "ContentMenu",
																			"fieldParent": "fb80099a-5a4f-4947-97e7-10fa4ed97048",
																			"fieldType": "sap.m.Tree",
																			"description": "",
																			"script": "",
																			"odataSource": "ID",
																			"bindingValue": "Generic Array",
																			"bindingType": "h",
																			"bindingSource": "P9",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "visible",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "styleClass",
																					"grouping": "Properties",
																					"value": "nepTreeCategory",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showSeparators",
																					"grouping": "Properties",
																					"value": "None",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "modeAnimationOn",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "mode",
																					"grouping": "Properties",
																					"value": "SingleSelectMaster",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "setInitLoad",
																					"grouping": "Model",
																					"value": "cache",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "setEnableCache",
																					"grouping": "Model",
																					"value": true,
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "setCacheType",
																					"grouping": "Model",
																					"value": "IndexedDB",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "itemPress",
																					"grouping": "Events",
																					"value": "Anonymous Function",
																					"script": [
																						"==OBJECT STRING==",
																						"let selectedItem = this.getSelectedItem();",
																						"if (selectedItem) {",
																						"    sap.n.Launchpad.handleTreeNavigation(selectedItem);",
																						"    ContentMenu.removeSelections();",
																						"}",
																						""
																					],
																					"translation": []
																				},
																				{
																					"attribute": "toggleOpenState",
																					"grouping": "Events",
																					"value": "Anonymous Function",
																					"script": [
																						"==OBJECT STRING==",
																						"sap.n.Launchpad.setMenuActiveState();",
																						""
																					],
																					"translation": []
																				}
																			],
																			"data": [
																				{
																					"fieldNo": "c5c2f890-5961-422f-a9f8-dfe5d3c96df1",
																					"fieldName": "itemContentMenu",
																					"fieldParent": "0680cb82-818e-49f4-fea2-113e608a5db2",
																					"fieldType": "sap.m.StandardTreeItem",
																					"description": "",
																					"script": "",
																					"request": [],
																					"response": [],
																					"attributes": [
																						{
																							"attribute": "visible",
																							"grouping": "Properties",
																							"value": true,
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "type",
																							"grouping": "Properties",
																							"value": "Active",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "title",
																							"grouping": "Properties",
																							"value": "{title}",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "icon",
																							"grouping": "Properties",
																							"value": "{icon}",
																							"script": "",
																							"translation": []
																						}
																					],
																					"data": []
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"fieldNo": "fc07027c-537f-43d6-9600-6643ad413e6c",
													"fieldName": "launchpadContentNavigator",
													"fieldParent": "36db12ae-3e47-458d-fdbd-f4d20dabd690",
													"fieldType": "sap.m.VBox",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "width",
															"grouping": "Properties",
															"value": "0px",
															"script": "",
															"translation": []
														},
														{
															"attribute": "styleClass",
															"grouping": "Properties",
															"value": "nepLaunchpadContentNavigator",
															"script": "",
															"translation": []
														},
														{
															"attribute": "renderType",
															"grouping": "Properties",
															"value": "Div",
															"script": "",
															"translation": []
														},
														{
															"attribute": "fitContainer",
															"grouping": "Properties",
															"value": "true",
															"script": "",
															"translation": []
														}
													],
													"data": [
														{
															"fieldNo": "4010edf9-8d08-43b9-c6d6-7afc4e046497",
															"fieldName": "navBar",
															"fieldParent": "fc07027c-537f-43d6-9600-6643ad413e6c",
															"fieldType": "sap.m.Panel",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "styleClassPadding",
																	"grouping": "Properties",
																	"value": "sapUiNoContentPadding",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "styleClass",
																	"grouping": "Properties",
																	"value": "nepNavBar",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "height",
																	"grouping": "Properties",
																	"value": "100%",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "backgroundDesign",
																	"grouping": "Properties",
																	"value": "Transparent",
																	"script": "",
																	"translation": []
																}
															],
															"data": [
																{
																	"fieldNo": "84acadd7-0420-4d7e-b44d-8396e89a5360",
																	"fieldName": "navBarToolbar",
																	"fieldParent": "4010edf9-8d08-43b9-c6d6-7afc4e046497",
																	"fieldType": "sap.m.Toolbar",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "visible",
																			"grouping": "Properties",
																			"value": "false",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "position",
																			"grouping": "Parent",
																			"value": "HeaderToolbar",
																			"script": "",
																			"translation": []
																		}
																	],
																	"data": []
																},
																{
																	"fieldNo": "8c3bbee6-4190-4afa-f8eb-5eb3b71c3a1d",
																	"fieldName": "blockRunning",
																	"fieldParent": "4010edf9-8d08-43b9-c6d6-7afc4e046497",
																	"fieldType": "sap.ui.layout.BlockLayout",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "background",
																			"grouping": "Properties",
																			"value": "Default",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "styleClassPadding",
																			"grouping": "Properties",
																			"value": "sapUiNoContentPadding",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "keepFontSize",
																			"grouping": "Properties",
																			"value": "true",
																			"script": "",
																			"translation": []
																		}
																	],
																	"data": [
																		{
																			"fieldNo": "802af733-c055-41e9-b4f3-ca870c2f24f2",
																			"fieldName": "blockRunningRow",
																			"fieldParent": "8c3bbee6-4190-4afa-f8eb-5eb3b71c3a1d",
																			"fieldType": "sap.ui.layout.BlockLayoutRow",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [],
																			"data": []
																		}
																	]
																}
															]
														}
													]
												},
												{
													"fieldNo": "ca3cf1f0-0286-40f7-e920-e748d2e947a9",
													"fieldName": "launchpadContentMain",
													"fieldParent": "36db12ae-3e47-458d-fdbd-f4d20dabd690",
													"fieldType": "sap.m.VBox",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "width",
															"grouping": "Properties",
															"value": "100%",
															"script": "",
															"translation": []
														},
														{
															"attribute": "styleClass",
															"grouping": "Properties",
															"value": "nepLaunchpadContentMain",
															"script": "",
															"translation": []
														},
														{
															"attribute": "renderType",
															"grouping": "Properties",
															"value": "Div",
															"script": "",
															"translation": []
														},
														{
															"attribute": "fitContainer",
															"grouping": "Properties",
															"value": "true",
															"script": "",
															"translation": []
														}
													],
													"data": [
														{
															"fieldNo": "5a16303b-ceb7-4784-a46e-372ded7ab833",
															"fieldName": "AppCacheShellUI",
															"fieldParent": "ca3cf1f0-0286-40f7-e920-e748d2e947a9",
															"fieldType": "sap.m.Shell",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "styleClass",
																	"grouping": "Properties",
																	"value": "nepShell",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "backgroundColor",
																	"grouping": "Properties",
																	"value": "transparent",
																	"script": "",
																	"translation": []
																}
															],
															"data": [
																{
																	"fieldNo": "d6027101-d2e8-4829-db73-7f2b38519a3b",
																	"fieldName": "AppCacheNav",
																	"fieldParent": "5a16303b-ceb7-4784-a46e-372ded7ab833",
																	"fieldType": "sap.m.NavContainer",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "defaultTransitionName",
																			"grouping": "Properties",
																			"value": "show",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "afterNavigate",
																			"grouping": "Events",
																			"value": "Anonymous Function",
																			"script": [
																				"==OBJECT STRING==",
																				"// Check for page content. Could be deleted after onOffline/onOnline and RebuildTiles\r",
																				"let currentPage = AppCacheNav.getCurrentPage();\r",
																				"\r",
																				"// Only for Tile Group + Childs \r",
																				"if (currentPage.sId.indexOf('page') > -1 && !currentPage.getContent().length) {\r",
																				"    let cat = currentPage.sId;\r",
																				"    cat = cat.split('page')[1];\r",
																				"    let dataCat = ModelData.FindFirst(AppCacheCategory, 'id', cat);\r",
																				"\r",
																				"    if (dataCat) {\r",
																				"        sap.n.Launchpad.BuildTiles(dataCat);\r",
																				"    } else {\r",
																				"        dataCat = ModelData.FindFirst(AppCacheCategoryChild, 'id', cat);\r",
																				"        if (dataCat) sap.n.Launchpad.BuildTiles(dataCat, dataCat.id);\r",
																				"    }\r",
																				"}\r",
																				""
																			],
																			"translation": []
																		}
																	],
																	"data": [
																		{
																			"fieldNo": "dd3d8673-781e-4cb6-bdc6-e3b29a3a8eba",
																			"fieldName": "AppCachePageMenu",
																			"fieldParent": "d6027101-d2e8-4829-db73-7f2b38519a3b",
																			"fieldType": "sap.m.Page",
																			"script": "",
																			"bindingType": "u",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "styleClass",
																					"grouping": "Properties",
																					"value": "nepPage",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showHeader",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showFooter",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "backgroundDesign",
																					"grouping": "Properties",
																					"value": "Transparent",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "2acab870-3b8e-4f4f-f2d8-26df59161072",
																			"fieldName": "AppCachePageStore",
																			"fieldParent": "d6027101-d2e8-4829-db73-7f2b38519a3b",
																			"fieldType": "sap.m.Page",
																			"script": "",
																			"bindingValue": "Generic Object",
																			"bindingType": "u",
																			"bindingSource": "P9",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "styleClassPadding",
																					"grouping": "Properties",
																					"value": "sapUiResponsiveContentPadding",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "styleClass",
																					"grouping": "Properties",
																					"value": "nepPage",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showHeader",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showFooter",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "backgroundDesign",
																					"grouping": "Properties",
																					"value": "Transparent",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": [
																				{
																					"fieldNo": "f345cb65-8c30-4f25-8019-98557904269e",
																					"fieldName": "oContentBlockLayout",
																					"fieldParent": "2acab870-3b8e-4f4f-f2d8-26df59161072",
																					"fieldType": "sap.ui.layout.BlockLayout",
																					"script": "",
																					"request": [],
																					"response": [],
																					"attributes": [
																						{
																							"attribute": "background",
																							"grouping": "Properties",
																							"value": "Default",
																							"script": "",
																							"translation": []
																						}
																					],
																					"data": [
																						{
																							"fieldNo": "1288f912-c170-45ae-9444-d0862d7f94ef",
																							"fieldName": "oDetailsBlockLayoutRrow",
																							"fieldParent": "f345cb65-8c30-4f25-8019-98557904269e",
																							"fieldType": "sap.ui.layout.BlockLayoutRow",
																							"script": "",
																							"request": [],
																							"response": [],
																							"attributes": [],
																							"data": [
																								{
																									"fieldNo": "39787ae1-c7a8-4bfa-d2d2-459527bd5c5e",
																									"fieldName": "oTileLayoutCell",
																									"fieldParent": "1288f912-c170-45ae-9444-d0862d7f94ef",
																									"fieldType": "sap.ui.layout.BlockLayoutCell",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "width",
																											"grouping": "Properties",
																											"value": "65",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "styleClass",
																											"grouping": "Properties",
																											"value": "nepTileCards",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "backgroundColorSet",
																											"grouping": "Properties",
																											"value": "ColorSet9",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "backgroundColorShade",
																											"grouping": "Properties",
																											"value": "ShadeB",
																											"script": "",
																											"translation": []
																										}
																									],
																									"data": [
																										{
																											"fieldNo": "19fac503-9c6f-42e0-bd48-5f1efd550b15",
																											"fieldName": "oTileGrid",
																											"fieldParent": "39787ae1-c7a8-4bfa-d2d2-459527bd5c5e",
																											"fieldType": "sap.m.VBox",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "width",
																													"grouping": "Properties",
																													"value": "100%",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "sapUiDemoKitStoreGrid",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "height",
																													"grouping": "Properties",
																													"value": "100%",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "alignContent",
																													"grouping": "Properties",
																													"value": "Start",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": [
																												{
																													"fieldNo": "400e2e3b-0673-4295-d31e-e9cf75211058",
																													"fieldName": "oTileContent",
																													"fieldParent": "19fac503-9c6f-42e0-bd48-5f1efd550b15",
																													"fieldType": "sap.m.VBox",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "width",
																															"grouping": "Properties",
																															"value": "100%",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "alignContent",
																															"grouping": "Properties",
																															"value": "Start",
																															"script": "",
																															"translation": []
																														}
																													],
																													"data": [
																														{
																															"fieldNo": "b8525ba4-71f5-4dfc-bd75-37d5889cb4a3",
																															"fieldName": "oHBoxTitle",
																															"fieldParent": "400e2e3b-0673-4295-d31e-e9cf75211058",
																															"fieldType": "sap.m.HBox",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "width",
																																	"grouping": "Properties",
																																	"value": "100%",
																																	"script": "",
																																	"translation": []
																																},
																																{
																																	"attribute": "justifyContent",
																																	"grouping": "Properties",
																																	"value": "SpaceBetween",
																																	"script": "",
																																	"translation": []
																																},
																																{
																																	"attribute": "alignContent",
																																	"grouping": "Properties",
																																	"value": "Start",
																																	"script": "",
																																	"translation": []
																																}
																															],
																															"data": [
																																{
																																	"fieldNo": "628e6149-456e-42de-c47a-33e35a051841",
																																	"fieldName": "oTitleContentTitle",
																																	"fieldParent": "b8525ba4-71f5-4dfc-bd75-37d5889cb4a3",
																																	"fieldType": "sap.m.Title",
																																	"script": "",
																																	"request": [],
																																	"response": [],
																																	"attributes": [
																																		{
																																			"attribute": "titleStyle",
																																			"grouping": "Properties",
																																			"value": "H2",
																																			"script": "",
																																			"translation": []
																																		},
																																		{
																																			"attribute": "text",
																																			"grouping": "Properties",
																																			"value": "{/name}",
																																			"script": "",
																																			"translation": []
																																		}
																																	],
																																	"data": []
																																},
																																{
																																	"fieldNo": "fdb2234e-0fdc-4f12-d081-3eec9614060e",
																																	"fieldName": "oTitleContentVersion",
																																	"fieldParent": "b8525ba4-71f5-4dfc-bd75-37d5889cb4a3",
																																	"fieldType": "sap.m.Title",
																																	"script": "",
																																	"request": [],
																																	"response": [],
																																	"attributes": [
																																		{
																																			"attribute": "titleStyle",
																																			"grouping": "Properties",
																																			"value": "H2",
																																			"script": "",
																																			"translation": []
																																		},
																																		{
																																			"attribute": "text",
																																			"grouping": "Properties",
																																			"value": "{/activeVersion}",
																																			"script": "",
																																			"translation": []
																																		}
																																	],
																																	"data": []
																																}
																															]
																														},
																														{
																															"fieldNo": "95f01ab7-2924-4d26-dea8-42d9daffa17c",
																															"fieldName": "oTileTimestamp",
																															"fieldParent": "400e2e3b-0673-4295-d31e-e9cf75211058",
																															"fieldType": "sap.m.ObjectStatus",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "title",
																																	"grouping": "Properties",
																																	"value": "Published",
																																	"script": "",
																																	"translation": [
																																		{
																																			"language": "JA",
																																			"value": "公開済み"
																																		},
																																		{
																																			"language": "ZH",
																																			"value": "发布时间"
																																		},
																																		{
																																			"language": "DA",
																																			"value": "Udgivet"
																																		},
																																		{
																																			"language": "NL",
																																			"value": "Gepubliceerd"
																																		},
																																		{
																																			"language": "FI",
																																			"value": "Julkaistu"
																																		},
																																		{
																																			"language": "IT",
																																			"value": "Pubblicato"
																																		},
																																		{
																																			"language": "PL",
																																			"value": "Opublikowany"
																																		},
																																		{
																																			"language": "PT",
																																			"value": "Publicados"
																																		},
																																		{
																																			"language": "ES",
																																			"value": "Publicado"
																																		},
																																		{
																																			"language": "SV",
																																			"value": "Publicerad"
																																		},
																																		{
																																			"language": "FR",
																																			"value": "Publié"
																																		},
																																		{
																																			"language": "NO",
																																			"value": "Publisert"
																																		},
																																		{
																																			"language": "DE",
																																			"value": "Freigegeben"
																																		},
																																		{
																																			"language": "EN",
																																			"value": "Published"
																																		}
																																	]
																																},
																																{
																																	"attribute": "text",
																																	"grouping": "Properties",
																																	"value": "{/activeBuild/updatedAt}",
																																	"script": "",
																																	"translation": []
																																},
																																{
																																	"attribute": "text",
																																	"grouping": "Formatter",
																																	"value": "date:BrowserSetting",
																																	"script": "",
																																	"translation": []
																																}
																															],
																															"data": []
																														},
																														{
																															"fieldNo": "6721b492-8344-4906-da75-d4979743cf9c",
																															"fieldName": "oTilePublisher",
																															"fieldParent": "400e2e3b-0673-4295-d31e-e9cf75211058",
																															"fieldType": "sap.m.ObjectStatus",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "title",
																																	"grouping": "Properties",
																																	"value": "Publisher",
																																	"script": "",
																																	"translation": [
																																		{
																																			"language": "JA",
																																			"value": "出版社"
																																		},
																																		{
																																			"language": "ZH",
																																			"value": "出版者"
																																		},
																																		{
																																			"language": "DA",
																																			"value": "Forlægger"
																																		},
																																		{
																																			"language": "NL",
																																			"value": "Uitgeverij"
																																		},
																																		{
																																			"language": "FI",
																																			"value": "Kustantaja"
																																		},
																																		{
																																			"language": "IT",
																																			"value": "Editore"
																																		},
																																		{
																																			"language": "PL",
																																			"value": "Wydawca"
																																		},
																																		{
																																			"language": "PT",
																																			"value": "Editor"
																																		},
																																		{
																																			"language": "ES",
																																			"value": "Editor"
																																		},
																																		{
																																			"language": "SV",
																																			"value": "Utgivare"
																																		},
																																		{
																																			"language": "FR",
																																			"value": "Éditeur"
																																		},
																																		{
																																			"language": "NO",
																																			"value": "Forlegger"
																																		},
																																		{
																																			"language": "DE",
																																			"value": "Herausgeber"
																																		},
																																		{
																																			"language": "EN",
																																			"value": "Publisher"
																																		}
																																	]
																																},
																																{
																																	"attribute": "text",
																																	"grouping": "Properties",
																																	"value": "{/activeBuild/changedBy}",
																																	"script": "",
																																	"translation": []
																																}
																															],
																															"data": []
																														},
																														{
																															"fieldNo": "fcb17e1d-2b42-41bd-fdd9-ff5780f0f2bb",
																															"fieldName": "oTitleDescription",
																															"fieldParent": "400e2e3b-0673-4295-d31e-e9cf75211058",
																															"fieldType": "sap.m.Title",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "titleStyle",
																																	"grouping": "Properties",
																																	"value": "H4",
																																	"script": "",
																																	"translation": []
																																},
																																{
																																	"attribute": "text",
																																	"grouping": "Properties",
																																	"value": "Description",
																																	"script": "",
																																	"translation": [
																																		{
																																			"language": "JA",
																																			"value": "説明"
																																		},
																																		{
																																			"language": "ZH",
																																			"value": "描述"
																																		},
																																		{
																																			"language": "DA",
																																			"value": "Beskrivelse"
																																		},
																																		{
																																			"language": "NL",
																																			"value": "Omschrijving"
																																		},
																																		{
																																			"language": "FI",
																																			"value": "Kuvaus"
																																		},
																																		{
																																			"language": "IT",
																																			"value": "Descrizione"
																																		},
																																		{
																																			"language": "PL",
																																			"value": "Opis"
																																		},
																																		{
																																			"language": "PT",
																																			"value": "Descrição"
																																		},
																																		{
																																			"language": "ES",
																																			"value": "Descripción"
																																		},
																																		{
																																			"language": "SV",
																																			"value": "Beskrivning"
																																		},
																																		{
																																			"language": "FR",
																																			"value": "La description"
																																		},
																																		{
																																			"language": "NO",
																																			"value": "Beskrivelse"
																																		},
																																		{
																																			"language": "DE",
																																			"value": "Beschreibung"
																																		},
																																		{
																																			"language": "EN",
																																			"value": "Description"
																																		}
																																	]
																																},
																																{
																																	"attribute": "styleClassMargin",
																																	"grouping": "Properties",
																																	"value": "sapUiMediumMarginTop",
																																	"script": "",
																																	"translation": []
																																}
																															],
																															"data": []
																														},
																														{
																															"fieldNo": "14ad178f-3346-4d0e-c0c2-65df5897d222",
																															"fieldName": "oTileDescription",
																															"fieldParent": "400e2e3b-0673-4295-d31e-e9cf75211058",
																															"fieldType": "sap.m.ObjectStatus",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "text",
																																	"grouping": "Properties",
																																	"value": "{/description}",
																																	"script": "",
																																	"translation": []
																																}
																															],
																															"data": []
																														},
																														{
																															"fieldNo": "32d8b601-7a23-46e1-ac69-6c613895c9e9",
																															"fieldName": "oTitleAuthor",
																															"fieldParent": "400e2e3b-0673-4295-d31e-e9cf75211058",
																															"fieldType": "sap.m.Title",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "titleStyle",
																																	"grouping": "Properties",
																																	"value": "H4",
																																	"script": "",
																																	"translation": []
																																},
																																{
																																	"attribute": "text",
																																	"grouping": "Properties",
																																	"value": "Author",
																																	"script": "",
																																	"translation": [
																																		{
																																			"language": "JA",
																																			"value": "著者"
																																		},
																																		{
																																			"language": "ZH",
																																			"value": "作者"
																																		},
																																		{
																																			"language": "DA",
																																			"value": "Forfatter"
																																		},
																																		{
																																			"language": "NL",
																																			"value": "Schrijver"
																																		},
																																		{
																																			"language": "FI",
																																			"value": "kirjailija"
																																		},
																																		{
																																			"language": "IT",
																																			"value": "Autore"
																																		},
																																		{
																																			"language": "PL",
																																			"value": "Autor"
																																		},
																																		{
																																			"language": "PT",
																																			"value": "Autor"
																																		},
																																		{
																																			"language": "ES",
																																			"value": "Autor"
																																		},
																																		{
																																			"language": "SV",
																																			"value": "Författare"
																																		},
																																		{
																																			"language": "FR",
																																			"value": "Auteur"
																																		},
																																		{
																																			"language": "NO",
																																			"value": "Forfatter"
																																		},
																																		{
																																			"language": "DE",
																																			"value": "Autor"
																																		},
																																		{
																																			"language": "EN",
																																			"value": "Author"
																																		}
																																	]
																																},
																																{
																																	"attribute": "styleClassMargin",
																																	"grouping": "Properties",
																																	"value": "sapUiMediumMarginTop",
																																	"script": "",
																																	"translation": []
																																}
																															],
																															"data": []
																														},
																														{
																															"fieldNo": "3fc42afa-dfbd-4c65-fa94-ea442395c438",
																															"fieldName": "oTileAuthor",
																															"fieldParent": "400e2e3b-0673-4295-d31e-e9cf75211058",
																															"fieldType": "sap.m.ObjectStatus",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "text",
																																	"grouping": "Properties",
																																	"value": "{/authorName}",
																																	"script": "",
																																	"translation": []
																																}
																															],
																															"data": []
																														},
																														{
																															"fieldNo": "e2e8db05-d19f-48bc-ba04-8547e75d6685",
																															"fieldName": "oTileMail",
																															"fieldParent": "400e2e3b-0673-4295-d31e-e9cf75211058",
																															"fieldType": "sap.m.ObjectStatus",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "text",
																																	"grouping": "Properties",
																																	"value": "{/authorEmail}",
																																	"script": "",
																																	"translation": []
																																}
																															],
																															"data": []
																														},
																														{
																															"fieldNo": "c448234a-9950-42ed-aea0-543b878b9ed7",
																															"fieldName": "oTileWeb",
																															"fieldParent": "400e2e3b-0673-4295-d31e-e9cf75211058",
																															"fieldType": "sap.m.ObjectStatus",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "text",
																																	"grouping": "Properties",
																																	"value": "{/authorURL}",
																																	"script": "",
																																	"translation": []
																																}
																															],
																															"data": []
																														}
																													]
																												},
																												{
																													"fieldNo": "7ce5fd7d-b034-4f91-fad0-7253b2d9c7a9",
																													"fieldName": "oTileSupport",
																													"fieldParent": "19fac503-9c6f-42e0-bd48-5f1efd550b15",
																													"fieldType": "sap.m.HBox",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "styleClassMargin",
																															"grouping": "Properties",
																															"value": "sapUiMediumMarginTop",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "renderType",
																															"grouping": "Properties",
																															"value": "Bare",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "justifyContent",
																															"grouping": "Properties",
																															"value": "SpaceBetween",
																															"script": "",
																															"translation": []
																														}
																													],
																													"data": [
																														{
																															"fieldNo": "eda8d5ac-9c34-4f23-88c8-025410687b88",
																															"fieldName": "oTileSupportIcons",
																															"fieldParent": "7ce5fd7d-b034-4f91-fad0-7253b2d9c7a9",
																															"fieldType": "sap.m.HBox",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [],
																															"data": [
																																{
																																	"fieldNo": "796edff1-3113-4211-bbbb-07de2a871825",
																																	"fieldName": "imgWindows",
																																	"fieldParent": "eda8d5ac-9c34-4f23-88c8-025410687b88",
																																	"fieldType": "sap.m.Image",
																																	"script": "",
																																	"request": [],
																																	"response": [],
																																	"attributes": [
																																		{
																																			"attribute": "width",
																																			"grouping": "Properties",
																																			"value": "2.8rem",
																																			"script": "",
																																			"translation": []
																																		},
																																		{
																																			"attribute": "visible",
																																			"grouping": "Properties",
																																			"value": "{/buildWindows}",
																																			"script": "",
																																			"translation": []
																																		},
																																		{
																																			"attribute": "src",
																																			"grouping": "Properties",
																																			"value": "/public/images/windows.png",
																																			"script": "",
																																			"translation": []
																																		},
																																		{
																																			"attribute": "densityAware",
																																			"grouping": "Properties",
																																			"value": "false",
																																			"script": "",
																																			"translation": []
																																		}
																																	],
																																	"data": []
																																},
																																{
																																	"fieldNo": "374307d7-4865-439d-f863-a78447f7d7c8",
																																	"fieldName": "imgAndroid",
																																	"fieldParent": "eda8d5ac-9c34-4f23-88c8-025410687b88",
																																	"fieldType": "sap.m.Image",
																																	"script": "",
																																	"request": [],
																																	"response": [],
																																	"attributes": [
																																		{
																																			"attribute": "width",
																																			"grouping": "Properties",
																																			"value": "2.5rem",
																																			"script": "",
																																			"translation": []
																																		},
																																		{
																																			"attribute": "visible",
																																			"grouping": "Properties",
																																			"value": "{/buildAndroid}",
																																			"script": "",
																																			"translation": []
																																		},
																																		{
																																			"attribute": "src",
																																			"grouping": "Properties",
																																			"value": "/public/images/android.png",
																																			"script": "",
																																			"translation": []
																																		},
																																		{
																																			"attribute": "densityAware",
																																			"grouping": "Properties",
																																			"value": "false",
																																			"script": "",
																																			"translation": []
																																		}
																																	],
																																	"data": []
																																},
																																{
																																	"fieldNo": "d6b0b449-d0dd-4067-f0db-f2788fa1d9df",
																																	"fieldName": "imgIos",
																																	"fieldParent": "eda8d5ac-9c34-4f23-88c8-025410687b88",
																																	"fieldType": "sap.m.Image",
																																	"script": "",
																																	"request": [],
																																	"response": [],
																																	"attributes": [
																																		{
																																			"attribute": "width",
																																			"grouping": "Properties",
																																			"value": "2.5rem",
																																			"script": "",
																																			"translation": []
																																		},
																																		{
																																			"attribute": "visible",
																																			"grouping": "Properties",
																																			"value": "{/buildIOS}",
																																			"script": "",
																																			"translation": []
																																		},
																																		{
																																			"attribute": "src",
																																			"grouping": "Properties",
																																			"value": "/public/images/ios.png",
																																			"script": "",
																																			"translation": []
																																		},
																																		{
																																			"attribute": "densityAware",
																																			"grouping": "Properties",
																																			"value": "false",
																																			"script": "",
																																			"translation": []
																																		}
																																	],
																																	"data": []
																																}
																															]
																														},
																														{
																															"fieldNo": "1f630bf0-5866-4880-879f-3e7abaa6f779",
																															"fieldName": "AppCachePageStoreInstall",
																															"fieldParent": "7ce5fd7d-b034-4f91-fad0-7253b2d9c7a9",
																															"fieldType": "sap.m.Button",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "type",
																																	"grouping": "Properties",
																																	"value": "Emphasized",
																																	"script": "",
																																	"translation": []
																																},
																																{
																																	"attribute": "text",
																																	"grouping": "Properties",
																																	"value": "Install",
																																	"script": "",
																																	"translation": [
																																		{
																																			"language": "JA",
																																			"value": "インストール"
																																		},
																																		{
																																			"language": "ZH",
																																			"value": "安装"
																																		},
																																		{
																																			"language": "DA",
																																			"value": "Installere"
																																		},
																																		{
																																			"language": "NL",
																																			"value": "Installeren"
																																		},
																																		{
																																			"language": "FI",
																																			"value": "Asentaa"
																																		},
																																		{
																																			"language": "IT",
																																			"value": "Installare"
																																		},
																																		{
																																			"language": "PL",
																																			"value": "zainstalować"
																																		},
																																		{
																																			"language": "PT",
																																			"value": "Instalar"
																																		},
																																		{
																																			"language": "ES",
																																			"value": "Instalar"
																																		},
																																		{
																																			"language": "SV",
																																			"value": "Installera"
																																		},
																																		{
																																			"language": "FR",
																																			"value": "Installer"
																																		},
																																		{
																																			"language": "NO",
																																			"value": "Installere"
																																		},
																																		{
																																			"language": "DE",
																																			"value": "Installieren"
																																		},
																																		{
																																			"language": "EN",
																																			"value": "Install"
																																		}
																																	]
																																},
																																{
																																	"attribute": "press",
																																	"grouping": "Events",
																																	"value": "Anonymous Function",
																																	"script": [
																																		"==OBJECT STRING==",
																																		"const deviceName = sap.ui.Device.os.name;",
																																		"const { id, serverAddress, activeBuild, activeVersion } = modelAppCachePageStore.oData;",
																																		"",
																																		"let n = `${serverAddress}/mobileClients/${id}/build/${activeBuild.id}/`;",
																																		"",
																																		"if (deviceName === 'win') n += 'Windows';",
																																		"else if (deviceName === 'Android') n += 'Android';",
																																		"else if (deviceName === 'iOS') {",
																																		"    n = 'itms-services://?action=download-manifest&url=' + encodeURIComponent(`${n}Ios.plist`);",
																																		"    console.log(n);",
																																		"}",
																																		"",
																																		"if (isCordova()) {",
																																		"    AppCache.UpdateMobileApp(n, activeVersion);",
																																		"} else {",
																																		"    sap.m.URLHelper.redirect(n, false);",
																																		"    sap.m.MessageToast.show('Download Started');",
																																		"}"
																																	],
																																	"translation": []
																																}
																															],
																															"data": []
																														}
																													]
																												}
																											]
																										}
																									]
																								},
																								{
																									"fieldNo": "a37b3c9b-bc4b-48b9-e893-9e528b262b0d",
																									"fieldName": "oTileImageCell",
																									"fieldParent": "1288f912-c170-45ae-9444-d0862d7f94ef",
																									"fieldType": "sap.ui.layout.BlockLayoutCell",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "width",
																											"grouping": "Properties",
																											"value": "35",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "styleClass",
																											"grouping": "Properties",
																											"value": "nepTileCards",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "backgroundColorSet",
																											"grouping": "Properties",
																											"value": "ColorSet9",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "backgroundColorShade",
																											"grouping": "Properties",
																											"value": "ShadeC",
																											"script": "",
																											"translation": []
																										}
																									],
																									"data": [
																										{
																											"fieldNo": "10e708e7-fd23-44a0-8983-70453a7ce217",
																											"fieldName": "oTileImageData",
																											"fieldParent": "a37b3c9b-bc4b-48b9-e893-9e528b262b0d",
																											"fieldType": "sap.m.VBox",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "width",
																													"grouping": "Properties",
																													"value": "100%",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "justifyContent",
																													"grouping": "Properties",
																													"value": "Center",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "height",
																													"grouping": "Properties",
																													"value": "100%",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "alignItems",
																													"grouping": "Properties",
																													"value": "Center",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "alignContent",
																													"grouping": "Properties",
																													"value": "Center",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": [
																												{
																													"fieldNo": "eab93fd0-69f8-40c6-f933-e88898803ca1",
																													"fieldName": "oTileImage",
																													"fieldParent": "10e708e7-fd23-44a0-8983-70453a7ce217",
																													"fieldType": "sap.m.Image",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "width",
																															"grouping": "Properties",
																															"value": "100%",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "tooltip",
																															"grouping": "Properties",
																															"value": "Click to enlarge",
																															"script": "",
																															"translation": [
																																{
																																	"language": "JA",
																																	"value": "拡大するにはクリックしてください"
																																},
																																{
																																	"language": "ZH",
																																	"value": "点击放大"
																																},
																																{
																																	"language": "DA",
																																	"value": "Klik for større billede"
																																},
																																{
																																	"language": "NL",
																																	"value": "Klik om te vergroten"
																																},
																																{
																																	"language": "FI",
																																	"value": "Klikkaa suurentaaksesi"
																																},
																																{
																																	"language": "IT",
																																	"value": "clicca per ingrandire"
																																},
																																{
																																	"language": "PL",
																																	"value": "Kliknij, aby powiększyć"
																																},
																																{
																																	"language": "PT",
																																	"value": "Clique para ampliar"
																																},
																																{
																																	"language": "ES",
																																	"value": "Click para agrandar"
																																},
																																{
																																	"language": "SV",
																																	"value": "Klicka för att förstora"
																																},
																																{
																																	"language": "FR",
																																	"value": "Cliquez pour agrandir"
																																},
																																{
																																	"language": "NO",
																																	"value": "Klikk for å forstørre"
																																},
																																{
																																	"language": "DE",
																																	"value": "Klicken zum Vergrößern"
																																},
																																{
																																	"language": "EN",
																																	"value": "Click to enlarge"
																																}
																															]
																														},
																														{
																															"attribute": "densityAware",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														}
																													],
																													"data": []
																												}
																											]
																										}
																									]
																								}
																							]
																						}
																					]
																				}
																			]
																		},
																		{
																			"fieldNo": "22ce0ada-fc48-4db6-8115-052a801c34ec",
																			"fieldName": "AppCache_boxLogon",
																			"fieldParent": "d6027101-d2e8-4829-db73-7f2b38519a3b",
																			"fieldType": "sap.m.Page",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "styleClass",
																					"grouping": "Properties",
																					"value": "nepPage",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showHeader",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showFooter",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "backgroundDesign",
																					"grouping": "Properties",
																					"value": "Transparent",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": [
																				{
																					"fieldNo": "69c2b82b-01d1-4e3f-9831-6d48aa6bc197",
																					"fieldName": "AppCache_boxLogonCenter",
																					"fieldParent": "22ce0ada-fc48-4db6-8115-052a801c34ec",
																					"fieldType": "sap.m.FlexBox",
																					"script": "",
																					"request": [],
																					"response": [],
																					"attributes": [
																						{
																							"attribute": "width",
																							"grouping": "Properties",
																							"value": "100%",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "justifyContent",
																							"grouping": "Properties",
																							"value": "Center",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "height",
																							"grouping": "Properties",
																							"value": "75%",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "alignItems",
																							"grouping": "Properties",
																							"value": "Center",
																							"script": "",
																							"translation": []
																						}
																					],
																					"data": [
																						{
																							"fieldNo": "ba55d7bd-1d6c-4d5f-f86d-baa01c95e9c0",
																							"fieldName": "panLogon",
																							"fieldParent": "69c2b82b-01d1-4e3f-9831-6d48aa6bc197",
																							"fieldType": "sap.m.Panel",
																							"script": "",
																							"request": [],
																							"response": [],
																							"attributes": [
																								{
																									"attribute": "width",
																									"grouping": "Properties",
																									"value": "500px",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "styleClassPadding",
																									"grouping": "Properties",
																									"value": "sapUiContentPadding",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "styleClass",
																									"grouping": "Properties",
																									"value": "nepPanLogon nepPanLogonBorder",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "backgroundDesign",
																									"grouping": "Properties",
																									"value": "Transparent",
																									"script": "",
																									"translation": []
																								}
																							],
																							"data": [
																								{
																									"fieldNo": "285b3981-8d50-49c2-89c4-5d5ce8ecccb1",
																									"fieldName": "AppCache_formLogon",
																									"fieldParent": "ba55d7bd-1d6c-4d5f-f86d-baa01c95e9c0",
																									"fieldType": "sap.ui.layout.form.SimpleForm",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "maxContainerCols",
																											"grouping": "Properties",
																											"value": "1",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "layout",
																											"grouping": "Properties",
																											"value": "ResponsiveGridLayout",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "labelSpanM",
																											"grouping": "Properties",
																											"value": "12",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "labelSpanL",
																											"grouping": "Properties",
																											"value": "12",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "editable",
																											"grouping": "Properties",
																											"value": "true",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "backgroundDesign",
																											"grouping": "Properties",
																											"value": "Transparent",
																											"script": "",
																											"translation": []
																										}
																									],
																									"data": [
																										{
																											"fieldNo": "60328712-28d7-4177-b587-776e5b28129f",
																											"fieldName": "lblFormLoginSubTitle",
																											"fieldParent": "285b3981-8d50-49c2-89c4-5d5ce8ecccb1",
																											"fieldType": "sap.m.Label",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "styleClassMargin",
																													"grouping": "Properties",
																													"value": "sapUiTinyMarginBottom",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "929b2ef2-0184-4014-f746-7f9227df39d0",
																											"fieldName": "boxSubTitle",
																											"fieldParent": "285b3981-8d50-49c2-89c4-5d5ce8ecccb1",
																											"fieldType": "sap.m.VBox",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "styleClassMargin",
																													"grouping": "Properties",
																													"value": "sapUiTinyMarginBottom",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": [
																												{
																													"fieldNo": "266a48c0-0f09-49fd-990d-784e5fb1f4e9",
																													"fieldName": "txtFormLoginSubTitle1",
																													"fieldParent": "929b2ef2-0184-4014-f746-7f9227df39d0",
																													"fieldType": "sap.m.Title",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "titleStyle",
																															"grouping": "Properties",
																															"value": "H2",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "styleClass",
																															"grouping": "Properties",
																															"value": "nepMobileTitle",
																															"script": "",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "778adac1-8786-43c7-b73d-1403504557ec",
																													"fieldName": "txtFormLoginSubTitle2",
																													"fieldParent": "929b2ef2-0184-4014-f746-7f9227df39d0",
																													"fieldType": "sap.m.Title",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "titleStyle",
																															"grouping": "Properties",
																															"value": "H5",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "styleClass",
																															"grouping": "Properties",
																															"value": "nepMobileSubTitle",
																															"script": "",
																															"translation": []
																														}
																													],
																													"data": []
																												}
																											]
																										},
																										{
																											"fieldNo": "ead3ec8a-4aeb-4a6e-a695-3b808921c95c",
																											"fieldName": "AppCache_lblFormLogin",
																											"fieldParent": "285b3981-8d50-49c2-89c4-5d5ce8ecccb1",
																											"fieldType": "sap.m.Label",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "text",
																													"grouping": "Properties",
																													"value": "Login Provider",
																													"script": "",
																													"translation": [
																														{
																															"language": "JA",
																															"value": "ログインプロバイダ"
																														},
																														{
																															"language": "ZH",
																															"value": "登录提供商"
																														},
																														{
																															"language": "DA",
																															"value": "Login Provider"
																														},
																														{
																															"language": "NL",
																															"value": "Login-provider"
																														},
																														{
																															"language": "FI",
																															"value": "Kirjaudu palveluntarjoajalle"
																														},
																														{
																															"language": "IT",
																															"value": "Provider di accesso"
																														},
																														{
																															"language": "PL",
																															"value": "Dostawca logowania"
																														},
																														{
																															"language": "PT",
																															"value": "Fornecedor de Acesso"
																														},
																														{
																															"language": "ES",
																															"value": "Proveedor de inicio de sesión"
																														},
																														{
																															"language": "SV",
																															"value": "Inloggningsleverantör"
																														},
																														{
																															"language": "FR",
																															"value": "Fournisseur de connexion"
																														},
																														{
																															"language": "NO",
																															"value": "Innloggingsleverandør"
																														},
																														{
																															"language": "DE",
																															"value": "Login-Anbieter"
																														},
																														{
																															"language": "EN",
																															"value": "Login Provider"
																														}
																													]
																												},
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "nepMobileLabel",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "3120618d-381c-4c2c-bdd7-9f9ddb41da8c",
																											"fieldName": "AppCache_loginTypes",
																											"fieldParent": "285b3981-8d50-49c2-89c4-5d5ce8ecccb1",
																											"fieldType": "sap.m.Select",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "width",
																													"grouping": "Properties",
																													"value": "100%",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "visible",
																													"grouping": "Properties",
																													"value": "false",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "change",
																													"grouping": "Events",
																													"value": "Anonymous Function",
																													"script": "sap.n.Utils.setLogonScreen();",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "6e32cff4-6d72-429f-cef1-3ad4e9ee7dea",
																											"fieldName": "AppCache_lblUsername",
																											"fieldParent": "285b3981-8d50-49c2-89c4-5d5ce8ecccb1",
																											"fieldType": "sap.m.Label",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "text",
																													"grouping": "Properties",
																													"value": "Username",
																													"script": "",
																													"translation": [
																														{
																															"language": "JA",
																															"value": "ユーザー名"
																														},
																														{
																															"language": "ZH",
																															"value": "用户名"
																														},
																														{
																															"language": "DA",
																															"value": "Brugernavn"
																														},
																														{
																															"language": "NL",
																															"value": "Gebruikersnaam"
																														},
																														{
																															"language": "FI",
																															"value": "Käyttäjätunnus"
																														},
																														{
																															"language": "IT",
																															"value": "Nome utente"
																														},
																														{
																															"language": "PL",
																															"value": "Nazwa Użytkownika"
																														},
																														{
																															"language": "PT",
																															"value": "Nome de usuário"
																														},
																														{
																															"language": "ES",
																															"value": "Nombre de usuario"
																														},
																														{
																															"language": "SV",
																															"value": "Användarnamn"
																														},
																														{
																															"language": "FR",
																															"value": "Nom d'utilisateur"
																														},
																														{
																															"language": "NO",
																															"value": "Brukernavn"
																														},
																														{
																															"language": "DE",
																															"value": "Nutzername"
																														},
																														{
																															"language": "EN",
																															"value": "Username"
																														}
																													]
																												},
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "nepMobileLabel",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "a981a7ff-928b-4daf-d1f5-e4e966dc2a20",
																											"fieldName": "AppCache_inUsername",
																											"fieldParent": "285b3981-8d50-49c2-89c4-5d5ce8ecccb1",
																											"fieldType": "sap.m.Input",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "width",
																													"grouping": "Properties",
																													"value": "100%",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "visible",
																													"grouping": "Properties",
																													"value": "false",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "change",
																													"grouping": "Events",
																													"value": "AppCache_inPassword.focus();",
																													"script": "AppCache_inPassword.focus();",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "872497ac-7248-499d-acfc-09a6f9c88243",
																											"fieldName": "AppCache_lblPassword",
																											"fieldParent": "285b3981-8d50-49c2-89c4-5d5ce8ecccb1",
																											"fieldType": "sap.m.Label",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "text",
																													"grouping": "Properties",
																													"value": "Password",
																													"script": "",
																													"translation": [
																														{
																															"language": "JA",
																															"value": "パスワード"
																														},
																														{
																															"language": "ZH",
																															"value": "密码"
																														},
																														{
																															"language": "DA",
																															"value": "Adgangskode"
																														},
																														{
																															"language": "NL",
																															"value": "Wachtwoord"
																														},
																														{
																															"language": "FI",
																															"value": "Salasana"
																														},
																														{
																															"language": "IT",
																															"value": "Parola d'ordine"
																														},
																														{
																															"language": "PL",
																															"value": "Hasło"
																														},
																														{
																															"language": "PT",
																															"value": "Senha"
																														},
																														{
																															"language": "ES",
																															"value": "Contraseña"
																														},
																														{
																															"language": "SV",
																															"value": "Lösenord"
																														},
																														{
																															"language": "FR",
																															"value": "Mot de passe"
																														},
																														{
																															"language": "NO",
																															"value": "Passord"
																														},
																														{
																															"language": "DE",
																															"value": "Passwort"
																														},
																														{
																															"language": "EN",
																															"value": "Password"
																														}
																													]
																												},
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "nepMobileLabel",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "410231c5-9e9b-42be-92e1-8fed1ef328fd",
																											"fieldName": "AppCache_inPassword",
																											"fieldParent": "285b3981-8d50-49c2-89c4-5d5ce8ecccb1",
																											"fieldType": "sap.m.Input",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "width",
																													"grouping": "Properties",
																													"value": "100%",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "visible",
																													"grouping": "Properties",
																													"value": "false",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "type",
																													"grouping": "Properties",
																													"value": "Password",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "submit",
																													"grouping": "Events",
																													"value": "AppCache_butLogon.firePress();",
																													"script": "AppCache_butLogon.firePress();",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "0be5c144-576a-46c0-cde6-1061128c8afb",
																											"fieldName": "AppCache_lblLanguage",
																											"fieldParent": "285b3981-8d50-49c2-89c4-5d5ce8ecccb1",
																											"fieldType": "sap.m.Label",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "visible",
																													"grouping": "Properties",
																													"value": "false",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "text",
																													"grouping": "Properties",
																													"value": "Language",
																													"script": "",
																													"translation": [
																														{
																															"language": "JA",
																															"value": "言語"
																														},
																														{
																															"language": "ZH",
																															"value": "语言"
																														},
																														{
																															"language": "DA",
																															"value": "Sprog"
																														},
																														{
																															"language": "NL",
																															"value": "Taal"
																														},
																														{
																															"language": "FI",
																															"value": "Kieli"
																														},
																														{
																															"language": "IT",
																															"value": "linguaggio"
																														},
																														{
																															"language": "PL",
																															"value": "Język"
																														},
																														{
																															"language": "PT",
																															"value": "Língua"
																														},
																														{
																															"language": "ES",
																															"value": "Idioma"
																														},
																														{
																															"language": "SV",
																															"value": "Språk"
																														},
																														{
																															"language": "FR",
																															"value": "La langue"
																														},
																														{
																															"language": "NO",
																															"value": "Språk"
																														},
																														{
																															"language": "DE",
																															"value": "Sprache"
																														},
																														{
																															"language": "EN",
																															"value": "Language"
																														}
																													]
																												},
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "nepMobileLabel",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "ca7849d4-e7ba-4dab-85cb-43450fcd9862",
																											"fieldName": "AppCache_inLanguage",
																											"fieldParent": "285b3981-8d50-49c2-89c4-5d5ce8ecccb1",
																											"fieldType": "sap.m.Select",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "visible",
																													"grouping": "Properties",
																													"value": "false",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "22937967-ffd7-42da-c839-481117e0389e",
																											"fieldName": "AppCache_lblShowPass",
																											"fieldParent": "285b3981-8d50-49c2-89c4-5d5ce8ecccb1",
																											"fieldType": "sap.m.Label",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "nepMobileLabel",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "4a34780e-0f95-473f-fc1a-29e90af36ee7",
																											"fieldName": "AppCache_inShowPass",
																											"fieldParent": "285b3981-8d50-49c2-89c4-5d5ce8ecccb1",
																											"fieldType": "sap.m.CheckBox",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "visible",
																													"grouping": "Properties",
																													"value": "false",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "text",
																													"grouping": "Properties",
																													"value": "Show password",
																													"script": "",
																													"translation": [
																														{
																															"language": "DA",
																															"value": "Vis adgangskode"
																														},
																														{
																															"language": "NL",
																															"value": "Laat wachtwoord zien"
																														},
																														{
																															"language": "FI",
																															"value": "Näytä salasana"
																														},
																														{
																															"language": "PL",
																															"value": "Pokaż hasło"
																														},
																														{
																															"language": "PT",
																															"value": "Mostrar senha"
																														},
																														{
																															"language": "ES",
																															"value": "Mostrar contraseña"
																														},
																														{
																															"language": "SV",
																															"value": "Visa lösenord"
																														},
																														{
																															"language": "FR",
																															"value": "Montrer le mot de passe"
																														},
																														{
																															"language": "NO",
																															"value": "Vis passord"
																														},
																														{
																															"language": "DE",
																															"value": "Passwort anzeigen"
																														},
																														{
																															"language": "EN",
																															"value": "Show password"
																														}
																													]
																												},
																												{
																													"attribute": "select",
																													"grouping": "Events",
																													"value": "Anonymous Function",
																													"script": [
																														"==OBJECT STRING==",
																														"if (AppCache_inShowPass.getSelected()) {\r",
																														"    AppCache_inPassword.setType(\"Text\");\r",
																														"} else {\r",
																														"    AppCache_inPassword.setType(\"Password\");\r",
																														"}\r",
																														""
																													],
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "5121da11-b774-4541-8896-e8c04a7986f9",
																											"fieldName": "AppCache_lblRememberMe",
																											"fieldParent": "285b3981-8d50-49c2-89c4-5d5ce8ecccb1",
																											"fieldType": "sap.m.Label",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "nepMobileLabel",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "e34ceea3-74e1-4794-d1d4-bd2b2381e45f",
																											"fieldName": "AppCache_inRememberMe",
																											"fieldParent": "285b3981-8d50-49c2-89c4-5d5ce8ecccb1",
																											"fieldType": "sap.m.CheckBox",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "visible",
																													"grouping": "Properties",
																													"value": "false",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "text",
																													"grouping": "Properties",
																													"value": "Remember me",
																													"script": "",
																													"translation": [
																														{
																															"language": "PL",
																															"value": "Zapamiętaj mnie"
																														},
																														{
																															"language": "EN",
																															"value": "Remember me"
																														}
																													]
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "24c1d125-b126-42c5-9067-4b9013855191",
																											"fieldName": "AppCache_lblLogon",
																											"fieldParent": "285b3981-8d50-49c2-89c4-5d5ce8ecccb1",
																											"fieldType": "sap.m.Label",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "nepMobileLabel",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "dd5d228c-2f9a-4512-9b76-d6546a028ebe",
																											"fieldName": "AppCache_butLogon",
																											"fieldParent": "285b3981-8d50-49c2-89c4-5d5ce8ecccb1",
																											"fieldType": "sap.m.Button",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "width",
																													"grouping": "Properties",
																													"value": "150px",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "visible",
																													"grouping": "Properties",
																													"value": "false",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "type",
																													"grouping": "Properties",
																													"value": "Emphasized",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "text",
																													"grouping": "Properties",
																													"value": "Sign in",
																													"script": "",
																													"translation": [
																														{
																															"language": "JA",
																															"value": "ログオン"
																														},
																														{
																															"language": "ZH",
																															"value": "登录"
																														},
																														{
																															"language": "DA",
																															"value": "Log på"
																														},
																														{
																															"language": "NL",
																															"value": "Inloggen"
																														},
																														{
																															"language": "FI",
																															"value": "Kirjautua sisään"
																														},
																														{
																															"language": "IT",
																															"value": "Accedere"
																														},
																														{
																															"language": "PL",
																															"value": "Zaloguj się"
																														},
																														{
																															"language": "PT",
																															"value": "Logon"
																														},
																														{
																															"language": "ES",
																															"value": "Acceder"
																														},
																														{
																															"language": "SV",
																															"value": "Logga in"
																														},
																														{
																															"language": "FR",
																															"value": "Se connecter"
																														},
																														{
																															"language": "NO",
																															"value": "Logg på"
																														},
																														{
																															"language": "DE",
																															"value": "Einloggen"
																														},
																														{
																															"language": "EN",
																															"value": "Sign in"
																														}
																													]
																												},
																												{
																													"attribute": "styleClassMargin",
																													"grouping": "Properties",
																													"value": "sapUiTinyMarginTop",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "nepMobileButton",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "press",
																													"grouping": "Events",
																													"value": "Anonymous Function",
																													"script": [
																														"==OBJECT STRING==",
																														"let userName = AppCache_inUsername.getValue();",
																														"AppCache_inUsername.setValue(userName.trim());",
																														"",
																														"AppCache_inUsername.setValueState();",
																														"AppCache_inPassword.setValueState();",
																														"",
																														"// Checks",
																														"if (AppCache_inUsername.getVisible() && !AppCache_inUsername.getValue()) {",
																														"    AppCache_inUsername.setValueState('Error');",
																														"    setTimeout(function () {",
																														"        AppCache_inUsername.focus();",
																														"    }, 400);",
																														"    return;",
																														"}",
																														"",
																														"if (AppCache_inPassword.getVisible() && !AppCache_inPassword.getValue()) {",
																														"    AppCache_inPassword.setValueState('Error');",
																														"    setTimeout(function () {",
																														"        AppCache_inPassword.focus();",
																														"    }, 400);",
																														"    return;",
																														"}",
																														"",
																														"AppCache.Logon();"
																													],
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "81e4f108-1f2b-4303-fe74-7fb613785c06",
																											"fieldName": "AppCache_resetPassword",
																											"fieldParent": "285b3981-8d50-49c2-89c4-5d5ce8ecccb1",
																											"fieldType": "sap.m.Link",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "visible",
																													"grouping": "Properties",
																													"value": "false",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "text",
																													"grouping": "Properties",
																													"value": "Forgot Password",
																													"script": "",
																													"translation": [
																														{
																															"language": "JA",
																															"value": "パスワードをお忘れですか"
																														},
																														{
																															"language": "ZH",
																															"value": "忘记密码"
																														},
																														{
																															"language": "DA",
																															"value": "Glemt kodeord"
																														},
																														{
																															"language": "NL",
																															"value": "Wachtwoord vergeten"
																														},
																														{
																															"language": "FI",
																															"value": "Unohtuiko salasana"
																														},
																														{
																															"language": "IT",
																															"value": "Ha dimenticato la password"
																														},
																														{
																															"language": "PL",
																															"value": "Zapomniałeś hasła"
																														},
																														{
																															"language": "PT",
																															"value": "Esqueceu a senha"
																														},
																														{
																															"language": "ES",
																															"value": "Se te olvidó tu contraseña"
																														},
																														{
																															"language": "SV",
																															"value": "Glömt ditt lösenord"
																														},
																														{
																															"language": "FR",
																															"value": "Mot de passe oublié"
																														},
																														{
																															"language": "NO",
																															"value": "Glemt passord"
																														},
																														{
																															"language": "DE",
																															"value": "Passwort vergessen"
																														},
																														{
																															"language": "EN",
																															"value": "Forgot Password"
																														}
																													]
																												},
																												{
																													"attribute": "styleClassMargin",
																													"grouping": "Properties",
																													"value": "sapUiMediumMarginTop",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "neptuneLinkWhite",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "press",
																													"grouping": "Events",
																													"value": "Anonymous Function",
																													"script": "window.open(AppCache.passUrlReset, \"_system\");",
																													"translation": []
																												}
																											],
																											"data": []
																										}
																									]
																								},
																								{
																									"fieldNo": "df4b9670-fb69-4c62-b930-870c1a541d61",
																									"fieldName": "panLinks",
																									"fieldParent": "ba55d7bd-1d6c-4d5f-f86d-baa01c95e9c0",
																									"fieldType": "sap.m.Panel",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "visible",
																											"grouping": "Properties",
																											"value": "false",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "styleClassPadding",
																											"grouping": "Properties",
																											"value": "sapUiNoContentPadding",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "styleClassMargin",
																											"grouping": "Properties",
																											"value": "sapUiMediumMarginTop",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "styleClass",
																											"grouping": "Properties",
																											"value": "nepPanLinks",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "enableCompactMode",
																											"grouping": "Properties",
																											"value": "true",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "backgroundDesign",
																											"grouping": "Properties",
																											"value": "Transparent",
																											"script": "",
																											"translation": []
																										}
																									],
																									"data": [
																										{
																											"fieldNo": "f6216dd6-4c62-4998-8dab-2d7fa30eee42",
																											"fieldName": "toolLinks",
																											"fieldParent": "df4b9670-fb69-4c62-b930-870c1a541d61",
																											"fieldType": "sap.m.Toolbar",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "nepLinkNoBorder",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "design",
																													"grouping": "Properties",
																													"value": "Transparent",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "position",
																													"grouping": "Parent",
																													"value": "HeaderToolbar",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": [
																												{
																													"fieldNo": "20837d0c-6a11-4b94-b760-f255acb200ac",
																													"fieldName": "linkText1",
																													"fieldParent": "f6216dd6-4c62-4998-8dab-2d7fa30eee42",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "type",
																															"grouping": "Properties",
																															"value": "Transparent",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin1);",
																															"script": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin1);",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "b9e7e2d3-15f2-4a06-aa2f-ca920b8010c7",
																													"fieldName": "linkSep1",
																													"fieldParent": "f6216dd6-4c62-4998-8dab-2d7fa30eee42",
																													"fieldType": "sap.m.ToolbarSeparator",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "40732b8e-8821-4d45-c9a3-9b79ece519f9",
																													"fieldName": "linkText2",
																													"fieldParent": "f6216dd6-4c62-4998-8dab-2d7fa30eee42",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "type",
																															"grouping": "Properties",
																															"value": "Transparent",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin2);",
																															"script": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin2);",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "f305c385-0ed8-4a28-d9cf-359f3dfb4284",
																													"fieldName": "linkSep2",
																													"fieldParent": "f6216dd6-4c62-4998-8dab-2d7fa30eee42",
																													"fieldType": "sap.m.ToolbarSeparator",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "8ce472c1-5184-40b2-ed73-9026a44eea48",
																													"fieldName": "linkText3",
																													"fieldParent": "f6216dd6-4c62-4998-8dab-2d7fa30eee42",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "type",
																															"grouping": "Properties",
																															"value": "Transparent",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin3);",
																															"script": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin3);",
																															"translation": []
																														}
																													],
																													"data": []
																												}
																											]
																										}
																									]
																								}
																							]
																						}
																					]
																				}
																			]
																		},
																		{
																			"fieldNo": "d5b0a129-53ce-45ff-9e57-601ef8f8c006",
																			"fieldName": "AppCache_boxLogonCustom",
																			"fieldParent": "d6027101-d2e8-4829-db73-7f2b38519a3b",
																			"fieldType": "sap.m.Page",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "styleClass",
																					"grouping": "Properties",
																					"value": "nepPage",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showHeader",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showFooter",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "enableScrolling",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "backgroundDesign",
																					"grouping": "Properties",
																					"value": "Transparent",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "3c23f17b-1706-46d7-84a5-7786abd145fb",
																			"fieldName": "AppCache_boxPassword",
																			"fieldParent": "d6027101-d2e8-4829-db73-7f2b38519a3b",
																			"fieldType": "sap.m.Page",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "styleClass",
																					"grouping": "Properties",
																					"value": "nepPage",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showHeader",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showFooter",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "backgroundDesign",
																					"grouping": "Properties",
																					"value": "Transparent",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": [
																				{
																					"fieldNo": "24a1b591-e96c-4752-a0c0-02dfa8aba8da",
																					"fieldName": "AppCache_boxLogonPassword",
																					"fieldParent": "3c23f17b-1706-46d7-84a5-7786abd145fb",
																					"fieldType": "sap.m.HBox",
																					"script": "",
																					"request": [],
																					"response": [],
																					"attributes": [
																						{
																							"attribute": "justifyContent",
																							"grouping": "Properties",
																							"value": "Center",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "alignItems",
																							"grouping": "Properties",
																							"value": "Center",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "alignContent",
																							"grouping": "Properties",
																							"value": "Center",
																							"script": "",
																							"translation": []
																						}
																					],
																					"data": [
																						{
																							"fieldNo": "b8d865ed-6698-4027-dc63-10fff3d17d66",
																							"fieldName": "AppCache_formPassword",
																							"fieldParent": "24a1b591-e96c-4752-a0c0-02dfa8aba8da",
																							"fieldType": "sap.ui.layout.form.SimpleForm",
																							"script": "",
																							"request": [],
																							"response": [],
																							"attributes": [
																								{
																									"attribute": "layout",
																									"grouping": "Properties",
																									"value": "ResponsiveGridLayout",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "labelSpanM",
																									"grouping": "Properties",
																									"value": "12",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "labelSpanL",
																									"grouping": "Properties",
																									"value": "12",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "editable",
																									"grouping": "Properties",
																									"value": "true",
																									"script": "",
																									"translation": []
																								}
																							],
																							"data": [
																								{
																									"fieldNo": "6664edcd-3e5f-4a3f-aa03-3c6709107964",
																									"fieldName": "AppCache_titlePassword",
																									"fieldParent": "b8d865ed-6698-4027-dc63-10fff3d17d66",
																									"fieldType": "sap.ui.core.Title",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "text",
																											"grouping": "Properties",
																											"value": "Change Password",
																											"script": "",
																											"translation": [
																												{
																													"language": "JA",
																													"value": "パスワードを変更する"
																												},
																												{
																													"language": "ZH",
																													"value": "更改密码"
																												},
																												{
																													"language": "DA",
																													"value": "Skift kodeord"
																												},
																												{
																													"language": "NL",
																													"value": "Wachtwoord wijzigen"
																												},
																												{
																													"language": "FI",
																													"value": "Vaihda salasana"
																												},
																												{
																													"language": "IT",
																													"value": "Cambia la password"
																												},
																												{
																													"language": "PL",
																													"value": "Zmień hasło"
																												},
																												{
																													"language": "PT",
																													"value": "Mudar a senha"
																												},
																												{
																													"language": "ES",
																													"value": "Cambia la contraseña"
																												},
																												{
																													"language": "SV",
																													"value": "Ändra lösenord"
																												},
																												{
																													"language": "FR",
																													"value": "Changer le mot de passe"
																												},
																												{
																													"language": "NO",
																													"value": "Bytt passord"
																												},
																												{
																													"language": "DE",
																													"value": "Passwort ändern"
																												},
																												{
																													"language": "EN",
																													"value": "Change Password"
																												}
																											]
																										},
																										{
																											"attribute": "level",
																											"grouping": "Properties",
																											"value": "H1",
																											"script": "",
																											"translation": []
																										}
																									],
																									"data": []
																								},
																								{
																									"fieldNo": "a6f8621d-d37c-48fc-aaa3-364a7c0754ec",
																									"fieldName": "AppCache_lblPassOld",
																									"fieldParent": "b8d865ed-6698-4027-dc63-10fff3d17d66",
																									"fieldType": "sap.m.Label",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "text",
																											"grouping": "Properties",
																											"value": "Old",
																											"script": "",
																											"translation": [
																												{
																													"language": "JA",
																													"value": "古い"
																												},
																												{
																													"language": "ZH",
																													"value": "旧"
																												},
																												{
																													"language": "DA",
																													"value": "Gammel"
																												},
																												{
																													"language": "NL",
																													"value": "Oud"
																												},
																												{
																													"language": "FI",
																													"value": "Vanha"
																												},
																												{
																													"language": "IT",
																													"value": "Vecchio"
																												},
																												{
																													"language": "PL",
																													"value": "Stary"
																												},
																												{
																													"language": "PT",
																													"value": "Antigo"
																												},
																												{
																													"language": "ES",
																													"value": "Antiguo"
																												},
																												{
																													"language": "SV",
																													"value": "Gammal"
																												},
																												{
																													"language": "FR",
																													"value": "Vieux"
																												},
																												{
																													"language": "NO",
																													"value": "Gammel"
																												},
																												{
																													"language": "DE",
																													"value": "Alt"
																												},
																												{
																													"language": "EN",
																													"value": "Old"
																												}
																											]
																										},
																										{
																											"attribute": "styleClass",
																											"grouping": "Properties",
																											"value": "nepMobileLabel",
																											"script": "",
																											"translation": []
																										}
																									],
																									"data": []
																								},
																								{
																									"fieldNo": "b8b91d49-34ee-4922-af92-5520fe490301",
																									"fieldName": "AppCache_inPassOld",
																									"fieldParent": "b8d865ed-6698-4027-dc63-10fff3d17d66",
																									"fieldType": "sap.m.Input",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "width",
																											"grouping": "Properties",
																											"value": "100%",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "type",
																											"grouping": "Properties",
																											"value": "Password",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "change",
																											"grouping": "Events",
																											"value": "AppCache_inPassword.focus();",
																											"script": "AppCache_inPassword.focus();",
																											"translation": []
																										}
																									],
																									"data": []
																								},
																								{
																									"fieldNo": "7ea30d24-1724-4740-d0e1-df7eb5265813",
																									"fieldName": "AppCache_lblPassNew",
																									"fieldParent": "b8d865ed-6698-4027-dc63-10fff3d17d66",
																									"fieldType": "sap.m.Label",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "text",
																											"grouping": "Properties",
																											"value": "New",
																											"script": "",
																											"translation": [
																												{
																													"language": "JA",
																													"value": "新しい"
																												},
																												{
																													"language": "ZH",
																													"value": "新"
																												},
																												{
																													"language": "DA",
																													"value": "Ny"
																												},
																												{
																													"language": "NL",
																													"value": "nieuwe"
																												},
																												{
																													"language": "FI",
																													"value": "Uusi"
																												},
																												{
																													"language": "IT",
																													"value": "Nuovo"
																												},
																												{
																													"language": "PL",
																													"value": "Nowy"
																												},
																												{
																													"language": "PT",
																													"value": "Novo"
																												},
																												{
																													"language": "ES",
																													"value": "Nuevo"
																												},
																												{
																													"language": "SV",
																													"value": "Ny"
																												},
																												{
																													"language": "FR",
																													"value": "Nouveau"
																												},
																												{
																													"language": "NO",
																													"value": "Ny"
																												},
																												{
																													"language": "DE",
																													"value": "Neu"
																												},
																												{
																													"language": "EN",
																													"value": "New"
																												}
																											]
																										},
																										{
																											"attribute": "styleClass",
																											"grouping": "Properties",
																											"value": "nepMobileLabel",
																											"script": "",
																											"translation": []
																										}
																									],
																									"data": []
																								},
																								{
																									"fieldNo": "09b782aa-6342-40fd-d07d-5b4baa02a716",
																									"fieldName": "AppCache_inPassNew",
																									"fieldParent": "b8d865ed-6698-4027-dc63-10fff3d17d66",
																									"fieldType": "sap.m.Input",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "width",
																											"grouping": "Properties",
																											"value": "100%",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "type",
																											"grouping": "Properties",
																											"value": "Password",
																											"script": "",
																											"translation": []
																										}
																									],
																									"data": []
																								},
																								{
																									"fieldNo": "44a1e619-05d2-45aa-f848-4f6c7335a864",
																									"fieldName": "AppCache_lblPassRepeat",
																									"fieldParent": "b8d865ed-6698-4027-dc63-10fff3d17d66",
																									"fieldType": "sap.m.Label",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "text",
																											"grouping": "Properties",
																											"value": "Repeat",
																											"script": "",
																											"translation": [
																												{
																													"language": "JA",
																													"value": "繰り返す"
																												},
																												{
																													"language": "ZH",
																													"value": "重复"
																												},
																												{
																													"language": "DA",
																													"value": "Gentage"
																												},
																												{
																													"language": "NL",
																													"value": "Herhaling"
																												},
																												{
																													"language": "FI",
																													"value": "Toistaa"
																												},
																												{
																													"language": "IT",
																													"value": "Ripetere"
																												},
																												{
																													"language": "PL",
																													"value": "Powtarzać"
																												},
																												{
																													"language": "PT",
																													"value": "Repetir"
																												},
																												{
																													"language": "ES",
																													"value": "Repetir"
																												},
																												{
																													"language": "SV",
																													"value": "Upprepa"
																												},
																												{
																													"language": "FR",
																													"value": "Répéter"
																												},
																												{
																													"language": "NO",
																													"value": "Gjenta"
																												},
																												{
																													"language": "DE",
																													"value": "Wiederholen"
																												},
																												{
																													"language": "EN",
																													"value": "Repeat"
																												}
																											]
																										},
																										{
																											"attribute": "styleClass",
																											"grouping": "Properties",
																											"value": "nepMobileLabel",
																											"script": "",
																											"translation": []
																										}
																									],
																									"data": []
																								},
																								{
																									"fieldNo": "6f40b828-b67e-44eb-83f1-e9bcb7adf256",
																									"fieldName": "AppCache_inPassRepeat",
																									"fieldParent": "b8d865ed-6698-4027-dc63-10fff3d17d66",
																									"fieldType": "sap.m.Input",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "width",
																											"grouping": "Properties",
																											"value": "100%",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "type",
																											"grouping": "Properties",
																											"value": "Password",
																											"script": "",
																											"translation": []
																										}
																									],
																									"data": []
																								},
																								{
																									"fieldNo": "2756763c-0251-47c4-a5a8-04d6216f4331",
																									"fieldName": "AppCache_butPassword",
																									"fieldParent": "b8d865ed-6698-4027-dc63-10fff3d17d66",
																									"fieldType": "sap.m.Button",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "width",
																											"grouping": "Properties",
																											"value": "100%",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "type",
																											"grouping": "Properties",
																											"value": "Emphasized",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "text",
																											"grouping": "Properties",
																											"value": "Confirm",
																											"script": "",
																											"translation": [
																												{
																													"language": "JA",
																													"value": "確認する"
																												},
																												{
																													"language": "ZH",
																													"value": "确认"
																												},
																												{
																													"language": "DA",
																													"value": "Bekræfte"
																												},
																												{
																													"language": "NL",
																													"value": "Bevestigen"
																												},
																												{
																													"language": "FI",
																													"value": "Vahvistaa"
																												},
																												{
																													"language": "IT",
																													"value": "Confermare"
																												},
																												{
																													"language": "PL",
																													"value": "Potwierdzać"
																												},
																												{
																													"language": "PT",
																													"value": "Confirmar"
																												},
																												{
																													"language": "ES",
																													"value": "Confirmar"
																												},
																												{
																													"language": "SV",
																													"value": "Bekräfta"
																												},
																												{
																													"language": "FR",
																													"value": "Confirmer"
																												},
																												{
																													"language": "NO",
																													"value": "Bekreft"
																												},
																												{
																													"language": "DE",
																													"value": "Bestätigen"
																												},
																												{
																													"language": "EN",
																													"value": "Confirm"
																												}
																											]
																										},
																										{
																											"attribute": "styleClass",
																											"grouping": "Properties",
																											"value": "nepMobileButton",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "press",
																											"grouping": "Events",
																											"value": "AppCache.SetPassword();",
																											"script": "AppCache.SetPassword();",
																											"translation": []
																										}
																									],
																									"data": []
																								}
																							]
																						}
																					]
																				}
																			]
																		},
																		{
																			"fieldNo": "d13a3595-9b70-44c4-f6e5-c5e5df7f8e44",
																			"fieldName": "AppCache_boxPasscode",
																			"fieldParent": "d6027101-d2e8-4829-db73-7f2b38519a3b",
																			"fieldType": "sap.m.Page",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "styleClass",
																					"grouping": "Properties",
																					"value": "nepPage",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showHeader",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showFooter",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "enableScrolling",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "backgroundDesign",
																					"grouping": "Properties",
																					"value": "Transparent",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": [
																				{
																					"fieldNo": "a0fe8a58-92f3-409b-9c85-ee6de5e31368",
																					"fieldName": "AppCache_boxLogonPasscode",
																					"fieldParent": "d13a3595-9b70-44c4-f6e5-c5e5df7f8e44",
																					"fieldType": "sap.m.FlexBox",
																					"script": "",
																					"request": [],
																					"response": [],
																					"attributes": [
																						{
																							"attribute": "width",
																							"grouping": "Properties",
																							"value": "100%",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "justifyContent",
																							"grouping": "Properties",
																							"value": "Center",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "height",
																							"grouping": "Properties",
																							"value": "75%",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "alignItems",
																							"grouping": "Properties",
																							"value": "Center",
																							"script": "",
																							"translation": []
																						}
																					],
																					"data": [
																						{
																							"fieldNo": "9e11118b-e84d-4216-d0f4-02b9fdb2a417",
																							"fieldName": "panLogonPasscode",
																							"fieldParent": "a0fe8a58-92f3-409b-9c85-ee6de5e31368",
																							"fieldType": "sap.m.Panel",
																							"script": "",
																							"request": [],
																							"response": [],
																							"attributes": [
																								{
																									"attribute": "width",
																									"grouping": "Properties",
																									"value": "500px",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "styleClassPadding",
																									"grouping": "Properties",
																									"value": "sapUiContentPadding",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "styleClass",
																									"grouping": "Properties",
																									"value": "nepPanLogon nepPanLogonBorder",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "backgroundDesign",
																									"grouping": "Properties",
																									"value": "Transparent",
																									"script": "",
																									"translation": []
																								}
																							],
																							"data": [
																								{
																									"fieldNo": "22cc0495-0f36-45c4-e397-4332cf08db2c",
																									"fieldName": "AppCache_formPasscode",
																									"fieldParent": "9e11118b-e84d-4216-d0f4-02b9fdb2a417",
																									"fieldType": "sap.ui.layout.form.SimpleForm",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "layout",
																											"grouping": "Properties",
																											"value": "ResponsiveGridLayout",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "labelSpanM",
																											"grouping": "Properties",
																											"value": "12",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "labelSpanL",
																											"grouping": "Properties",
																											"value": "12",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "editable",
																											"grouping": "Properties",
																											"value": "true",
																											"script": "",
																											"translation": []
																										}
																									],
																									"data": [
																										{
																											"fieldNo": "8f979d4d-bb4e-454c-f207-b7ffc0f5a44b",
																											"fieldName": "lblFormPasscode",
																											"fieldParent": "22cc0495-0f36-45c4-e397-4332cf08db2c",
																											"fieldType": "sap.m.Label",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "styleClassMargin",
																													"grouping": "Properties",
																													"value": "sapUiTinyMarginBottom",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "36e6e29e-4ce7-4912-c893-4388d28279bb",
																											"fieldName": "txtFormPasscode",
																											"fieldParent": "22cc0495-0f36-45c4-e397-4332cf08db2c",
																											"fieldType": "sap.m.Title",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "titleStyle",
																													"grouping": "Properties",
																													"value": "H2",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "text",
																													"grouping": "Properties",
																													"value": "Pin Code",
																													"script": "",
																													"translation": [
																														{
																															"language": "JA",
																															"value": "ピンコード"
																														},
																														{
																															"language": "ZH",
																															"value": "PIN码"
																														},
																														{
																															"language": "DA",
																															"value": "Pinkode"
																														},
																														{
																															"language": "NL",
																															"value": "Pincode"
																														},
																														{
																															"language": "FI",
																															"value": "Pin-koodi"
																														},
																														{
																															"language": "IT",
																															"value": "Codice PIN"
																														},
																														{
																															"language": "PL",
																															"value": "Kod PIN"
																														},
																														{
																															"language": "PT",
																															"value": "Código PIN"
																														},
																														{
																															"language": "ES",
																															"value": "Código PIN"
																														},
																														{
																															"language": "SV",
																															"value": "Pinkod"
																														},
																														{
																															"language": "FR",
																															"value": "Code PIN"
																														},
																														{
																															"language": "NO",
																															"value": "Pin kode"
																														},
																														{
																															"language": "DE",
																															"value": "PIN Code"
																														},
																														{
																															"language": "EN",
																															"value": "Pin Code"
																														}
																													]
																												},
																												{
																													"attribute": "styleClassVisibility",
																													"grouping": "Properties",
																													"value": "sapUiHideOnPhone",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "nepMobileTitle",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "6247aa2d-ed4c-4373-a42c-2e5870fe9676",
																											"fieldName": "AppCache_lblPasscode1",
																											"fieldParent": "22cc0495-0f36-45c4-e397-4332cf08db2c",
																											"fieldType": "sap.m.Label",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "text",
																													"grouping": "Properties",
																													"value": "Set Pin",
																													"script": "",
																													"translation": [
																														{
																															"language": "JA",
																															"value": "セットピン"
																														},
																														{
																															"language": "ZH",
																															"value": "设置Pin"
																														},
																														{
																															"language": "DA",
																															"value": "Indstil pin"
																														},
																														{
																															"language": "NL",
																															"value": "Stel Pin in"
																														},
																														{
																															"language": "FI",
																															"value": "Aseta Pin"
																														},
																														{
																															"language": "IT",
																															"value": "Imposta il pin"
																														},
																														{
																															"language": "PL",
																															"value": "Ustaw pinezkę"
																														},
																														{
																															"language": "PT",
																															"value": "Definir PIN"
																														},
																														{
																															"language": "ES",
																															"value": "Set Pin"
																														},
																														{
																															"language": "SV",
																															"value": "Ställ in pin"
																														},
																														{
																															"language": "FR",
																															"value": "Set Pin"
																														},
																														{
																															"language": "NO",
																															"value": "Sett Pin"
																														},
																														{
																															"language": "DE",
																															"value": "PIN setzen"
																														},
																														{
																															"language": "EN",
																															"value": "Set Pin"
																														}
																													]
																												},
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "nepMobileLabel",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "0afa3e55-55d4-4e34-8277-8e428b19b845",
																											"fieldName": "AppCache_inPasscode1",
																											"fieldParent": "22cc0495-0f36-45c4-e397-4332cf08db2c",
																											"fieldType": "sap.m.Input",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "width",
																													"grouping": "Properties",
																													"value": "100%",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "type",
																													"grouping": "Properties",
																													"value": "Password",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "placeholder",
																													"grouping": "Properties",
																													"value": "Numeric only",
																													"script": "",
																													"translation": [
																														{
																															"language": "JA",
																															"value": "数値のみ"
																														},
																														{
																															"language": "ZH",
																															"value": "仅限数字"
																														},
																														{
																															"language": "DA",
																															"value": "Kun numerisk"
																														},
																														{
																															"language": "NL",
																															"value": "Alleen numeriek"
																														},
																														{
																															"language": "FI",
																															"value": "Vain numeerinen"
																														},
																														{
																															"language": "IT",
																															"value": "Solo numerico"
																														},
																														{
																															"language": "PL",
																															"value": "Tylko numeryczne"
																														},
																														{
																															"language": "PT",
																															"value": "Apenas numérico"
																														},
																														{
																															"language": "ES",
																															"value": "Solo numérico"
																														},
																														{
																															"language": "SV",
																															"value": "Endast numerisk"
																														},
																														{
																															"language": "FR",
																															"value": "Numérique seulement"
																														},
																														{
																															"language": "NO",
																															"value": "Kun numeriske tegn"
																														},
																														{
																															"language": "DE",
																															"value": "Nur numerisch"
																														},
																														{
																															"language": "EN",
																															"value": "Numeric only"
																														}
																													]
																												},
																												{
																													"attribute": "submit",
																													"grouping": "Events",
																													"value": "onPasscode1Submit()",
																													"script": "onPasscode1Submit()",
																													"translation": []
																												},
																												{
																													"attribute": "liveChange",
																													"grouping": "Events",
																													"value": "this.setValue(sanitizePincode(this.getValue()));",
																													"script": "this.setValue(sanitizePincode(this.getValue()));",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "a5929851-d5b8-4fa4-a6b6-69a9fb1b18a2",
																											"fieldName": "AppCache_lblPasscode2",
																											"fieldParent": "22cc0495-0f36-45c4-e397-4332cf08db2c",
																											"fieldType": "sap.m.Label",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "text",
																													"grouping": "Properties",
																													"value": "Repeat Pin",
																													"script": "",
																													"translation": [
																														{
																															"language": "JA",
																															"value": "繰り返しピン"
																														},
																														{
																															"language": "ZH",
																															"value": "重复Pin"
																														},
																														{
																															"language": "DA",
																															"value": "Gentag Pin"
																														},
																														{
																															"language": "NL",
																															"value": "Herhaal Pin"
																														},
																														{
																															"language": "FI",
																															"value": "Toista Pin"
																														},
																														{
																															"language": "IT",
																															"value": "Ripeti il pin"
																														},
																														{
																															"language": "PL",
																															"value": "Powtórz Pin"
																														},
																														{
																															"language": "PT",
																															"value": "Repita o PIN"
																														},
																														{
																															"language": "ES",
																															"value": "Repetir Pin"
																														},
																														{
																															"language": "SV",
																															"value": "Upprepa Pin"
																														},
																														{
																															"language": "FR",
																															"value": "Pin de répétition"
																														},
																														{
																															"language": "NO",
																															"value": "Gjenta Pin"
																														},
																														{
																															"language": "DE",
																															"value": "PIN wiederholen"
																														},
																														{
																															"language": "EN",
																															"value": "Repeat Pin"
																														}
																													]
																												},
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "nepMobileLabel",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "23126457-393c-4305-a22c-ebbfe1316ae2",
																											"fieldName": "AppCache_inPasscode2",
																											"fieldParent": "22cc0495-0f36-45c4-e397-4332cf08db2c",
																											"fieldType": "sap.m.Input",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "width",
																													"grouping": "Properties",
																													"value": "100%",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "type",
																													"grouping": "Properties",
																													"value": "Password",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "placeholder",
																													"grouping": "Properties",
																													"value": "Numeric only",
																													"script": "",
																													"translation": [
																														{
																															"language": "JA",
																															"value": "数値のみ"
																														},
																														{
																															"language": "ZH",
																															"value": "仅限数字"
																														},
																														{
																															"language": "DA",
																															"value": "Kun numerisk"
																														},
																														{
																															"language": "NL",
																															"value": "Alleen numeriek"
																														},
																														{
																															"language": "FI",
																															"value": "Vain numeerinen"
																														},
																														{
																															"language": "IT",
																															"value": "Solo numerico"
																														},
																														{
																															"language": "PL",
																															"value": "Tylko numeryczne"
																														},
																														{
																															"language": "PT",
																															"value": "Apenas numérico"
																														},
																														{
																															"language": "ES",
																															"value": "Solo numérico"
																														},
																														{
																															"language": "SV",
																															"value": "Endast numerisk"
																														},
																														{
																															"language": "FR",
																															"value": "Numérique seulement"
																														},
																														{
																															"language": "NO",
																															"value": "Kun numeriske tegn"
																														},
																														{
																															"language": "DE",
																															"value": "Nur numerisch"
																														},
																														{
																															"language": "EN",
																															"value": "Numeric only"
																														}
																													]
																												},
																												{
																													"attribute": "submit",
																													"grouping": "Events",
																													"value": "onPasscode2Submit();",
																													"script": "onPasscode2Submit();",
																													"translation": []
																												},
																												{
																													"attribute": "liveChange",
																													"grouping": "Events",
																													"value": "this.setValue(sanitizePincode(this.getValue()));",
																													"script": "this.setValue(sanitizePincode(this.getValue()));",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "6e2f2b51-5455-402a-c21d-b15581122aad",
																											"fieldName": "AppCache_butPasscode",
																											"fieldParent": "22cc0495-0f36-45c4-e397-4332cf08db2c",
																											"fieldType": "sap.m.Button",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "width",
																													"grouping": "Properties",
																													"value": "150px",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "type",
																													"grouping": "Properties",
																													"value": "Emphasized",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "text",
																													"grouping": "Properties",
																													"value": "Confirm",
																													"script": "",
																													"translation": [
																														{
																															"language": "JA",
																															"value": "確認する"
																														},
																														{
																															"language": "ZH",
																															"value": "确认"
																														},
																														{
																															"language": "DA",
																															"value": "Bekræfte"
																														},
																														{
																															"language": "NL",
																															"value": "Bevestigen"
																														},
																														{
																															"language": "FI",
																															"value": "Vahvistaa"
																														},
																														{
																															"language": "IT",
																															"value": "Confermare"
																														},
																														{
																															"language": "PL",
																															"value": "Potwierdzać"
																														},
																														{
																															"language": "PT",
																															"value": "Confirmar"
																														},
																														{
																															"language": "ES",
																															"value": "Confirmar"
																														},
																														{
																															"language": "SV",
																															"value": "Bekräfta"
																														},
																														{
																															"language": "FR",
																															"value": "Confirmer"
																														},
																														{
																															"language": "NO",
																															"value": "Bekreft"
																														},
																														{
																															"language": "DE",
																															"value": "Bestätigen"
																														},
																														{
																															"language": "EN",
																															"value": "Confirm"
																														}
																													]
																												},
																												{
																													"attribute": "styleClassMargin",
																													"grouping": "Properties",
																													"value": "sapUiSmallMarginTop",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "nepMobileButton",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "press",
																													"grouping": "Events",
																													"value": "AppCache.SetPasscode();",
																													"script": "AppCache.SetPasscode();",
																													"translation": []
																												}
																											],
																											"data": []
																										}
																									]
																								},
																								{
																									"fieldNo": "f0d4c765-85e6-40a6-a42a-3bb2051a07d8",
																									"fieldName": "panLinksPass",
																									"fieldParent": "9e11118b-e84d-4216-d0f4-02b9fdb2a417",
																									"fieldType": "sap.m.Panel",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "visible",
																											"grouping": "Properties",
																											"value": "false",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "styleClassPadding",
																											"grouping": "Properties",
																											"value": "sapUiNoContentPadding",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "styleClassMargin",
																											"grouping": "Properties",
																											"value": "sapUiMediumMarginTop",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "styleClass",
																											"grouping": "Properties",
																											"value": "nepPanLinks",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "backgroundDesign",
																											"grouping": "Properties",
																											"value": "Transparent",
																											"script": "",
																											"translation": []
																										}
																									],
																									"data": [
																										{
																											"fieldNo": "6b8c4bf4-65f8-4301-b74a-f9e69009848c",
																											"fieldName": "toolLinksPass",
																											"fieldParent": "f0d4c765-85e6-40a6-a42a-3bb2051a07d8",
																											"fieldType": "sap.m.Toolbar",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "nepLinkNoBorder",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "design",
																													"grouping": "Properties",
																													"value": "Transparent",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "position",
																													"grouping": "Parent",
																													"value": "HeaderToolbar",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": [
																												{
																													"fieldNo": "cd800b93-88ec-4978-9962-c68e9609ed9c",
																													"fieldName": "linkPassText1",
																													"fieldParent": "6b8c4bf4-65f8-4301-b74a-f9e69009848c",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "type",
																															"grouping": "Properties",
																															"value": "Transparent",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin1);",
																															"script": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin1);",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "31fe8267-fd31-4ec6-eb31-b99fb2d05a5c",
																													"fieldName": "linkPassSep1",
																													"fieldParent": "6b8c4bf4-65f8-4301-b74a-f9e69009848c",
																													"fieldType": "sap.m.ToolbarSeparator",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "b3cb068d-0a96-48ba-d2c5-33f7c6c25699",
																													"fieldName": "linkPassText2",
																													"fieldParent": "6b8c4bf4-65f8-4301-b74a-f9e69009848c",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "type",
																															"grouping": "Properties",
																															"value": "Transparent",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin2);",
																															"script": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin2);",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "0ea977d0-02d1-461f-97f3-4e1685e9a81d",
																													"fieldName": "linkPassSep2",
																													"fieldParent": "6b8c4bf4-65f8-4301-b74a-f9e69009848c",
																													"fieldType": "sap.m.ToolbarSeparator",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "ed09c2d2-41f4-4bd4-b10b-f7da55d2d3f8",
																													"fieldName": "linkPassText3",
																													"fieldParent": "6b8c4bf4-65f8-4301-b74a-f9e69009848c",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "type",
																															"grouping": "Properties",
																															"value": "Transparent",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin3);",
																															"script": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin3);",
																															"translation": []
																														}
																													],
																													"data": []
																												}
																											]
																										}
																									]
																								}
																							]
																						}
																					]
																				}
																			]
																		},
																		{
																			"fieldNo": "ec9721ad-4ad3-4b01-cb2e-f8c2c6599cb9",
																			"fieldName": "AppCache_boxUsers",
																			"fieldParent": "d6027101-d2e8-4829-db73-7f2b38519a3b",
																			"fieldType": "sap.m.Page",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "styleClass",
																					"grouping": "Properties",
																					"value": "nepPage",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showHeader",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showFooter",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "enableScrolling",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "backgroundDesign",
																					"grouping": "Properties",
																					"value": "Transparent",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": [
																				{
																					"fieldNo": "b70baafb-1af2-498d-a985-7834c1e3ed36",
																					"fieldName": "AppCache_boxLogonUsers",
																					"fieldParent": "ec9721ad-4ad3-4b01-cb2e-f8c2c6599cb9",
																					"fieldType": "sap.m.FlexBox",
																					"script": "",
																					"request": [],
																					"response": [],
																					"attributes": [
																						{
																							"attribute": "width",
																							"grouping": "Properties",
																							"value": "100%",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "styleClass",
																							"grouping": "Properties",
																							"value": "sapUiNoContentPadding",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "justifyContent",
																							"grouping": "Properties",
																							"value": "Center",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "height",
																							"grouping": "Properties",
																							"value": "100%",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "alignItems",
																							"grouping": "Properties",
																							"value": "Center",
																							"script": "",
																							"translation": []
																						}
																					],
																					"data": [
																						{
																							"fieldNo": "02c6f854-be53-41cc-de4c-3f9ca608f8bc",
																							"fieldName": "panLogonUsers",
																							"fieldParent": "b70baafb-1af2-498d-a985-7834c1e3ed36",
																							"fieldType": "sap.m.Panel",
																							"script": "",
																							"request": [],
																							"response": [],
																							"attributes": [
																								{
																									"attribute": "width",
																									"grouping": "Properties",
																									"value": "500px",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "styleClassPadding",
																									"grouping": "Properties",
																									"value": "sapUiContentPadding",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "styleClass",
																									"grouping": "Properties",
																									"value": "nepPanLogon nepPanLogonBorder",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "backgroundDesign",
																									"grouping": "Properties",
																									"value": "Transparent",
																									"script": "",
																									"translation": []
																								}
																							],
																							"data": [
																								{
																									"fieldNo": "d662eae5-3c14-4f0b-8153-dcba45267e4b",
																									"fieldName": "toolUsers",
																									"fieldParent": "02c6f854-be53-41cc-de4c-3f9ca608f8bc",
																									"fieldType": "sap.m.Toolbar",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "styleClassMargin",
																											"grouping": "Properties",
																											"value": "sapUiTinyMarginTop",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "styleClass",
																											"grouping": "Properties",
																											"value": "nepToolNoBorder",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "enableCompactMode",
																											"grouping": "Properties",
																											"value": "true",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "design",
																											"grouping": "Properties",
																											"value": "Transparent",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "position",
																											"grouping": "Parent",
																											"value": "HeaderToolbar",
																											"script": "",
																											"translation": []
																										}
																									],
																									"data": [
																										{
																											"fieldNo": "2659f3ba-b3db-46fb-82e2-d994211fc83e",
																											"fieldName": "txtFormUsers",
																											"fieldParent": "d662eae5-3c14-4f0b-8153-dcba45267e4b",
																											"fieldType": "sap.m.Title",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "titleStyle",
																													"grouping": "Properties",
																													"value": "H2",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "text",
																													"grouping": "Properties",
																													"value": "Users",
																													"script": "",
																													"translation": [
																														{
																															"language": "JA",
																															"value": "ピンコード"
																														},
																														{
																															"language": "ZH",
																															"value": "PIN码"
																														},
																														{
																															"language": "DA",
																															"value": "Brugere"
																														},
																														{
																															"language": "NL",
																															"value": "Pincode"
																														},
																														{
																															"language": "FI",
																															"value": "Pin-koodi"
																														},
																														{
																															"language": "IT",
																															"value": "Codice PIN"
																														},
																														{
																															"language": "PL",
																															"value": "Użytkownicy"
																														},
																														{
																															"language": "PT",
																															"value": "Comercial"
																														},
																														{
																															"language": "ES",
																															"value": "Usuarios"
																														},
																														{
																															"language": "SV",
																															"value": "Användare"
																														},
																														{
																															"language": "FR",
																															"value": "Code PIN"
																														},
																														{
																															"language": "NO",
																															"value": "Brukere"
																														},
																														{
																															"language": "DE",
																															"value": "Benutzer"
																														},
																														{
																															"language": "EN",
																															"value": "Users"
																														}
																													]
																												},
																												{
																													"attribute": "styleClassVisibility",
																													"grouping": "Properties",
																													"value": "sapUiHideOnPhone",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "styleClassMargin",
																													"grouping": "Properties",
																													"value": "sapUiSmallMarginTopBottom",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "nepMobileTitle",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": []
																										},
																										{
																											"fieldNo": "ba39231c-1ca1-416a-fe03-33eb85340ef7",
																											"fieldName": "toolUsersSpacer",
																											"fieldParent": "d662eae5-3c14-4f0b-8153-dcba45267e4b",
																											"fieldType": "sap.m.ToolbarSpacer",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [],
																											"data": []
																										},
																										{
																											"fieldNo": "483d90dc-7b00-4355-d249-83dd4755dd0e",
																											"fieldName": "toolUsersSort",
																											"fieldParent": "d662eae5-3c14-4f0b-8153-dcba45267e4b",
																											"fieldType": "sap.m.SegmentedButton",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "visible",
																													"grouping": "Properties",
																													"value": "false",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "select",
																													"grouping": "Events",
																													"value": "Anonymous Function",
																													"script": [
																														"==OBJECT STRING==",
																														"let oSorter;\r",
																														"if (this.getSelectedKey() === 'date') {\r",
																														"    oSorter = new sap.ui.model.Sorter('lastLogin', true, false);\r",
																														"} else {\r",
																														"    oSorter = new sap.ui.model.Sorter('username', false, false);\r",
																														"}\r",
																														"\r",
																														"let binding = AppCacheUsers.getBinding('items');\r",
																														"binding.sort(oSorter);"
																													],
																													"translation": []
																												}
																											],
																											"data": [
																												{
																													"fieldNo": "2bc15a13-a7ab-4426-f9eb-3a5cbe16d566",
																													"fieldName": "toolUsersSortName",
																													"fieldParent": "483d90dc-7b00-4355-d249-83dd4755dd0e",
																													"fieldType": "sap.m.SegmentedButtonItem",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "text",
																															"grouping": "Properties",
																															"value": "Name",
																															"script": "",
																															"translation": [
																																{
																																	"language": "PL",
																																	"value": "Nazwa"
																																},
																																{
																																	"language": "EN",
																																	"value": "Name"
																																}
																															]
																														},
																														{
																															"attribute": "key",
																															"grouping": "Properties",
																															"value": "name",
																															"script": "",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "393cdf58-85d5-4103-9801-091a74bf229b",
																													"fieldName": "toolUsersSortDate",
																													"fieldParent": "483d90dc-7b00-4355-d249-83dd4755dd0e",
																													"fieldType": "sap.m.SegmentedButtonItem",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "text",
																															"grouping": "Properties",
																															"value": "Date",
																															"script": "",
																															"translation": [
																																{
																																	"language": "PL",
																																	"value": "Data"
																																},
																																{
																																	"language": "EN",
																																	"value": "Date"
																																}
																															]
																														},
																														{
																															"attribute": "key",
																															"grouping": "Properties",
																															"value": "date",
																															"script": "",
																															"translation": []
																														}
																													],
																													"data": []
																												}
																											]
																										},
																										{
																											"fieldNo": "1e27a622-ff0a-4e74-8169-264995ec79d8",
																											"fieldName": "toolUsersFilter",
																											"fieldParent": "d662eae5-3c14-4f0b-8153-dcba45267e4b",
																											"fieldType": "sap.m.SearchField",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "width",
																													"grouping": "Properties",
																													"value": "150px",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "styleClassMargin",
																													"grouping": "Properties",
																													"value": "sapUiTinyMarginEnd",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "liveChange",
																													"grouping": "Events",
																													"value": "Anonymous Function",
																													"script": [
																														"==OBJECT STRING==",
																														"let binding = AppCacheUsers.getBinding('items');\r",
																														"let filter = new sap.ui.model.Filter('username', 'Contains', this.getValue());\r",
																														"binding.filter([filter]);"
																													],
																													"translation": []
																												}
																											],
																											"data": []
																										}
																									]
																								},
																								{
																									"fieldNo": "83beb2ac-f2b9-4f3e-9e2d-f3eb55261ae6",
																									"fieldName": "AppCacheUserScroll",
																									"fieldParent": "02c6f854-be53-41cc-de4c-3f9ca608f8bc",
																									"fieldType": "sap.m.ScrollContainer",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "width",
																											"grouping": "Properties",
																											"value": "100%",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "vertical",
																											"grouping": "Properties",
																											"value": "true",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "horizontal",
																											"grouping": "Properties",
																											"value": "false",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "height",
																											"grouping": "Properties",
																											"value": "600px",
																											"script": "",
																											"translation": []
																										}
																									],
																									"data": [
																										{
																											"fieldNo": "8d2710b0-6934-48ef-a056-d2c33b5becc7",
																											"fieldName": "AppCacheUsers",
																											"fieldParent": "83beb2ac-f2b9-4f3e-9e2d-f3eb55261ae6",
																											"fieldType": "sap.m.List",
																											"script": "",
																											"bindingValue": "Generic Array",
																											"bindingType": "h",
																											"bindingSource": "P9",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "nepAppCacheUser",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "showNoData",
																													"grouping": "Properties",
																													"value": "false",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "rememberSelections",
																													"grouping": "Properties",
																													"value": "false",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "mode",
																													"grouping": "Properties",
																													"value": "Delete",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "enableCompactMode",
																													"grouping": "Properties",
																													"value": "true",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "backgroundDesign",
																													"grouping": "Properties",
																													"value": "Solid",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "setEnableEncryption",
																													"grouping": "Model",
																													"value": "true",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "setEnableCache",
																													"grouping": "Model",
																													"value": "true",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "setCacheType",
																													"grouping": "Model",
																													"value": "LocalStorage",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "delete",
																													"grouping": "Events",
																													"value": "Anonymous Function",
																													"script": [
																														"==OBJECT STRING==",
																														"let deleteItem = oEvent.getParameter('listItem');",
																														"let context = deleteItem.getBindingContext();",
																														"let data = context.getObject();",
																														"",
																														"ModelData.Delete(AppCacheUsers, ['username', 'logonData/type'], [data.username, data.logonData.type]);",
																														"setCacheAppCacheUsers();",
																														"",
																														"// Remove iOS SAMKeychain library and Android SecureStorage key",
																														"if (typeof window.cordova !== 'undefined' && !window.navigator.simulator && data.biometric) {",
																														"    if (sap.ui.Device.os.ios || sap.ui.Device.os.android) {",
																														"        // Set iOS SAMKeychain library and Android SecureStorage key",
																														"        let servicekey = data.username.toString().toUpperCase();",
																														"",
																														"        // Delete SecureStorage key",
																														"        if (typeof cordova.plugins !== 'undefined' && cordova.plugins.SecureStorage) {",
																														"            let ss = new cordova.plugins.SecureStorage(",
																														"                function () {",
																														"                    try {",
																														"                        ss.remove(function (key) { }, function (error) { }, servicekey);",
																														"                    } catch (error) { }",
																														"                },",
																														"                function (error) { },",
																														"                AppCache.AppID);",
																														"        }",
																														"",
																														"        // FingerprintAuth.delete",
																														"        if (window.FingerprintAuth) {",
																														"            try {",
																														"                FingerprintAuth.delete({",
																														"                    clientId: AppCache.AppID,",
																														"                    username: servicekey",
																														"                }, function (result) {",
																														"",
																														"                }, function (error) {",
																														"",
																														"                });",
																														"            } catch (error) {",
																														"",
																														"            }",
																														"        }",
																														"    }",
																														"}",
																														"",
																														"toolUsersFilter.setValue();",
																														"toolUsersFilter.fireLiveChange();",
																														"AppCache.calculateUserScreen();",
																														"",
																														"// No User -> Logon Screen",
																														"if (!modelAppCacheUsers.oData.length) AppCache.setEnableLogonScreen();"
																													],
																													"translation": []
																												},
																												{
																													"attribute": "cacheInitLoadFinished",
																													"grouping": "Events",
																													"value": "cacheLoaded++;",
																													"script": "cacheLoaded++;",
																													"translation": []
																												}
																											],
																											"data": [
																												{
																													"fieldNo": "984858e0-bca3-46b3-ec50-70479225716b",
																													"fieldName": "AppCache_itemUsers",
																													"fieldParent": "8d2710b0-6934-48ef-a056-d2c33b5becc7",
																													"fieldType": "sap.m.ObjectListItem",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "type",
																															"grouping": "Properties",
																															"value": "Active",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "title",
																															"grouping": "Properties",
																															"value": "{username}",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "numberState",
																															"grouping": "Properties",
																															"value": "Warning",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "iconDensityAware",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "title",
																															"grouping": "Formatter",
																															"value": "Anonymous Function",
																															"script": [
																																"==OBJECT STRING==",
																																"let user = ModelData.FindFirst(AppCacheUsers, 'username', username);\r",
																																"return user && user.name ? user.name : username;\r",
																																""
																															],
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "Anonymous Function",
																															"script": [
																																"==OBJECT STRING==",
																																"const ctx = oEvent.oSource.getBindingContext();",
																																"const data = ctx.getObject();",
																																"",
																																"AppCache.userInfo = data;",
																																"",
																																"// PWA - Webauthn",
																																"if (",
																																"    AppCache.enablePwa && ",
																																"    AppCache.enablePasscode && ",
																																"    AppCache.userInfo.webauthid && ",
																																"    (window.PublicKeyCredential !== undefined || typeof window.PublicKeyCredential === 'function')",
																																") {",
																																"    sap.n.Webauthn.login(AppCache.userInfo.webauthid)",
																																"        .then(function (res) {",
																																"            // check if response is an error",
																																"            if (res instanceof Error) {",
																																"                return;",
																																"            }",
																																"",
																																"            if (res instanceof window.PublicKeyCredential) {",
																																"                const {",
																																"                    response: {",
																																"                        authenticatorData: a, clientDataJSON: c, signature: s, userHandle: u",
																																"                    }",
																																"                } = res;",
																																"",
																																"                const clientData = JSON.parse(new TextDecoder('utf-8').decode(c));",
																																"                if (clientData.type !== 'webauthn.get') return;",
																																"                ",
																																"                NumPad.numValue = AppCache.userInfo.webauthid;",
																																"                AppCache.Encrypted = '';",
																																"                NumPad.Logon();",
																																"                ",
																																"                AppCacheShellUser.setEnabled(true);",
																																"                AppCache.setUserInfo();",
																																"            }",
																																"        });",
																																"} else {",
																																"    AppCache.setEnablePasscodeEntry();",
																																"}",
																																"",
																																"// Unselect",
																																"AppCacheUsers.removeSelections();",
																																""
																															],
																															"translation": []
																														}
																													],
																													"data": [
																														{
																															"fieldNo": "7f0e8a0d-30eb-4844-ac7a-759767a21f13",
																															"fieldName": "AppCache_itemUsersDate",
																															"fieldParent": "984858e0-bca3-46b3-ec50-70479225716b",
																															"fieldType": "sap.m.ObjectAttribute",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "title",
																																	"grouping": "Properties",
																																	"value": "Last Login",
																																	"script": "",
																																	"translation": [
																																		{
																																			"language": "DA",
																																			"value": "Sidste login"
																																		},
																																		{
																																			"language": "IT",
																																			"value": "Ultimo accesso"
																																		},
																																		{
																																			"language": "PL",
																																			"value": "Ostatnie logowanie"
																																		},
																																		{
																																			"language": "PT",
																																			"value": "Último Login"
																																		},
																																		{
																																			"language": "ES",
																																			"value": "Último acceso"
																																		},
																																		{
																																			"language": "SV",
																																			"value": "Senaste inloggning"
																																		},
																																		{
																																			"language": "FR",
																																			"value": "Dernière connexion"
																																		},
																																		{
																																			"language": "NO",
																																			"value": "Siste innlogging"
																																		},
																																		{
																																			"language": "DE",
																																			"value": "Letzte Anmeldung"
																																		},
																																		{
																																			"language": "EN",
																																			"value": "Last Login"
																																		}
																																	]
																																},
																																{
																																	"attribute": "text",
																																	"grouping": "Properties",
																																	"value": "{lastLogin}",
																																	"script": "",
																																	"translation": []
																																},
																																{
																																	"attribute": "styleClassMargin",
																																	"grouping": "Properties",
																																	"value": "sapUiNoMargin",
																																	"script": "",
																																	"translation": []
																																},
																																{
																																	"attribute": "text",
																																	"grouping": "Formatter",
																																	"value": "date:BrowserSetting",
																																	"script": "",
																																	"translation": []
																																}
																															],
																															"data": []
																														}
																													]
																												}
																											]
																										}
																									]
																								},
																								{
																									"fieldNo": "4e86797e-22b4-4c98-e19d-87577dd311fe",
																									"fieldName": "AppCache_butNewUser",
																									"fieldParent": "02c6f854-be53-41cc-de4c-3f9ca608f8bc",
																									"fieldType": "sap.m.Button",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "width",
																											"grouping": "Properties",
																											"value": "150px",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "type",
																											"grouping": "Properties",
																											"value": "Emphasized",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "text",
																											"grouping": "Properties",
																											"value": "Login New User",
																											"script": "",
																											"translation": [
																												{
																													"language": "JA",
																													"value": "ログオン"
																												},
																												{
																													"language": "ZH",
																													"value": "登录"
																												},
																												{
																													"language": "DA",
																													"value": "Log på"
																												},
																												{
																													"language": "NL",
																													"value": "Inloggen"
																												},
																												{
																													"language": "FI",
																													"value": "Kirjautua sisään"
																												},
																												{
																													"language": "IT",
																													"value": "Accedere"
																												},
																												{
																													"language": "PL",
																													"value": "Zaloguj się Nowy użytkownik"
																												},
																												{
																													"language": "PT",
																													"value": "Logon"
																												},
																												{
																													"language": "ES",
																													"value": "Acceder"
																												},
																												{
																													"language": "SV",
																													"value": "Logga in"
																												},
																												{
																													"language": "FR",
																													"value": "Se connecter"
																												},
																												{
																													"language": "NO",
																													"value": "Logg på ny bruker"
																												},
																												{
																													"language": "DE",
																													"value": "Einloggen"
																												},
																												{
																													"language": "EN",
																													"value": "Login new user"
																												}
																											]
																										},
																										{
																											"attribute": "styleClassMargin",
																											"grouping": "Properties",
																											"value": "sapUiSmallMarginTop",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "styleClass",
																											"grouping": "Properties",
																											"value": "nepMobileButton",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "press",
																											"grouping": "Events",
																											"value": "Anonymous Function",
																											"script": [
																												"==OBJECT STRING==",
																												"sap.n.Launchpad.settingsMenuClose();",
																												"AppCache.Logout();"
																											],
																											"translation": []
																										}
																									],
																									"data": []
																								},
																								{
																									"fieldNo": "2fb0a3bc-383c-43eb-d6cc-cef8b08b1376",
																									"fieldName": "panLinksUsers",
																									"fieldParent": "02c6f854-be53-41cc-de4c-3f9ca608f8bc",
																									"fieldType": "sap.m.Panel",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "visible",
																											"grouping": "Properties",
																											"value": "false",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "styleClassPadding",
																											"grouping": "Properties",
																											"value": "sapUiNoContentPadding",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "styleClassMargin",
																											"grouping": "Properties",
																											"value": "sapUiMediumMarginTop",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "styleClass",
																											"grouping": "Properties",
																											"value": "nepPanLinks",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "enableCompactMode",
																											"grouping": "Properties",
																											"value": "true",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "backgroundDesign",
																											"grouping": "Properties",
																											"value": "Transparent",
																											"script": "",
																											"translation": []
																										}
																									],
																									"data": [
																										{
																											"fieldNo": "3ee8d870-76d1-4497-9b00-a2c1f68b976d",
																											"fieldName": "toolLinksUsers",
																											"fieldParent": "2fb0a3bc-383c-43eb-d6cc-cef8b08b1376",
																											"fieldType": "sap.m.Toolbar",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "nepLinkNoBorder",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "design",
																													"grouping": "Properties",
																													"value": "Transparent",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "position",
																													"grouping": "Parent",
																													"value": "HeaderToolbar",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": [
																												{
																													"fieldNo": "f6b80cbb-be2a-45b7-81bc-98cfc6144269",
																													"fieldName": "linkUsersText1",
																													"fieldParent": "3ee8d870-76d1-4497-9b00-a2c1f68b976d",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "type",
																															"grouping": "Properties",
																															"value": "Transparent",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin1);",
																															"script": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin1);",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "fe3b1bed-288a-46fc-8756-e7720f8d1371",
																													"fieldName": "linkUsersSep1",
																													"fieldParent": "3ee8d870-76d1-4497-9b00-a2c1f68b976d",
																													"fieldType": "sap.m.ToolbarSeparator",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "24f34d36-eb28-487f-a854-efde5b850e20",
																													"fieldName": "linkUsersText2",
																													"fieldParent": "3ee8d870-76d1-4497-9b00-a2c1f68b976d",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "type",
																															"grouping": "Properties",
																															"value": "Transparent",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin2);",
																															"script": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin2);",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "f7af062f-9f17-4b50-de33-0d4ac05de000",
																													"fieldName": "linkUsersSep2",
																													"fieldParent": "3ee8d870-76d1-4497-9b00-a2c1f68b976d",
																													"fieldType": "sap.m.ToolbarSeparator",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "d130a684-0c07-4bef-cc49-2be434bd1e79",
																													"fieldName": "linkUsersText3",
																													"fieldParent": "3ee8d870-76d1-4497-9b00-a2c1f68b976d",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "type",
																															"grouping": "Properties",
																															"value": "Transparent",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin3);",
																															"script": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin3);",
																															"translation": []
																														}
																													],
																													"data": []
																												}
																											]
																										}
																									]
																								}
																							]
																						}
																					]
																				}
																			]
																		},
																		{
																			"fieldNo": "f8bafa5a-8fba-416c-dac9-51a2ab66476a",
																			"fieldName": "AppCache_boxPasscodeEntry",
																			"fieldParent": "d6027101-d2e8-4829-db73-7f2b38519a3b",
																			"fieldType": "sap.m.Page",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "styleClass",
																					"grouping": "Properties",
																					"value": "nepPage",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showHeader",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showFooter",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "enableScrolling",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "backgroundDesign",
																					"grouping": "Properties",
																					"value": "Transparent",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": [
																				{
																					"fieldNo": "d4db8b5e-73bb-46d0-d783-da09e32af95e",
																					"fieldName": "AppCache_boxLogonPasscodeEntry",
																					"fieldParent": "f8bafa5a-8fba-416c-dac9-51a2ab66476a",
																					"fieldType": "sap.m.FlexBox",
																					"script": "",
																					"request": [],
																					"response": [],
																					"attributes": [
																						{
																							"attribute": "width",
																							"grouping": "Properties",
																							"value": "100%",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "renderType",
																							"grouping": "Properties",
																							"value": "Bare",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "justifyContent",
																							"grouping": "Properties",
																							"value": "Center",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "height",
																							"grouping": "Properties",
																							"value": "75%",
																							"script": "",
																							"translation": []
																						},
																						{
																							"attribute": "alignItems",
																							"grouping": "Properties",
																							"value": "Center",
																							"script": "",
																							"translation": []
																						}
																					],
																					"data": [
																						{
																							"fieldNo": "921be91f-4a33-4d34-e83b-e527a479390f",
																							"fieldName": "boxNumpadPanel",
																							"fieldParent": "d4db8b5e-73bb-46d0-d783-da09e32af95e",
																							"fieldType": "sap.m.Panel",
																							"script": "",
																							"request": [],
																							"response": [],
																							"attributes": [
																								{
																									"attribute": "width",
																									"grouping": "Properties",
																									"value": "500px",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "styleClassPadding",
																									"grouping": "Properties",
																									"value": "sapUiContentPadding",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "styleClass",
																									"grouping": "Properties",
																									"value": "nepPanLogon nepPanLogonBorder",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "backgroundDesign",
																									"grouping": "Properties",
																									"value": "Transparent",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "busyIndicatorDelay",
																									"grouping": "Properties",
																									"value": "0",
																									"script": "",
																									"translation": []
																								}
																							],
																							"data": [
																								{
																									"fieldNo": "bab30c5b-dcee-43af-d794-0c321e28d9f0",
																									"fieldName": "boxNumpadContent",
																									"fieldParent": "921be91f-4a33-4d34-e83b-e527a479390f",
																									"fieldType": "sap.m.VBox",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "styleClass",
																											"grouping": "Properties",
																											"value": "sapUiNoContentPadding",
																											"script": "",
																											"translation": []
																										}
																									],
																									"data": [
																										{
																											"fieldNo": "782ca280-1795-4e59-9189-ee9b4942f910",
																											"fieldName": "boxShake",
																											"fieldParent": "bab30c5b-dcee-43af-d794-0c321e28d9f0",
																											"fieldType": "sap.m.VBox",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "width",
																													"grouping": "Properties",
																													"value": "100%",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "alignItems",
																													"grouping": "Properties",
																													"value": "Center",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": [
																												{
																													"fieldNo": "0428ae53-bc8c-4054-cc62-08edc229783d",
																													"fieldName": "boxNumpad02",
																													"fieldParent": "782ca280-1795-4e59-9189-ee9b4942f910",
																													"fieldType": "sap.m.HBox",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "width",
																															"grouping": "Properties",
																															"value": "100%",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "justifyContent",
																															"grouping": "Properties",
																															"value": "Center",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "alignItems",
																															"grouping": "Properties",
																															"value": "Center",
																															"script": "",
																															"translation": []
																														}
																													],
																													"data": [
																														{
																															"fieldNo": "dea428f3-199a-4707-dba3-9c055e1275a9",
																															"fieldName": "Passcode1",
																															"fieldParent": "0428ae53-bc8c-4054-cc62-08edc229783d",
																															"fieldType": "sap.m.CheckBox",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "enabled",
																																	"grouping": "Properties",
																																	"value": "false",
																																	"script": "",
																																	"translation": []
																																}
																															],
																															"data": []
																														},
																														{
																															"fieldNo": "bc27ebbb-db6c-4794-f2cc-734f0f36deff",
																															"fieldName": "Passcode2",
																															"fieldParent": "0428ae53-bc8c-4054-cc62-08edc229783d",
																															"fieldType": "sap.m.CheckBox",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "enabled",
																																	"grouping": "Properties",
																																	"value": "false",
																																	"script": "",
																																	"translation": []
																																}
																															],
																															"data": []
																														},
																														{
																															"fieldNo": "cac96322-e7ad-4ac1-9add-ac46aee3fff1",
																															"fieldName": "Passcode3",
																															"fieldParent": "0428ae53-bc8c-4054-cc62-08edc229783d",
																															"fieldType": "sap.m.CheckBox",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "enabled",
																																	"grouping": "Properties",
																																	"value": "false",
																																	"script": "",
																																	"translation": []
																																}
																															],
																															"data": []
																														},
																														{
																															"fieldNo": "f9025729-ebf9-4347-d4a7-cb506222fe9c",
																															"fieldName": "Passcode4",
																															"fieldParent": "0428ae53-bc8c-4054-cc62-08edc229783d",
																															"fieldType": "sap.m.CheckBox",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "enabled",
																																	"grouping": "Properties",
																																	"value": "false",
																																	"script": "",
																																	"translation": []
																																}
																															],
																															"data": []
																														},
																														{
																															"fieldNo": "b1512e90-7e83-4646-b4c7-ce91a25c65e9",
																															"fieldName": "Passcode5",
																															"fieldParent": "0428ae53-bc8c-4054-cc62-08edc229783d",
																															"fieldType": "sap.m.CheckBox",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "visible",
																																	"grouping": "Properties",
																																	"value": "false",
																																	"script": "",
																																	"translation": []
																																},
																																{
																																	"attribute": "enabled",
																																	"grouping": "Properties",
																																	"value": "false",
																																	"script": "",
																																	"translation": []
																																}
																															],
																															"data": []
																														},
																														{
																															"fieldNo": "21a85dab-50c0-4634-9576-bba37a4372da",
																															"fieldName": "Passcode6",
																															"fieldParent": "0428ae53-bc8c-4054-cc62-08edc229783d",
																															"fieldType": "sap.m.CheckBox",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "visible",
																																	"grouping": "Properties",
																																	"value": "false",
																																	"script": "",
																																	"translation": []
																																},
																																{
																																	"attribute": "enabled",
																																	"grouping": "Properties",
																																	"value": "false",
																																	"script": "",
																																	"translation": []
																																}
																															],
																															"data": []
																														},
																														{
																															"fieldNo": "4907e9f6-cac1-4f7f-c0f9-786f5b67cdcc",
																															"fieldName": "Passcode7",
																															"fieldParent": "0428ae53-bc8c-4054-cc62-08edc229783d",
																															"fieldType": "sap.m.CheckBox",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "visible",
																																	"grouping": "Properties",
																																	"value": "false",
																																	"script": "",
																																	"translation": []
																																},
																																{
																																	"attribute": "enabled",
																																	"grouping": "Properties",
																																	"value": "false",
																																	"script": "",
																																	"translation": []
																																}
																															],
																															"data": []
																														},
																														{
																															"fieldNo": "d3c5b92d-b35c-471e-ebd1-1deb3aac3821",
																															"fieldName": "Passcode8",
																															"fieldParent": "0428ae53-bc8c-4054-cc62-08edc229783d",
																															"fieldType": "sap.m.CheckBox",
																															"script": "",
																															"request": [],
																															"response": [],
																															"attributes": [
																																{
																																	"attribute": "visible",
																																	"grouping": "Properties",
																																	"value": "false",
																																	"script": "",
																																	"translation": []
																																},
																																{
																																	"attribute": "enabled",
																																	"grouping": "Properties",
																																	"value": "false",
																																	"script": "",
																																	"translation": []
																																}
																															],
																															"data": []
																														}
																													]
																												}
																											]
																										},
																										{
																											"fieldNo": "27729b01-d86b-4eb2-dfcd-35dd3de02044",
																											"fieldName": "boxNumpad1",
																											"fieldParent": "bab30c5b-dcee-43af-d794-0c321e28d9f0",
																											"fieldType": "sap.m.HBox",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "width",
																													"grouping": "Properties",
																													"value": "100%",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "justifyContent",
																													"grouping": "Properties",
																													"value": "Center",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "alignItems",
																													"grouping": "Properties",
																													"value": "Center",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": [
																												{
																													"fieldNo": "294908a6-2378-453c-9977-805039febfeb",
																													"fieldName": "butNumpad1",
																													"fieldParent": "27729b01-d86b-4eb2-dfcd-35dd3de02044",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "text",
																															"grouping": "Properties",
																															"value": "1",
																															"script": "",
																															"translation": [
																																{
																																	"language": "PT",
																																	"value": "1"
																																}
																															]
																														},
																														{
																															"attribute": "styleClass",
																															"grouping": "Properties",
																															"value": "numPad",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "NumPad.enterKey(1);",
																															"script": "NumPad.enterKey(1);",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "15da0f42-4d34-4fb3-cb46-eb396b9c9806",
																													"fieldName": "butNumpad2",
																													"fieldParent": "27729b01-d86b-4eb2-dfcd-35dd3de02044",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "text",
																															"grouping": "Properties",
																															"value": "2",
																															"script": "",
																															"translation": [
																																{
																																	"language": "PT",
																																	"value": "2"
																																}
																															]
																														},
																														{
																															"attribute": "styleClass",
																															"grouping": "Properties",
																															"value": "numPad",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "NumPad.enterKey(2);",
																															"script": "NumPad.enterKey(2);",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "b06cba9a-513c-4b0c-e24c-f61266ab3d01",
																													"fieldName": "butNumpad3",
																													"fieldParent": "27729b01-d86b-4eb2-dfcd-35dd3de02044",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "text",
																															"grouping": "Properties",
																															"value": "3",
																															"script": "",
																															"translation": [
																																{
																																	"language": "PT",
																																	"value": "3"
																																}
																															]
																														},
																														{
																															"attribute": "styleClass",
																															"grouping": "Properties",
																															"value": "numPad",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "NumPad.enterKey(3);",
																															"script": "NumPad.enterKey(3);",
																															"translation": []
																														}
																													],
																													"data": []
																												}
																											]
																										},
																										{
																											"fieldNo": "d95a4c78-c959-467e-837e-3ad0459e2fea",
																											"fieldName": "boxNumpad2",
																											"fieldParent": "bab30c5b-dcee-43af-d794-0c321e28d9f0",
																											"fieldType": "sap.m.HBox",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "width",
																													"grouping": "Properties",
																													"value": "100%",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "justifyContent",
																													"grouping": "Properties",
																													"value": "Center",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "alignItems",
																													"grouping": "Properties",
																													"value": "Center",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": [
																												{
																													"fieldNo": "98ceed64-92a9-4cfb-b2af-586e80e410dd",
																													"fieldName": "butNumpad4",
																													"fieldParent": "d95a4c78-c959-467e-837e-3ad0459e2fea",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "text",
																															"grouping": "Properties",
																															"value": "4",
																															"script": "",
																															"translation": [
																																{
																																	"language": "PT",
																																	"value": "4"
																																}
																															]
																														},
																														{
																															"attribute": "styleClass",
																															"grouping": "Properties",
																															"value": "numPad",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "NumPad.enterKey(4);",
																															"script": "NumPad.enterKey(4);",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "351ed9b7-193e-4d3e-acf5-53d6c3f055f7",
																													"fieldName": "butNumpad5",
																													"fieldParent": "d95a4c78-c959-467e-837e-3ad0459e2fea",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "text",
																															"grouping": "Properties",
																															"value": "5",
																															"script": "",
																															"translation": [
																																{
																																	"language": "PT",
																																	"value": "5"
																																}
																															]
																														},
																														{
																															"attribute": "styleClass",
																															"grouping": "Properties",
																															"value": "numPad",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "NumPad.enterKey(5);",
																															"script": "NumPad.enterKey(5);",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "094d36d6-c519-420d-ed41-faace1316db8",
																													"fieldName": "butNumpad6",
																													"fieldParent": "d95a4c78-c959-467e-837e-3ad0459e2fea",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "text",
																															"grouping": "Properties",
																															"value": "6",
																															"script": "",
																															"translation": [
																																{
																																	"language": "PT",
																																	"value": "6"
																																}
																															]
																														},
																														{
																															"attribute": "styleClass",
																															"grouping": "Properties",
																															"value": "numPad",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "NumPad.enterKey(6);",
																															"script": "NumPad.enterKey(6);",
																															"translation": []
																														}
																													],
																													"data": []
																												}
																											]
																										},
																										{
																											"fieldNo": "22e7f3d1-4284-4740-e9cb-f6d696ec4529",
																											"fieldName": "boxNumpad3",
																											"fieldParent": "bab30c5b-dcee-43af-d794-0c321e28d9f0",
																											"fieldType": "sap.m.HBox",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "width",
																													"grouping": "Properties",
																													"value": "100%",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "justifyContent",
																													"grouping": "Properties",
																													"value": "Center",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "alignItems",
																													"grouping": "Properties",
																													"value": "Center",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": [
																												{
																													"fieldNo": "64db5d61-2467-4856-c01f-935e6b55fda5",
																													"fieldName": "butNumpad7",
																													"fieldParent": "22e7f3d1-4284-4740-e9cb-f6d696ec4529",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "text",
																															"grouping": "Properties",
																															"value": "7",
																															"script": "",
																															"translation": [
																																{
																																	"language": "PT",
																																	"value": "7"
																																}
																															]
																														},
																														{
																															"attribute": "styleClass",
																															"grouping": "Properties",
																															"value": "numPad",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "NumPad.enterKey(7);",
																															"script": "NumPad.enterKey(7);",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "d9d5c7a5-b159-4a17-f9f5-95b0bfb98d54",
																													"fieldName": "butNumpad8",
																													"fieldParent": "22e7f3d1-4284-4740-e9cb-f6d696ec4529",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "text",
																															"grouping": "Properties",
																															"value": "8",
																															"script": "",
																															"translation": [
																																{
																																	"language": "PT",
																																	"value": "8"
																																}
																															]
																														},
																														{
																															"attribute": "styleClass",
																															"grouping": "Properties",
																															"value": "numPad",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "NumPad.enterKey(8);",
																															"script": "NumPad.enterKey(8);",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "d1b6929e-34d4-419a-983b-a1a2de5ce044",
																													"fieldName": "butNumpad9",
																													"fieldParent": "22e7f3d1-4284-4740-e9cb-f6d696ec4529",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "text",
																															"grouping": "Properties",
																															"value": "9",
																															"script": "",
																															"translation": [
																																{
																																	"language": "PT",
																																	"value": "9"
																																}
																															]
																														},
																														{
																															"attribute": "styleClass",
																															"grouping": "Properties",
																															"value": "numPad",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "NumPad.enterKey(9);",
																															"script": "NumPad.enterKey(9);",
																															"translation": []
																														}
																													],
																													"data": []
																												}
																											]
																										},
																										{
																											"fieldNo": "9782082a-dfb8-4781-9634-ee02b52c8e88",
																											"fieldName": "boxNumpad4",
																											"fieldParent": "bab30c5b-dcee-43af-d794-0c321e28d9f0",
																											"fieldType": "sap.m.HBox",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "width",
																													"grouping": "Properties",
																													"value": "100%",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "justifyContent",
																													"grouping": "Properties",
																													"value": "Center",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "alignItems",
																													"grouping": "Properties",
																													"value": "Center",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": [
																												{
																													"fieldNo": "88918eba-86d6-457a-a6b3-c906c45bf16b",
																													"fieldName": "butNumpadClear",
																													"fieldParent": "9782082a-dfb8-4781-9634-ee02b52c8e88",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "styleClass",
																															"grouping": "Properties",
																															"value": "numPad",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "icon",
																															"grouping": "Properties",
																															"value": "sap-icon://decline",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "Anonymous Function",
																															"script": [
																																"==OBJECT STRING==",
																																"",
																																"// Remove CSS animation class",
																																"boxShake.removeStyleClass(\"animated shake\");",
																																"",
																																"// Clear numpad",
																																"NumPad.Clear();"
																															],
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "9f27b6e9-31c7-4bf2-a627-3b2567e13179",
																													"fieldName": "butNumpad0",
																													"fieldParent": "9782082a-dfb8-4781-9634-ee02b52c8e88",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "text",
																															"grouping": "Properties",
																															"value": "0",
																															"script": "",
																															"translation": [
																																{
																																	"language": "PT",
																																	"value": "0"
																																}
																															]
																														},
																														{
																															"attribute": "styleClass",
																															"grouping": "Properties",
																															"value": "numPad",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "NumPad.enterKey(0);",
																															"script": "NumPad.enterKey(0);",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "ad1088a5-357d-4cce-8b87-6c917c8bf742",
																													"fieldName": "butNumpadLogin",
																													"fieldParent": "9782082a-dfb8-4781-9634-ee02b52c8e88",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "type",
																															"grouping": "Properties",
																															"value": "Default",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "styleClass",
																															"grouping": "Properties",
																															"value": "numPad",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "icon",
																															"grouping": "Properties",
																															"value": "sap-icon://accept",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "enabled",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "Anonymous Function",
																															"script": [
																																"==OBJECT STRING==",
																																"// Check biometricAuthentication",
																																"if (AppCache.biometricAuthentication) {",
																																"    ",
																																"    // Remove CSS animation class",
																																"    boxShake.removeStyleClass(\"animated shake\");",
																																"",
																																"    // Clear numpad",
																																"    NumPad.Clear();",
																																"",
																																"    if (sap.ui.Device.os.ios && typeof CID !== \"undefined\") sap.n.Fingerprint.ios.checkSupport();",
																																"    if (sap.ui.Device.os.android) FingerprintAuth.isAvailable(sap.n.Fingerprint.android.onSupported, sap.n.Fingerprint.android.notSupported);",
																																"",
																																"} else {",
																																"    NumPad.Logon();",
																																"}"
																															],
																															"translation": []
																														}
																													],
																													"data": []
																												}
																											]
																										}
																									]
																								},
																								{
																									"fieldNo": "b1ac49b6-07ef-44b1-9991-c0ba09fe86cf",
																									"fieldName": "panLinksPin",
																									"fieldParent": "921be91f-4a33-4d34-e83b-e527a479390f",
																									"fieldType": "sap.m.Panel",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "visible",
																											"grouping": "Properties",
																											"value": "false",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "styleClassPadding",
																											"grouping": "Properties",
																											"value": "sapUiNoContentPadding",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "styleClassMargin",
																											"grouping": "Properties",
																											"value": "sapUiMediumMarginTop",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "styleClass",
																											"grouping": "Properties",
																											"value": "nepPanLinks",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "enableCompactMode",
																											"grouping": "Properties",
																											"value": "true",
																											"script": "",
																											"translation": []
																										},
																										{
																											"attribute": "backgroundDesign",
																											"grouping": "Properties",
																											"value": "Transparent",
																											"script": "",
																											"translation": []
																										}
																									],
																									"data": [
																										{
																											"fieldNo": "6ce673e6-cf20-4767-ef22-fa7e87c6c255",
																											"fieldName": "toolLinksPin",
																											"fieldParent": "b1ac49b6-07ef-44b1-9991-c0ba09fe86cf",
																											"fieldType": "sap.m.Toolbar",
																											"script": "",
																											"request": [],
																											"response": [],
																											"attributes": [
																												{
																													"attribute": "styleClass",
																													"grouping": "Properties",
																													"value": "nepLinkNoBorder",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "design",
																													"grouping": "Properties",
																													"value": "Transparent",
																													"script": "",
																													"translation": []
																												},
																												{
																													"attribute": "position",
																													"grouping": "Parent",
																													"value": "HeaderToolbar",
																													"script": "",
																													"translation": []
																												}
																											],
																											"data": [
																												{
																													"fieldNo": "bd534c38-d020-45f4-d10c-69cfd054ed8b",
																													"fieldName": "linkPinText1",
																													"fieldParent": "6ce673e6-cf20-4767-ef22-fa7e87c6c255",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "type",
																															"grouping": "Properties",
																															"value": "Transparent",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin1);",
																															"script": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin1);",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "18d6dcb0-efe3-4412-a5a6-8a15ac76a398",
																													"fieldName": "linkPinSep1",
																													"fieldParent": "6ce673e6-cf20-4767-ef22-fa7e87c6c255",
																													"fieldType": "sap.m.ToolbarSeparator",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "b917ff6c-e05a-48e6-da10-571bffcb8963",
																													"fieldName": "linkPinText2",
																													"fieldParent": "6ce673e6-cf20-4767-ef22-fa7e87c6c255",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "type",
																															"grouping": "Properties",
																															"value": "Transparent",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin2);",
																															"script": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin2);",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "7498392d-f659-4043-b1d9-35cc2abc8109",
																													"fieldName": "linkPinSep2",
																													"fieldParent": "6ce673e6-cf20-4767-ef22-fa7e87c6c255",
																													"fieldType": "sap.m.ToolbarSeparator",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														}
																													],
																													"data": []
																												},
																												{
																													"fieldNo": "6330f111-5c22-4484-d972-beb21b6617ae",
																													"fieldName": "linkPinText3",
																													"fieldParent": "6ce673e6-cf20-4767-ef22-fa7e87c6c255",
																													"fieldType": "sap.m.Button",
																													"script": "",
																													"request": [],
																													"response": [],
																													"attributes": [
																														{
																															"attribute": "visible",
																															"grouping": "Properties",
																															"value": "false",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "type",
																															"grouping": "Properties",
																															"value": "Transparent",
																															"script": "",
																															"translation": []
																														},
																														{
																															"attribute": "press",
																															"grouping": "Events",
																															"value": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin3);",
																															"script": "setTextAndOpenDialogText(this.getText(), modelDataSettings.oData.customizing[0].txtLogin3);",
																															"translation": []
																														}
																													],
																													"data": []
																												}
																											]
																										}
																									]
																								}
																							]
																						}
																					]
																				}
																			]
																		},
																		{
																			"fieldNo": "a9a7c06e-5aaa-438d-8a55-da4733f656a9",
																			"fieldName": "AppCache_boxURL",
																			"fieldParent": "d6027101-d2e8-4829-db73-7f2b38519a3b",
																			"fieldType": "sap.m.Page",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "styleClass",
																					"grouping": "Properties",
																					"value": "nepPage",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showHeader",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "showFooter",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "enableScrolling",
																					"grouping": "Properties",
																					"value": "false",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "backgroundDesign",
																					"grouping": "Properties",
																					"value": "Transparent",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": [
																				{
																					"fieldNo": "80f0a0d8-e348-45cf-e90a-b6c03622d45a",
																					"fieldName": "AppCacheAppURL",
																					"fieldParent": "a9a7c06e-5aaa-438d-8a55-da4733f656a9",
																					"fieldType": "sap.m.App",
																					"script": "",
																					"request": [],
																					"response": [],
																					"attributes": [],
																					"data": [
																						{
																							"fieldNo": "d62a8966-83a0-4229-c0f6-95ac749b7ad8",
																							"fieldName": "AppCachePageURL",
																							"fieldParent": "80f0a0d8-e348-45cf-e90a-b6c03622d45a",
																							"fieldType": "sap.m.Page",
																							"script": "",
																							"request": [],
																							"response": [],
																							"attributes": [
																								{
																									"attribute": "showHeader",
																									"grouping": "Properties",
																									"value": "false",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "showFooter",
																									"grouping": "Properties",
																									"value": "false",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "enableScrolling",
																									"grouping": "Properties",
																									"value": "false",
																									"script": "",
																									"translation": []
																								},
																								{
																									"attribute": "backgroundDesign",
																									"grouping": "Properties",
																									"value": "Transparent",
																									"script": "",
																									"translation": []
																								}
																							],
																							"data": [
																								{
																									"fieldNo": "d7585a48-7f17-43b1-fb4d-2c23c6850309",
																									"fieldName": "AppCache_urlHTML",
																									"fieldParent": "d62a8966-83a0-4229-c0f6-95ac749b7ad8",
																									"fieldType": "sap.ui.core.HTML",
																									"script": "",
																									"request": [],
																									"response": [],
																									"attributes": [
																										{
																											"attribute": "content",
																											"grouping": "Properties",
																											"value": "<div id='AppCache_URLDiv' style='height:100%;width:100%;'></div>",
																											"script": "",
																											"translation": []
																										}
																									],
																									"data": []
																								}
																							]
																						}
																					]
																				}
																			]
																		}
																	]
																}
															]
														}
													]
												},
												{
													"fieldNo": "59aa0ea7-6f09-43e9-e685-d4bb442f584e",
													"fieldName": "launchpadContentSideApp",
													"fieldParent": "36db12ae-3e47-458d-fdbd-f4d20dabd690",
													"fieldType": "sap.m.VBox",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "width",
															"grouping": "Properties",
															"value": "0px",
															"script": "",
															"translation": []
														},
														{
															"attribute": "styleClass",
															"grouping": "Properties",
															"value": "nepLaunchpadContentSideApp",
															"script": "",
															"translation": []
														},
														{
															"attribute": "renderType",
															"grouping": "Properties",
															"value": "Div",
															"script": "",
															"translation": []
														},
														{
															"attribute": "fitContainer",
															"grouping": "Properties",
															"value": "true",
															"script": "",
															"translation": []
														}
													],
													"data": [
														{
															"fieldNo": "ca5adc62-9227-4ff5-ae6f-cefba7d455d5",
															"fieldName": "AppCachePageSideApp",
															"fieldParent": "59aa0ea7-6f09-43e9-e685-d4bb442f584e",
															"fieldType": "sap.m.Page",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "styleClassPadding",
																	"grouping": "Properties",
																	"value": "sapUiNoContentPadding",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "styleClassMargin",
																	"grouping": "Properties",
																	"value": "sapUiNoMargin",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "styleClass",
																	"grouping": "Properties",
																	"value": "nepDocPage",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "showHeader",
																	"grouping": "Properties",
																	"value": "false",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "showFooter",
																	"grouping": "Properties",
																	"value": "false",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "enableScrolling",
																	"grouping": "Properties",
																	"value": "false",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "backgroundDesign",
																	"grouping": "Properties",
																	"value": "Solid",
																	"script": "",
																	"translation": []
																}
															],
															"data": [
																{
																	"fieldNo": "35b2eee0-70e7-4d46-8e82-bffeac446974",
																	"fieldName": "AppCachePageSideTab",
																	"fieldParent": "ca5adc62-9227-4ff5-ae6f-cefba7d455d5",
																	"fieldType": "sap.m.TabContainer",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "styleClassMargin",
																			"grouping": "Properties",
																			"value": "sapUiNoMargin",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "styleClass",
																			"grouping": "Properties",
																			"value": "sapUiNoContentPadding ",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "itemClose",
																			"grouping": "Events",
																			"value": "Anonymous Function",
																			"script": [
																				"==OBJECT STRING==",
																				"// Destroy Content",
																				"let tab = oEvent.mParameters.item;",
																				"let tabKey = tab.getKey();",
																				"let view = tab.getContent()[0];",
																				"",
																				"// onClose event",
																				"if (sap.n.Shell.sidepanelCloseEvents[tabKey]) sap.n.Shell.sidepanelCloseEvents[tabKey]();",
																				"",
																				"// Destroy View",
																				"if (view) {",
																				"    view.removeAllContent();",
																				"    view.destroy();",
																				"    sap.n.Shell.clearObjects(view.sId);",
																				"}",
																				"",
																				"// Hide sidepanel",
																				"setTimeout(function () {",
																				"    if (AppCachePageSideTab.getItems().length === 0) {",
																				"        sap.n.Launchpad.sidepanelClose();",
																				"        AppCacheUserActionSidepanel.setVisible(false);",
																				"",
																				"        // Mark Open From ",
																				"        if (sap.n.Launchpad.currentTile && sap.n.Launchpad.currentTile.actionApplication) {",
																				"            delete sap.n.Shell.openSidePanelApps[sap.n.Launchpad.currentTile.actionApplication]",
																				"        }",
																				"    }",
																				"}, 200);"
																			],
																			"translation": []
																		}
																	],
																	"data": []
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"fieldNo": "cc86028b-1464-4fb3-fb5f-da4955be560d",
									"fieldName": "launchpadOverflowContainer",
									"fieldParent": "63351f31-547d-43db-8b6a-898b9977f552",
									"fieldType": "sap.m.FlexBox",
									"description": "",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "visible",
											"grouping": "Properties",
											"value": true,
											"script": "",
											"translation": []
										},
										{
											"attribute": "styleClass",
											"grouping": "Properties",
											"value": "nepLaunchpadOverflowContainer",
											"script": "",
											"translation": []
										},
										{
											"attribute": "renderType",
											"grouping": "Properties",
											"value": "Div",
											"script": "",
											"translation": []
										},
										{
											"attribute": "height",
											"grouping": "Properties",
											"value": "100%",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "0c6496fd-753c-44a9-9222-3396b9ae4672",
											"fieldName": "launchpadOverflow",
											"fieldParent": "cc86028b-1464-4fb3-fb5f-da4955be560d",
											"fieldType": "sap.m.FlexBox",
											"description": "",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "visible",
													"grouping": "Properties",
													"value": true,
													"script": "",
													"translation": []
												},
												{
													"attribute": "styleClass",
													"grouping": "Properties",
													"value": "nepLaunchpadMenuOverflow",
													"script": "",
													"translation": []
												},
												{
													"attribute": "renderType",
													"grouping": "Properties",
													"value": "Div",
													"script": "",
													"translation": []
												},
												{
													"attribute": "height",
													"grouping": "Properties",
													"value": "100%",
													"script": "",
													"translation": []
												},
												{
													"attribute": "fitContainer",
													"grouping": "Properties",
													"value": true,
													"script": "",
													"translation": []
												},
												{
													"attribute": "direction",
													"grouping": "Properties",
													"value": "Column",
													"script": "",
													"translation": []
												}
											],
											"data": [
												{
													"fieldNo": "32003514-86ef-4a1d-b68b-d8f2481b7954",
													"fieldName": "launchpadOverflowHeader",
													"fieldParent": "0c6496fd-753c-44a9-9222-3396b9ae4672",
													"fieldType": "sap.m.Panel",
													"description": "",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "visible",
															"grouping": "Properties",
															"value": true,
															"script": "",
															"translation": []
														},
														{
															"attribute": "styleClassPadding",
															"grouping": "Properties",
															"value": "sapUiNoContentPadding",
															"script": "",
															"translation": []
														},
														{
															"attribute": "styleClass",
															"grouping": "Properties",
															"value": "nepTopMenu",
															"script": "",
															"translation": []
														},
														{
															"attribute": "height",
															"grouping": "Properties",
															"value": "3rem",
															"script": "",
															"translation": []
														},
														{
															"attribute": "expandAnimation",
															"grouping": "Properties",
															"value": true,
															"script": "",
															"translation": []
														},
														{
															"attribute": "backgroundDesign",
															"grouping": "Properties",
															"value": "Transparent",
															"script": "",
															"translation": []
														}
													],
													"data": [
														{
															"fieldNo": "990290f1-4b43-441e-bd5d-93887a206864",
															"fieldName": "launchpadOverflowHeaderToolbar",
															"fieldParent": "32003514-86ef-4a1d-b68b-d8f2481b7954",
															"fieldType": "sap.m.Toolbar",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "visible",
																	"grouping": "Properties",
																	"value": "false",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "position",
																	"grouping": "Parent",
																	"value": "HeaderToolbar",
																	"script": "",
																	"translation": []
																}
															],
															"data": []
														},
														{
															"fieldNo": "c24629aa-04ec-4fb9-e651-818d4c00e703",
															"fieldName": "launchpadOverflowHeaderHBox",
															"fieldParent": "32003514-86ef-4a1d-b68b-d8f2481b7954",
															"fieldType": "sap.m.HBox",
															"description": "",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "visible",
																	"grouping": "Properties",
																	"value": true,
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "styleClass",
																	"grouping": "Properties",
																	"value": "nepTopMenuContent",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "justifyContent",
																	"grouping": "Properties",
																	"value": "SpaceBetween",
																	"script": "",
																	"translation": []
																}
															],
															"data": [
																{
																	"fieldNo": "8e0d0a33-1cc7-4eb8-89a3-a53c3ce7de05",
																	"fieldName": "launchpadOverflowHeaderVBox",
																	"fieldParent": "c24629aa-04ec-4fb9-e651-818d4c00e703",
																	"fieldType": "sap.m.VBox",
																	"description": "",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "visible",
																			"grouping": "Properties",
																			"value": true,
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "styleClassMargin",
																			"grouping": "Properties",
																			"value": "sapUiTinyMarginBegin",
																			"script": "",
																			"translation": []
																		}
																	],
																	"data": [
																		{
																			"fieldNo": "79915338-3251-4035-babe-3cfffa1128ca",
																			"fieldName": "launchpadOverflowBtn",
																			"fieldParent": "8e0d0a33-1cc7-4eb8-89a3-a53c3ce7de05",
																			"fieldType": "sap.m.Button",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "visible",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "tooltip",
																					"grouping": "Properties",
																					"value": "Menu",
																					"script": "",
																					"translation": [
																						{
																							"language": "1",
																							"value": "菜单"
																						},
																						{
																							"language": "A",
																							"value": "قائمة طعام"
																						},
																						{
																							"language": "D",
																							"value": "Speisekarte"
																						},
																						{
																							"language": "F",
																							"value": "Menu"
																						},
																						{
																							"language": "H",
																							"value": "Menü"
																						},
																						{
																							"language": "K",
																							"value": "Menu"
																						},
																						{
																							"language": "O",
																							"value": "Meny"
																						},
																						{
																							"language": "P",
																							"value": "Cardápio"
																						},
																						{
																							"language": "R",
																							"value": "Меню"
																						},
																						{
																							"language": "S",
																							"value": "Menú"
																						},
																						{
																							"language": "W",
																							"value": "Меню"
																						},
																						{
																							"language": "PL",
																							"value": "Menu"
																						},
																						{
																							"language": "EN",
																							"value": "Menu"
																						}
																					]
																				},
																				{
																					"attribute": "iconFirst",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "iconDensityAware",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "icon",
																					"grouping": "Properties",
																					"value": "sap-icon://grid",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "enabled",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "press",
																					"grouping": "Events",
																					"value": "Anonymous Function",
																					"script": [
																						"==OBJECT STRING==",
																						"//",
																						"sap.n.Launchpad.overflowMenuClose();",
																						""
																					],
																					"translation": []
																				}
																			],
																			"data": []
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"fieldNo": "444e1f03-7e94-400d-ac97-1bdb24215aa8",
											"fieldName": "launchpadOverflowClickArea",
											"fieldParent": "cc86028b-1464-4fb3-fb5f-da4955be560d",
											"fieldType": "sap.m.FlexBox",
											"description": "",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "visible",
													"grouping": "Properties",
													"value": true,
													"script": "",
													"translation": []
												},
												{
													"attribute": "styleClass",
													"grouping": "Properties",
													"value": "nepLaunchpadOverflowClickArea",
													"script": "",
													"translation": []
												}
											],
											"data": []
										}
									]
								},
								{
									"fieldNo": "5e39af87-c5fd-4588-8dfe-ad976c2df52e",
									"fieldName": "launchpadSettingsContainer",
									"fieldParent": "63351f31-547d-43db-8b6a-898b9977f552",
									"fieldType": "sap.m.FlexBox",
									"description": "",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "visible",
											"grouping": "Properties",
											"value": true,
											"script": "",
											"translation": []
										},
										{
											"attribute": "styleClass",
											"grouping": "Properties",
											"value": "nepLaunchpadSettingsContainer",
											"script": "",
											"translation": []
										},
										{
											"attribute": "renderType",
											"grouping": "Properties",
											"value": "Div",
											"script": "",
											"translation": []
										},
										{
											"attribute": "height",
											"grouping": "Properties",
											"value": "100%",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "75b4ea7b-8c37-499b-93f7-b6baf913b0a4",
											"fieldName": "launchpadSettings",
											"fieldParent": "5e39af87-c5fd-4588-8dfe-ad976c2df52e",
											"fieldType": "sap.m.FlexBox",
											"description": "",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "visible",
													"grouping": "Properties",
													"value": true,
													"script": "",
													"translation": []
												},
												{
													"attribute": "styleClass",
													"grouping": "Properties",
													"value": "nepLaunchpadMenuSettings",
													"script": "",
													"translation": []
												},
												{
													"attribute": "renderType",
													"grouping": "Properties",
													"value": "Div",
													"script": "",
													"translation": []
												},
												{
													"attribute": "height",
													"grouping": "Properties",
													"value": "100%",
													"script": "",
													"translation": []
												},
												{
													"attribute": "fitContainer",
													"grouping": "Properties",
													"value": true,
													"script": "",
													"translation": []
												},
												{
													"attribute": "direction",
													"grouping": "Properties",
													"value": "Column",
													"script": "",
													"translation": []
												}
											],
											"data": [
												{
													"fieldNo": "b33d806b-a41c-4b0e-99c2-e3dc047ebe55",
													"fieldName": "launchpadSettingsHeader",
													"fieldParent": "75b4ea7b-8c37-499b-93f7-b6baf913b0a4",
													"fieldType": "sap.m.Panel",
													"description": "",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "visible",
															"grouping": "Properties",
															"value": true,
															"script": "",
															"translation": []
														},
														{
															"attribute": "styleClassPadding",
															"grouping": "Properties",
															"value": "sapUiNoContentPadding",
															"script": "",
															"translation": []
														},
														{
															"attribute": "styleClass",
															"grouping": "Properties",
															"value": "nepTopMenu",
															"script": "",
															"translation": []
														},
														{
															"attribute": "expandAnimation",
															"grouping": "Properties",
															"value": true,
															"script": "",
															"translation": []
														},
														{
															"attribute": "backgroundDesign",
															"grouping": "Properties",
															"value": "Transparent",
															"script": "",
															"translation": []
														}
													],
													"data": [
														{
															"fieldNo": "06a99375-ddb9-4a17-e19d-f324111ccd8b",
															"fieldName": "launchpadSettingsHeaderToolbar",
															"fieldParent": "b33d806b-a41c-4b0e-99c2-e3dc047ebe55",
															"fieldType": "sap.m.Toolbar",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "visible",
																	"grouping": "Properties",
																	"value": "false",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "position",
																	"grouping": "Parent",
																	"value": "HeaderToolbar",
																	"script": "",
																	"translation": []
																}
															],
															"data": []
														},
														{
															"fieldNo": "6344cc83-4d79-4be0-faed-504a9573d7ef",
															"fieldName": "launchpadSettingsHeaderHBox",
															"fieldParent": "b33d806b-a41c-4b0e-99c2-e3dc047ebe55",
															"fieldType": "sap.m.HBox",
															"description": "",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "visible",
																	"grouping": "Properties",
																	"value": true,
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "styleClass",
																	"grouping": "Properties",
																	"value": "nepTopMenuContent",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "justifyContent",
																	"grouping": "Properties",
																	"value": "SpaceBetween",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "alignItems",
																	"grouping": "Properties",
																	"value": "Center",
																	"script": "",
																	"translation": []
																}
															],
															"data": [
																{
																	"fieldNo": "abe8971f-5750-4464-bb19-7998b47d42ea",
																	"fieldName": "AppCacheUserActionText",
																	"fieldParent": "6344cc83-4d79-4be0-faed-504a9573d7ef",
																	"fieldType": "sap.m.Text",
																	"description": "",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "wrapping",
																			"grouping": "Properties",
																			"value": true,
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "visible",
																			"grouping": "Properties",
																			"value": true,
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "styleClass",
																			"grouping": "Properties",
																			"value": "nepUserActionText",
																			"script": "",
																			"translation": []
																		}
																	],
																	"data": []
																},
																{
																	"fieldNo": "6fe182ac-c634-42cf-f0df-149176ca3d59",
																	"fieldName": "launchpadSettingsBtn",
																	"fieldParent": "6344cc83-4d79-4be0-faed-504a9573d7ef",
																	"fieldType": "sap.m.Button",
																	"description": "",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "visible",
																			"grouping": "Properties",
																			"value": true,
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "type",
																			"grouping": "Properties",
																			"value": "Transparent",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "tooltip",
																			"grouping": "Properties",
																			"value": "User Menu",
																			"script": "",
																			"translation": [
																				{
																					"language": "1",
																					"value": "用户菜单"
																				},
																				{
																					"language": "A",
																					"value": "قائمة المستخدم"
																				},
																				{
																					"language": "D",
																					"value": "Benutzermenü"
																				},
																				{
																					"language": "F",
																					"value": "Menu utilisateur"
																				},
																				{
																					"language": "H",
																					"value": "felhasználói menü"
																				},
																				{
																					"language": "K",
																					"value": "Brugermenu"
																				},
																				{
																					"language": "O",
																					"value": "Brukermeny"
																				},
																				{
																					"language": "P",
																					"value": "menu do usuário"
																				},
																				{
																					"language": "R",
																					"value": "Меню пользователя"
																				},
																				{
																					"language": "S",
																					"value": "Menú del Usuario"
																				},
																				{
																					"language": "W",
																					"value": "Меню на потребителя"
																				},
																				{
																					"language": "PL",
																					"value": "Menu użytkownika"
																				},
																				{
																					"language": "EN",
																					"value": "User Menu"
																				}
																			]
																		},
																		{
																			"attribute": "styleClassMargin",
																			"grouping": "Properties",
																			"value": "sapUiSmallMarginEnd",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "styleClass",
																			"grouping": "Properties",
																			"value": "nepUserButton",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "iconFirst",
																			"grouping": "Properties",
																			"value": true,
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "iconDensityAware",
																			"grouping": "Properties",
																			"value": true,
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "icon",
																			"grouping": "Properties",
																			"value": "sap-icon://fa-solid/user-circle",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "enabled",
																			"grouping": "Properties",
																			"value": true,
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "press",
																			"grouping": "Events",
																			"value": "Anonymous Function",
																			"script": [
																				"==OBJECT STRING==",
																				"//",
																				"sap.n.Launchpad.settingsMenuClose();",
																				""
																			],
																			"translation": []
																		}
																	],
																	"data": []
																}
															]
														}
													]
												},
												{
													"fieldNo": "b8737006-c98d-42a6-d22a-4cc385959ab5",
													"fieldName": "AppCacheListMenu",
													"fieldParent": "75b4ea7b-8c37-499b-93f7-b6baf913b0a4",
													"fieldType": "sap.m.List",
													"script": "",
													"bindingType": "h",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "styleClass",
															"grouping": "Properties",
															"value": "nepListMenu",
															"script": "",
															"translation": []
														},
														{
															"attribute": "showSeparators",
															"grouping": "Properties",
															"value": "None",
															"script": "",
															"translation": []
														},
														{
															"attribute": "showNoData",
															"grouping": "Properties",
															"value": "false",
															"script": "",
															"translation": []
														},
														{
															"attribute": "enableCompactMode",
															"grouping": "Properties",
															"value": "true",
															"script": "",
															"translation": []
														},
														{
															"attribute": "backgroundDesign",
															"grouping": "Properties",
															"value": "Transparent",
															"script": "",
															"translation": []
														}
													],
													"data": [
														{
															"fieldNo": "8acff095-a179-49ef-c49b-d0cedecfcce2",
															"fieldName": "AppCacheUserActionSettings",
															"fieldParent": "b8737006-c98d-42a6-d22a-4cc385959ab5",
															"fieldType": "sap.m.StandardListItem",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "type",
																	"grouping": "Properties",
																	"value": "Active",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "title",
																	"grouping": "Properties",
																	"value": "Settings",
																	"script": "",
																	"translation": [
																		{
																			"language": "JA",
																			"value": "設定"
																		},
																		{
																			"language": "ZH",
																			"value": "设置"
																		},
																		{
																			"language": "DA",
																			"value": "Indstillinger"
																		},
																		{
																			"language": "NL",
																			"value": "instellingen"
																		},
																		{
																			"language": "FI",
																			"value": "asetukset"
																		},
																		{
																			"language": "IT",
																			"value": "impostazioni"
																		},
																		{
																			"language": "PL",
																			"value": "Ustawienia"
																		},
																		{
																			"language": "PT",
																			"value": "Definições"
																		},
																		{
																			"language": "ES",
																			"value": "Ajustes"
																		},
																		{
																			"language": "SV",
																			"value": "inställningar"
																		},
																		{
																			"language": "FR",
																			"value": "Réglages"
																		},
																		{
																			"language": "NO",
																			"value": "Innstillinger"
																		},
																		{
																			"language": "DE",
																			"value": "Einstellungen"
																		},
																		{
																			"language": "EN",
																			"value": "Settings"
																		}
																	]
																},
																{
																	"attribute": "icon",
																	"grouping": "Properties",
																	"value": "sap-icon://settings",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "press",
																	"grouping": "Events",
																	"value": "Anonymous Function",
																	"script": [
																		"==OBJECT STRING==",
																		"// Build Version Info - General",
																		"let arrInfo = new Array();",
																		"let rec = {};",
																		"rec.key = 'UI5 Version';",
																		"rec.value = sap.ui.version;",
																		"arrInfo.push(rec);",
																		"",
																		"// Build Version Info - Phone",
																		"if (typeof device !== 'undefined') {",
																		"    rec = {};",
																		"    rec.key = AppCache_tPhoneType.getText();",
																		"    rec.value = device.platform;",
																		"    arrInfo.push(rec);",
																		"",
																		"    rec = {};",
																		"    rec.key = AppCache_tPhoneVersion.getText();",
																		"    rec.value = device.version;",
																		"    arrInfo.push(rec);",
																		"",
																		"    rec = {};",
																		"    rec.key = AppCache_tPhoneModel.getText();",
																		"    rec.value = device.model;",
																		"    arrInfo.push(rec);",
																		"",
																		"    rec = {};",
																		"    rec.key = AppCache_tCordovaVersion.getText();",
																		"    rec.value = device.cordova;",
																		"    arrInfo.push(rec);",
																		"",
																		"    rec = {};",
																		"    rec.key = AppCache_tAppVersion.getText();",
																		"    rec.value = AppCache.AppVersion;",
																		"    arrInfo.push(rec);",
																		"}",
																		"",
																		"AppCacheSettingsUser.setTitle(AppCache.userInfo.name);",
																		"AppCacheSettingsUser.setIntro(AppCache.userInfo.username);",
																		"modelAppCacheTabVer.setData(arrInfo);",
																		"AppCacheDiaSettings.open();",
																		"modelAppCacheData.refresh();"
																	],
																	"translation": []
																}
															],
															"data": []
														},
														{
															"fieldNo": "b4020d10-847d-4f76-a79d-c18480cd1261",
															"fieldName": "AppCacheUserActionPassword",
															"fieldParent": "b8737006-c98d-42a6-d22a-4cc385959ab5",
															"fieldType": "sap.m.StandardListItem",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "visible",
																	"grouping": "Properties",
																	"value": "false",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "type",
																	"grouping": "Properties",
																	"value": "Active",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "title",
																	"grouping": "Properties",
																	"value": "Change password",
																	"script": "",
																	"translation": [
																		{
																			"language": "JA",
																			"value": "サイドパネル"
																		},
																		{
																			"language": "ZH",
																			"value": "侧面板"
																		},
																		{
																			"language": "DA",
																			"value": "Sidepanel"
																		},
																		{
																			"language": "NL",
																			"value": "Zijpaneel"
																		},
																		{
																			"language": "FI",
																			"value": "Sivupaneeli"
																		},
																		{
																			"language": "IT",
																			"value": "Pannello laterale"
																		},
																		{
																			"language": "PL",
																			"value": "Zmień hasło"
																		},
																		{
																			"language": "PT",
																			"value": "Painel lateral"
																		},
																		{
																			"language": "ES",
																			"value": "Panel lateral"
																		},
																		{
																			"language": "SV",
																			"value": "Sidopanel"
																		},
																		{
																			"language": "FR",
																			"value": "Panneau latéral"
																		},
																		{
																			"language": "NO",
																			"value": "Bytt passord"
																		},
																		{
																			"language": "DE",
																			"value": "Passwort ändern"
																		},
																		{
																			"language": "EN",
																			"value": "Change password"
																		}
																	]
																},
																{
																	"attribute": "icon",
																	"grouping": "Properties",
																	"value": "sap-icon://fa-solid/shield-alt",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "press",
																	"grouping": "Events",
																	"value": "diaSetPassword.open();",
																	"script": "diaSetPassword.open();",
																	"translation": []
																}
															],
															"data": []
														},
														{
															"fieldNo": "1d29d4f8-c28e-4a27-e74f-560570a3e1d7",
															"fieldName": "AppCacheUserActionSidepanel",
															"fieldParent": "b8737006-c98d-42a6-d22a-4cc385959ab5",
															"fieldType": "sap.m.StandardListItem",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "visible",
																	"grouping": "Properties",
																	"value": "false",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "type",
																	"grouping": "Properties",
																	"value": "Active",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "title",
																	"grouping": "Properties",
																	"value": "Sidepanel",
																	"script": "",
																	"translation": [
																		{
																			"language": "JA",
																			"value": "サイドパネル"
																		},
																		{
																			"language": "ZH",
																			"value": "侧面板"
																		},
																		{
																			"language": "DA",
																			"value": "Sidepanel"
																		},
																		{
																			"language": "NL",
																			"value": "Zijpaneel"
																		},
																		{
																			"language": "FI",
																			"value": "Sivupaneeli"
																		},
																		{
																			"language": "IT",
																			"value": "Pannello laterale"
																		},
																		{
																			"language": "PL",
																			"value": "Panel boczny"
																		},
																		{
																			"language": "PT",
																			"value": "Painel lateral"
																		},
																		{
																			"language": "ES",
																			"value": "Panel lateral"
																		},
																		{
																			"language": "SV",
																			"value": "Sidopanel"
																		},
																		{
																			"language": "FR",
																			"value": "Panneau latéral"
																		},
																		{
																			"language": "NO",
																			"value": "Sidepanel"
																		},
																		{
																			"language": "DE",
																			"value": "Sidepanel"
																		},
																		{
																			"language": "EN",
																			"value": "Sidepanel"
																		}
																	]
																},
																{
																	"attribute": "icon",
																	"grouping": "Properties",
																	"value": "sap-icon://navigation-right-arrow",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "press",
																	"grouping": "Events",
																	"value": "Anonymous Function",
																	"script": [
																		"==OBJECT STRING==",
																		"sap.n.Launchpad.settingsMenuClose();",
																		"",
																		"if (launchpadContentSideApp.getWidth() === \"0px\") {",
																		"    sap.n.Launchpad.sidepanelOpen();",
																		"} else {",
																		"    sap.n.Launchpad.sidepanelClose();",
																		"}",
																		""
																	],
																	"translation": []
																}
															],
															"data": []
														},
														{
															"fieldNo": "82bc0a64-c586-48c2-9875-ef7abff16dff",
															"fieldName": "AppCacheUserActionLock",
															"fieldParent": "b8737006-c98d-42a6-d22a-4cc385959ab5",
															"fieldType": "sap.m.StandardListItem",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "visible",
																	"grouping": "Properties",
																	"value": "false",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "type",
																	"grouping": "Properties",
																	"value": "Active",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "title",
																	"grouping": "Properties",
																	"value": "Lock",
																	"script": "",
																	"translation": [
																		{
																			"language": "JA",
																			"value": "ロック"
																		},
																		{
																			"language": "ZH",
																			"value": "锁"
																		},
																		{
																			"language": "DA",
																			"value": "Låse"
																		},
																		{
																			"language": "NL",
																			"value": "Slot"
																		},
																		{
																			"language": "FI",
																			"value": "Lukko"
																		},
																		{
																			"language": "IT",
																			"value": "Serratura"
																		},
																		{
																			"language": "PL",
																			"value": "Zamek"
																		},
																		{
																			"language": "PT",
																			"value": "Bloqueio"
																		},
																		{
																			"language": "ES",
																			"value": "Bloquear"
																		},
																		{
																			"language": "SV",
																			"value": "Låsa"
																		},
																		{
																			"language": "FR",
																			"value": "Fermer à clé"
																		},
																		{
																			"language": "NO",
																			"value": "Låse"
																		},
																		{
																			"language": "DE",
																			"value": "Sperren"
																		},
																		{
																			"language": "EN",
																			"value": "Lock"
																		}
																	]
																},
																{
																	"attribute": "icon",
																	"grouping": "Properties",
																	"value": "sap-icon://locked",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "press",
																	"grouping": "Events",
																	"value": "Anonymous Function",
																	"script": [
																		"==OBJECT STRING==",
																		"sap.n.Launchpad.settingsMenuClose();",
																		"AppCache.Lock();"
																	],
																	"translation": []
																}
															],
															"data": []
														},
														{
															"fieldNo": "d418ca23-35e9-45ab-b80d-40b111280a4d",
															"fieldName": "AppCacheUserActionSwitch",
															"fieldParent": "b8737006-c98d-42a6-d22a-4cc385959ab5",
															"fieldType": "sap.m.StandardListItem",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "visible",
																	"grouping": "Properties",
																	"value": "false",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "type",
																	"grouping": "Properties",
																	"value": "Active",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "title",
																	"grouping": "Properties",
																	"value": "Switch User",
																	"script": "",
																	"translation": [
																		{
																			"language": "JA",
																			"value": "ユーザーを切り替える"
																		},
																		{
																			"language": "ZH",
																			"value": "切换用户"
																		},
																		{
																			"language": "DA",
																			"value": "Skift bruger"
																		},
																		{
																			"language": "NL",
																			"value": "Verander gebruiker"
																		},
																		{
																			"language": "FI",
																			"value": "Vaihda käyttäjää"
																		},
																		{
																			"language": "IT",
																			"value": "Cambia utente"
																		},
																		{
																			"language": "PL",
																			"value": "Zmień użytkownika"
																		},
																		{
																			"language": "PT",
																			"value": "Mudar de utilizador"
																		},
																		{
																			"language": "ES",
																			"value": "Cambiar de usuario"
																		},
																		{
																			"language": "SV",
																			"value": "Byt användare"
																		},
																		{
																			"language": "FR",
																			"value": "Changer d'utilisateur"
																		},
																		{
																			"language": "NO",
																			"value": "Låse"
																		},
																		{
																			"language": "DE",
																			"value": "Benutzer wechseln"
																		},
																		{
																			"language": "EN",
																			"value": "Switch User"
																		}
																	]
																},
																{
																	"attribute": "icon",
																	"grouping": "Properties",
																	"value": "sap-icon://fa-solid/users",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "press",
																	"grouping": "Events",
																	"value": "Anonymous Function",
																	"script": [
																		"==OBJECT STRING==",
																		"sap.n.Launchpad.settingsMenuClose();",
																		"AppCache.Lock();"
																	],
																	"translation": []
																}
															],
															"data": []
														},
														{
															"fieldNo": "c570e45a-f7bf-4886-d227-b8c295633e9e",
															"fieldName": "AppCacheUserActionLogin",
															"fieldParent": "b8737006-c98d-42a6-d22a-4cc385959ab5",
															"fieldType": "sap.m.StandardListItem",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "visible",
																	"grouping": "Properties",
																	"value": "false",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "type",
																	"grouping": "Properties",
																	"value": "Active",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "title",
																	"grouping": "Properties",
																	"value": "Login new user",
																	"script": "",
																	"translation": [
																		{
																			"language": "JA",
																			"value": "ログアウト"
																		},
																		{
																			"language": "ZH",
																			"value": "登出"
																		},
																		{
																			"language": "DA",
																			"value": "Log ud"
																		},
																		{
																			"language": "NL",
																			"value": "Uitloggen"
																		},
																		{
																			"language": "FI",
																			"value": "Kirjautua ulos"
																		},
																		{
																			"language": "IT",
																			"value": "Disconnettersi"
																		},
																		{
																			"language": "PL",
																			"value": "Zaloguj nowego użytkownika"
																		},
																		{
																			"language": "PT",
																			"value": "Sair"
																		},
																		{
																			"language": "ES",
																			"value": "Cerrar sesión"
																		},
																		{
																			"language": "SV",
																			"value": "Logga ut"
																		},
																		{
																			"language": "FR",
																			"value": "Connectez - Out"
																		},
																		{
																			"language": "NO",
																			"value": "Logg ut"
																		},
																		{
																			"language": "DE",
																			"value": "Ausloggen"
																		},
																		{
																			"language": "EN",
																			"value": "Login new user"
																		}
																	]
																},
																{
																	"attribute": "icon",
																	"grouping": "Properties",
																	"value": "sap-icon://fa-solid/user",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "press",
																	"grouping": "Events",
																	"value": "Anonymous Function",
																	"script": [
																		"==OBJECT STRING==",
																		"sap.n.Launchpad.settingsMenuClose();",
																		"AppCache.Logout();"
																	],
																	"translation": []
																}
															],
															"data": []
														},
														{
															"fieldNo": "f3d1903e-4cb4-4896-b094-fdfee6d1b335",
															"fieldName": "AppCacheUserActionLogoff",
															"fieldParent": "b8737006-c98d-42a6-d22a-4cc385959ab5",
															"fieldType": "sap.m.StandardListItem",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "type",
																	"grouping": "Properties",
																	"value": "Active",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "title",
																	"grouping": "Properties",
																	"value": "Logout",
																	"script": "",
																	"translation": [
																		{
																			"language": "JA",
																			"value": "ログアウト"
																		},
																		{
																			"language": "ZH",
																			"value": "登出"
																		},
																		{
																			"language": "DA",
																			"value": "Log ud"
																		},
																		{
																			"language": "NL",
																			"value": "Uitloggen"
																		},
																		{
																			"language": "FI",
																			"value": "Kirjautua ulos"
																		},
																		{
																			"language": "IT",
																			"value": "Disconnettersi"
																		},
																		{
																			"language": "PL",
																			"value": "Wyloguj"
																		},
																		{
																			"language": "PT",
																			"value": "Sair"
																		},
																		{
																			"language": "ES",
																			"value": "Cerrar sesión"
																		},
																		{
																			"language": "SV",
																			"value": "Logga ut"
																		},
																		{
																			"language": "FR",
																			"value": "Connectez - Out"
																		},
																		{
																			"language": "NO",
																			"value": "Logg ut"
																		},
																		{
																			"language": "DE",
																			"value": "Ausloggen"
																		},
																		{
																			"language": "EN",
																			"value": "Logout"
																		}
																	]
																},
																{
																	"attribute": "icon",
																	"grouping": "Properties",
																	"value": "sap-icon://log",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "press",
																	"grouping": "Events",
																	"value": "Anonymous Function",
																	"script": [
																		"==OBJECT STRING==",
																		"sap.n.Launchpad.settingsMenuClose();",
																		"AppCache.Logout();"
																	],
																	"translation": []
																}
															],
															"data": []
														}
													]
												}
											]
										},
										{
											"fieldNo": "816a3385-dec7-4785-c8a7-a028d4cdd528",
											"fieldName": "launchpadSettingsClickArea",
											"fieldParent": "5e39af87-c5fd-4588-8dfe-ad976c2df52e",
											"fieldType": "sap.m.FlexBox",
											"description": "",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "visible",
													"grouping": "Properties",
													"value": true,
													"script": "",
													"translation": []
												},
												{
													"attribute": "styleClass",
													"grouping": "Properties",
													"value": "nepLaunchpadSettingsClickArea",
													"script": "",
													"translation": []
												}
											],
											"data": []
										}
									]
								},
								{
									"fieldNo": "c366cc16-e63d-43c4-c10b-8d12518d17f6",
									"fieldName": "oHTMLObject",
									"fieldParent": "63351f31-547d-43db-8b6a-898b9977f552",
									"fieldType": "sap.ui.core.HTML",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "afterRendering",
											"grouping": "Events",
											"value": "Anonymous Function",
											"script": [
												"==OBJECT STRING==",
												"// Apply Standard Theme for Mobile",
												"if (AppCache.isMobile && AppCache.layout) sap.n.Launchpad.applyLayout(AppCache.layout[0]);",
												""
											],
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "5a4295ae-26cb-4b0a-be40-415a8a2d90d7",
											"fieldName": "oHTML",
											"fieldParent": "c366cc16-e63d-43c4-c10b-8d12518d17f6",
											"fieldType": "neptune.Html",
											"script": [
												"==OBJECT STRING==",
												"<div id=\"NeptuneStyleDiv\"></div>",
												"<iframe id=\"azureSignout\" src=\"\" width=\"0\" height=\"0\" tabindex=\"-1\" border=\"0\" style=\"display:none\"></iframe>",
												"<div id='NeptuneStyleDivDynamic'></div>",
												"",
												""
											],
											"request": [],
											"response": [],
											"attributes": [],
											"data": []
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"fieldNo": 99999,
			"data": [
				{
					"fieldNo": "6cc710c1-161b-453f-bd50-b935559ffbe6",
					"fieldName": "Popup",
					"fieldParent": 99999,
					"fieldType": "neptune.folder",
					"script": "",
					"request": [],
					"response": [],
					"attributes": [],
					"data": [
						{
							"fieldNo": "45b47f08-c1d4-4d26-cd52-61d577e323fb",
							"fieldName": "AppCacheCardTemplate",
							"fieldParent": "6cc710c1-161b-453f-bd50-b935559ffbe6",
							"fieldType": "sap.f.Card",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "visible",
									"grouping": "Properties",
									"value": "false",
									"script": "",
									"translation": []
								}
							],
							"data": []
						},
						{
							"fieldNo": "df8d4552-fa15-4605-dd96-ceb003dc8c99",
							"fieldName": "popConfig",
							"fieldParent": "6cc710c1-161b-453f-bd50-b935559ffbe6",
							"fieldType": "sap.m.Popover",
							"script": "",
							"bindingValue": "Generic Object",
							"bindingType": "u",
							"bindingSource": "P9",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "showHeader",
									"grouping": "Properties",
									"value": "false",
									"script": "",
									"translation": []
								},
								{
									"attribute": "placement",
									"grouping": "Properties",
									"value": "Top",
									"script": "",
									"translation": []
								}
							],
							"data": [
								{
									"fieldNo": "a4acb009-4180-4938-f1e4-432c6ba4a826",
									"fieldName": "formConfig",
									"fieldParent": "df8d4552-fa15-4605-dd96-ceb003dc8c99",
									"fieldType": "sap.ui.layout.form.SimpleForm",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "layout",
											"grouping": "Properties",
											"value": "ResponsiveGridLayout",
											"script": "",
											"translation": []
										},
										{
											"attribute": "labelSpanM",
											"grouping": "Properties",
											"value": "12",
											"script": "",
											"translation": []
										},
										{
											"attribute": "labelSpanL",
											"grouping": "Properties",
											"value": "12",
											"script": "",
											"translation": []
										},
										{
											"attribute": "editable",
											"grouping": "Properties",
											"value": "true",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "a515a9a1-0f39-4000-db8f-7c019fc32c09",
											"fieldName": "txtAppCacheShellListFavWidth",
											"fieldParent": "a4acb009-4180-4938-f1e4-432c6ba4a826",
											"fieldType": "sap.m.Label",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "text",
													"grouping": "Properties",
													"value": "Width",
													"script": "",
													"translation": [
														{
															"language": "PL",
															"value": "Szerokość"
														},
														{
															"language": "EN",
															"value": "Width"
														}
													]
												}
											],
											"data": []
										},
										{
											"fieldNo": "cc86dda5-b48a-4e1d-e48b-fcdf224322a3",
											"fieldName": "inAppCacheShellListFavWidth",
											"fieldParent": "a4acb009-4180-4938-f1e4-432c6ba4a826",
											"fieldType": "sap.m.Select",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "selectedKey",
													"grouping": "Properties",
													"value": "{/cardWidth}",
													"script": "",
													"translation": []
												},
												{
													"attribute": "change",
													"grouping": "Events",
													"value": "Anonymous Function",
													"script": [
														"==OBJECT STRING==",
														"setCacheAppCacheTilesFav();\r",
														"sap.n.Launchpad.saveFav();\r",
														"sap.n.Launchpad.handleFavRedraw();"
													],
													"translation": []
												}
											],
											"data": [
												{
													"fieldNo": "a1fff9aa-6465-4d6c-f4eb-b1de829a3236",
													"fieldName": "tileWidthDefault",
													"fieldParent": "cc86dda5-b48a-4e1d-e48b-fcdf224322a3",
													"fieldType": "sap.ui.core.Item",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "text",
															"grouping": "Properties",
															"value": "Default (1x)",
															"script": "",
															"translation": [
																{
																	"language": "PL",
																	"value": "Domyślnie (1x)"
																}
															]
														}
													],
													"data": []
												},
												{
													"fieldNo": "8daccfbe-7a9a-48c4-9054-80945ec75553",
													"fieldName": "tileWidthMedium",
													"fieldParent": "cc86dda5-b48a-4e1d-e48b-fcdf224322a3",
													"fieldType": "sap.ui.core.Item",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "text",
															"grouping": "Properties",
															"value": "Medium (2x)",
															"script": "",
															"translation": [
																{
																	"language": "PL",
																	"value": "Średni (2x)"
																}
															]
														},
														{
															"attribute": "key",
															"grouping": "Properties",
															"value": "Medium",
															"script": "",
															"translation": []
														}
													],
													"data": []
												},
												{
													"fieldNo": "5e0c7dfa-ccf0-464a-ec2f-d8625131ce1d",
													"fieldName": "tileWidthWide",
													"fieldParent": "cc86dda5-b48a-4e1d-e48b-fcdf224322a3",
													"fieldType": "sap.ui.core.Item",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "text",
															"grouping": "Properties",
															"value": "Wide (3x)",
															"script": "",
															"translation": [
																{
																	"language": "PL",
																	"value": "Szeroki (3x)"
																}
															]
														},
														{
															"attribute": "key",
															"grouping": "Properties",
															"value": "Wide",
															"script": "",
															"translation": []
														}
													],
													"data": []
												},
												{
													"fieldNo": "a1b82c59-ae8d-46cc-fdda-9bdac43aec05",
													"fieldName": "tileWidthWider",
													"fieldParent": "cc86dda5-b48a-4e1d-e48b-fcdf224322a3",
													"fieldType": "sap.ui.core.Item",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "text",
															"grouping": "Properties",
															"value": "Wider (4x)",
															"script": "",
															"translation": [
																{
																	"language": "PL",
																	"value": "Szersze (4x)"
																}
															]
														},
														{
															"attribute": "key",
															"grouping": "Properties",
															"value": "Wider",
															"script": "",
															"translation": []
														}
													],
													"data": []
												},
												{
													"fieldNo": "3b904246-ee6f-4cc9-ce95-77d11d5dca0a",
													"fieldName": "tileWidthMax",
													"fieldParent": "cc86dda5-b48a-4e1d-e48b-fcdf224322a3",
													"fieldType": "sap.ui.core.Item",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "text",
															"grouping": "Properties",
															"value": "Maxiumum (Full width)",
															"script": "",
															"translation": [
																{
																	"language": "PL",
																	"value": "Maxiumum (pełna szerokość)"
																}
															]
														},
														{
															"attribute": "key",
															"grouping": "Properties",
															"value": "Max",
															"script": "",
															"translation": []
														}
													],
													"data": []
												}
											]
										},
										{
											"fieldNo": "42a57c4b-4ce6-43ca-feb8-134cf62f9b21",
											"fieldName": "txtAppCacheShellListFavHeight",
											"fieldParent": "a4acb009-4180-4938-f1e4-432c6ba4a826",
											"fieldType": "sap.m.Label",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "text",
													"grouping": "Properties",
													"value": "Height",
													"script": "",
													"translation": [
														{
															"language": "PL",
															"value": "Wysokość"
														},
														{
															"language": "EN",
															"value": "Height"
														}
													]
												}
											],
											"data": []
										},
										{
											"fieldNo": "bc263013-a356-4fe0-caf0-6be4aba752a9",
											"fieldName": "inAppCacheShellListFavHeight",
											"fieldParent": "a4acb009-4180-4938-f1e4-432c6ba4a826",
											"fieldType": "sap.m.Select",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "selectedKey",
													"grouping": "Properties",
													"value": "{/cardHeight}",
													"script": "",
													"translation": []
												},
												{
													"attribute": "change",
													"grouping": "Events",
													"value": "Anonymous Function",
													"script": [
														"==OBJECT STRING==",
														"setCacheAppCacheTilesFav();\r",
														"sap.n.Launchpad.saveFav();\r",
														"sap.n.Launchpad.handleFavRedraw();"
													],
													"translation": []
												}
											],
											"data": [
												{
													"fieldNo": "f930e9c9-eb57-41c9-af0b-08d75bf6c514",
													"fieldName": "tileHEIGHTDefault",
													"fieldParent": "bc263013-a356-4fe0-caf0-6be4aba752a9",
													"fieldType": "sap.ui.core.Item",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "text",
															"grouping": "Properties",
															"value": "Default (1x)",
															"script": "",
															"translation": [
																{
																	"language": "PL",
																	"value": "Domyślnie (1x)"
																}
															]
														}
													],
													"data": []
												},
												{
													"fieldNo": "983efc3c-39cd-4170-ffc7-7b778bff54f2",
													"fieldName": "tileHEIGHTTall",
													"fieldParent": "bc263013-a356-4fe0-caf0-6be4aba752a9",
													"fieldType": "sap.ui.core.Item",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "text",
															"grouping": "Properties",
															"value": "Tall (2x)",
															"script": "",
															"translation": [
																{
																	"language": "PL",
																	"value": "Wysoki (2x)"
																}
															]
														},
														{
															"attribute": "key",
															"grouping": "Properties",
															"value": "Tall",
															"script": "",
															"translation": []
														}
													],
													"data": []
												},
												{
													"fieldNo": "4e59dc65-d300-4767-b33b-effa93a772e0",
													"fieldName": "tileHEIGHTTower",
													"fieldParent": "bc263013-a356-4fe0-caf0-6be4aba752a9",
													"fieldType": "sap.ui.core.Item",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "text",
															"grouping": "Properties",
															"value": "Tower (3x)",
															"script": "",
															"translation": [
																{
																	"language": "PL",
																	"value": "Wieża (3x)"
																}
															]
														},
														{
															"attribute": "key",
															"grouping": "Properties",
															"value": "Tower",
															"script": "",
															"translation": []
														}
													],
													"data": []
												},
												{
													"fieldNo": "72358ed0-00f5-4ec4-e55f-5e9cb45d021d",
													"fieldName": "tileHEIGHTSkyscraper",
													"fieldParent": "bc263013-a356-4fe0-caf0-6be4aba752a9",
													"fieldType": "sap.ui.core.Item",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "text",
															"grouping": "Properties",
															"value": "Skyscraper (4x)",
															"script": "",
															"translation": [
																{
																	"language": "PL",
																	"value": "Wieżowiec (4x)"
																}
															]
														},
														{
															"attribute": "key",
															"grouping": "Properties",
															"value": "Skyscraper",
															"script": "",
															"translation": []
														}
													],
													"data": []
												}
											]
										}
									]
								}
							]
						},
						{
							"fieldNo": "0e5b9d18-8a5b-4aff-9d85-d1edc4027c05",
							"fieldName": "AppCacheUserDialog",
							"fieldParent": "6cc710c1-161b-453f-bd50-b935559ffbe6",
							"fieldType": "sap.m.ActionSheet",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "styleClass",
									"grouping": "Properties",
									"value": "neptunePop",
									"script": "",
									"translation": []
								}
							],
							"data": [
								{
									"fieldNo": "fcf46f49-9cd5-4810-9d09-4163e0a4115a",
									"fieldName": "AppCacheUserDialogCloseAll",
									"fieldParent": "0e5b9d18-8a5b-4aff-9d85-d1edc4027c05",
									"fieldType": "sap.m.Button",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "type",
											"grouping": "Properties",
											"value": "Emphasized",
											"script": "",
											"translation": []
										},
										{
											"attribute": "text",
											"grouping": "Properties",
											"value": "Close All",
											"script": "",
											"translation": [
												{
													"language": "JA",
													"value": "すべて閉じる"
												},
												{
													"language": "ZH",
													"value": "关闭所有"
												},
												{
													"language": "DA",
													"value": "Luk alle"
												},
												{
													"language": "NL",
													"value": "Sluit alles"
												},
												{
													"language": "FI",
													"value": "Sulje kaikki"
												},
												{
													"language": "IT",
													"value": "Chiudi tutto"
												},
												{
													"language": "PL",
													"value": "Zamknij wszystko"
												},
												{
													"language": "PT",
													"value": "Fechar tudo"
												},
												{
													"language": "ES",
													"value": "Cierra todo"
												},
												{
													"language": "SV",
													"value": "Stäng alla"
												},
												{
													"language": "FR",
													"value": "Ferme tout"
												},
												{
													"language": "NO",
													"value": "Lukk alle"
												},
												{
													"language": "DE",
													"value": "Alle schließen"
												},
												{
													"language": "EN",
													"value": "Close All"
												}
											]
										},
										{
											"attribute": "icon",
											"grouping": "Properties",
											"value": "sap-icon://sys-cancel",
											"script": "",
											"translation": []
										},
										{
											"attribute": "press",
											"grouping": "Events",
											"value": "Anonymous Function",
											"script": [
												"==OBJECT STRING==",
												"",
												"// Close Buttons",
												"AppCacheUserDialog.getButtons().forEach(function (data) {",
												"    if (data.getId() !== \"AppCacheUserDialogCloseAll\") {",
												"        data.destroy();",
												"    }",
												"});",
												"",
												"// Close Dialogs",
												"AppCache.Dialogs.forEach(function (data) {",
												"    let dia = sap.ui.getCore().byId(data);",
												"    if (dia) dia.close();",
												"});",
												"",
												"AppCacheShellDialog.setVisible(false);",
												"AppCache.Dialogs = [];",
												"AppCacheUserDialog.close();"
											],
											"translation": []
										}
									],
									"data": []
								}
							]
						},
						{
							"fieldNo": "5a6551a3-417a-40f4-a295-ed41b6d25858",
							"fieldName": "AppCache_diaDownload",
							"fieldParent": "6cc710c1-161b-453f-bd50-b935559ffbe6",
							"fieldType": "sap.m.BusyDialog",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "title",
									"grouping": "Properties",
									"value": "Please wait",
									"script": "",
									"translation": [
										{
											"language": "1",
											"value": "取消"
										},
										{
											"language": "D",
											"value": "Abbrechen"
										},
										{
											"language": "F",
											"value": "Annuler"
										},
										{
											"language": "K",
											"value": "Afbryd"
										},
										{
											"language": "O",
											"value": "Avbryt"
										},
										{
											"language": "P",
											"value": "Cancelar"
										},
										{
											"language": "R",
											"value": "Пожалуйста подождите"
										},
										{
											"language": "S",
											"value": "Abortar"
										},
										{
											"language": "W",
											"value": "Моля Изчакайте"
										},
										{
											"language": "DA",
											"value": "Vent venligst"
										},
										{
											"language": "IT",
											"value": "attendere prego"
										},
										{
											"language": "PL",
											"value": "Proszę czekać"
										},
										{
											"language": "PT",
											"value": "Por favor, espere"
										},
										{
											"language": "ES",
											"value": "por favor espera"
										},
										{
											"language": "SV",
											"value": "Vänta"
										},
										{
											"language": "FR",
											"value": "S'il vous plaît, attendez"
										},
										{
											"language": "NO",
											"value": "Vennligst vent"
										},
										{
											"language": "DE",
											"value": "Warten Sie mal"
										},
										{
											"language": "EN",
											"value": "Please wait"
										}
									]
								},
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Downloading new version...",
									"script": "",
									"translation": [
										{
											"language": "1",
											"value": "取消"
										},
										{
											"language": "D",
											"value": "Abbrechen"
										},
										{
											"language": "F",
											"value": "Annuler"
										},
										{
											"language": "K",
											"value": "Afbryd"
										},
										{
											"language": "O",
											"value": "Avbryt"
										},
										{
											"language": "P",
											"value": "Cancelar"
										},
										{
											"language": "R",
											"value": "Загрузка новой версии…"
										},
										{
											"language": "S",
											"value": "Abortar"
										},
										{
											"language": "W",
											"value": "Новата версия се изтегля ..."
										},
										{
											"language": "DA",
											"value": "Downloader ny version ..."
										},
										{
											"language": "IT",
											"value": "Download della nuova versione ..."
										},
										{
											"language": "PL",
											"value": "Pobieranie nowej wersji ..."
										},
										{
											"language": "PT",
											"value": "Fazendo o download da nova versão ..."
										},
										{
											"language": "ES",
											"value": "Descargando nueva versión ..."
										},
										{
											"language": "SV",
											"value": "Hämtar ny version ..."
										},
										{
											"language": "FR",
											"value": "Téléchargement de la nouvelle version ..."
										},
										{
											"language": "NO",
											"value": "Laster ned ny versjon ..."
										},
										{
											"language": "DE",
											"value": "Neue Version herunterladen ..."
										},
										{
											"language": "EN",
											"value": "Downloading new version..."
										}
									]
								},
								{
									"attribute": "showCancelButton",
									"grouping": "Properties",
									"value": true,
									"script": "",
									"translation": []
								},
								{
									"attribute": "customIconDensityAware",
									"grouping": "Properties",
									"value": true,
									"script": "",
									"translation": []
								},
								{
									"attribute": "cancelButtonText",
									"grouping": "Properties",
									"value": "Cancel",
									"script": "",
									"translation": [
										{
											"language": "1",
											"value": "取消"
										},
										{
											"language": "D",
											"value": "Abbrechen"
										},
										{
											"language": "F",
											"value": "Annuler"
										},
										{
											"language": "K",
											"value": "Afbryd"
										},
										{
											"language": "O",
											"value": "Avbryt"
										},
										{
											"language": "P",
											"value": "Cancelar"
										},
										{
											"language": "R",
											"value": "Отменить"
										},
										{
											"language": "S",
											"value": "Abortar"
										},
										{
											"language": "W",
											"value": "Откажи"
										}
									]
								},
								{
									"attribute": "close",
									"grouping": "Events",
									"value": "AppCache.downloadXhr.abort();",
									"script": "AppCache.downloadXhr.abort();",
									"translation": []
								}
							],
							"data": []
						},
						{
							"fieldNo": "f4fef048-0990-4dd0-ee55-3dde54181acf",
							"fieldName": "busyDialogStartup",
							"fieldParent": "6cc710c1-161b-453f-bd50-b935559ffbe6",
							"fieldType": "sap.m.BusyDialog",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "title",
									"grouping": "Properties",
									"value": "Please wait",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "お待ちください"
										},
										{
											"language": "ZH",
											"value": "请耐心等待"
										},
										{
											"language": "DA",
											"value": "Vent venligst"
										},
										{
											"language": "NL",
											"value": "Even geduld aub"
										},
										{
											"language": "FI",
											"value": "Odota"
										},
										{
											"language": "IT",
											"value": "attendere prego"
										},
										{
											"language": "PL",
											"value": "Proszę czekać"
										},
										{
											"language": "PT",
											"value": "Por favor, espere"
										},
										{
											"language": "ES",
											"value": "por favor espera"
										},
										{
											"language": "SV",
											"value": "Vänta"
										},
										{
											"language": "FR",
											"value": "S'il vous plaît, attendez"
										},
										{
											"language": "NO",
											"value": "Vennligst vent"
										},
										{
											"language": "DE",
											"value": "Bitte warten"
										},
										{
											"language": "EN",
											"value": "Please wait"
										}
									]
								},
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Loading tiles for the first time",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "初めてタイルをロードする"
										},
										{
											"language": "ZH",
											"value": "第一次装载瓷砖"
										},
										{
											"language": "DA",
											"value": "Indlæser fliser for første gang"
										},
										{
											"language": "NL",
											"value": "Tegels voor de eerste keer laden"
										},
										{
											"language": "FI",
											"value": "Laattojen lataaminen ensimmäistä kertaa"
										},
										{
											"language": "IT",
											"value": "Caricamento delle tessere per la prima volta"
										},
										{
											"language": "PL",
											"value": "Ładowanie płytek po raz pierwszy"
										},
										{
											"language": "PT",
											"value": "Carregando Tiles pela primeira vez"
										},
										{
											"language": "ES",
											"value": "Cargando azulejos por primera vez."
										},
										{
											"language": "SV",
											"value": "Laddar kakel för första gången"
										},
										{
											"language": "FR",
											"value": "Chargement des carreaux pour la première fois"
										},
										{
											"language": "NO",
											"value": "Laster fliser for første gang"
										},
										{
											"language": "DE",
											"value": "Initiales Laden der Kacheln "
										},
										{
											"language": "EN",
											"value": "Loading tiles for the first time"
										}
									]
								},
								{
									"attribute": "showCancelButton",
									"grouping": "Properties",
									"value": "true",
									"script": "",
									"translation": []
								}
							],
							"data": []
						},
						{
							"fieldNo": "02f9e36d-6c59-4b0d-d091-431845b4ac85",
							"fieldName": "popSupportedBrowsers",
							"fieldParent": "6cc710c1-161b-453f-bd50-b935559ffbe6",
							"fieldType": "sap.m.Popover",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "title",
									"grouping": "Properties",
									"value": "Compatible On",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "互換性あり"
										},
										{
											"language": "ZH",
											"value": "兼容"
										},
										{
											"language": "DA",
											"value": "Kompatibel På"
										},
										{
											"language": "NL",
											"value": "Compatibel op"
										},
										{
											"language": "FI",
											"value": "Yhteensopiva päällä"
										},
										{
											"language": "IT",
											"value": "Compatibile"
										},
										{
											"language": "PL",
											"value": "Zgodność włączona"
										},
										{
											"language": "PT",
											"value": "Compatível em"
										},
										{
											"language": "ES",
											"value": "Compatible en"
										},
										{
											"language": "SV",
											"value": "Kompatibel På"
										},
										{
											"language": "FR",
											"value": "Compatible sur"
										},
										{
											"language": "NO",
											"value": "Kompatibel På"
										},
										{
											"language": "DE",
											"value": "Kompatibel an"
										},
										{
											"language": "EN",
											"value": "Compatible On"
										}
									]
								},
								{
									"attribute": "contentWidth",
									"grouping": "Properties",
									"value": "180px",
									"script": "",
									"translation": []
								},
								{
									"attribute": "endButton",
									"grouping": "Associations",
									"value": "butSupportedBrowsersClose",
									"script": "",
									"translation": []
								}
							],
							"data": [
								{
									"fieldNo": "ce74f358-1437-4b55-f776-b977e8e49332",
									"fieldName": "listSupportedBrowsers",
									"fieldParent": "02f9e36d-6c59-4b0d-d091-431845b4ac85",
									"fieldType": "sap.m.List",
									"script": "",
									"bindingValue": "Generic Array",
									"bindingType": "h",
									"bindingSource": "P9",
									"request": [],
									"response": [],
									"attributes": [],
									"data": [
										{
											"fieldNo": "21647170-1598-45d9-87d0-ff60c5a66ba5",
											"fieldName": "itemSupportedBrowsers",
											"fieldParent": "ce74f358-1437-4b55-f776-b977e8e49332",
											"fieldType": "sap.m.StandardListItem",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "title",
													"grouping": "Properties",
													"value": "{name}",
													"script": "",
													"translation": []
												}
											],
											"data": []
										}
									]
								}
							]
						},
						{
							"fieldNo": "a0b99188-573e-4f4a-b863-ef6a033a2f14",
							"fieldName": "popNavBar",
							"fieldParent": "6cc710c1-161b-453f-bd50-b935559ffbe6",
							"fieldType": "sap.m.Popover",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "styleClassPadding",
									"grouping": "Properties",
									"value": "sapUiNoContentPadding",
									"script": "",
									"translation": []
								},
								{
									"attribute": "styleClass",
									"grouping": "Properties",
									"value": "nepPopCards",
									"script": "",
									"translation": []
								},
								{
									"attribute": "showHeader",
									"grouping": "Properties",
									"value": "false",
									"script": "",
									"translation": []
								},
								{
									"attribute": "showArrow",
									"grouping": "Properties",
									"value": "false",
									"script": "",
									"translation": []
								},
								{
									"attribute": "placement",
									"grouping": "Properties",
									"value": "Right",
									"script": "",
									"translation": []
								},
								{
									"attribute": "offsetX",
									"grouping": "Properties",
									"value": "-56",
									"script": "",
									"translation": []
								}
							],
							"data": [
								{
									"fieldNo": "45d7de06-550b-452f-87db-a856c7b42f7d",
									"fieldName": "blockPopover",
									"fieldParent": "a0b99188-573e-4f4a-b863-ef6a033a2f14",
									"fieldType": "sap.ui.layout.BlockLayout",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "background",
											"grouping": "Properties",
											"value": "Default",
											"script": "",
											"translation": []
										},
										{
											"attribute": "styleClassPadding",
											"grouping": "Properties",
											"value": "sapUiNoContentPadding",
											"script": "",
											"translation": []
										},
										{
											"attribute": "keepFontSize",
											"grouping": "Properties",
											"value": "true",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "c484027e-c069-4576-d40d-6b976fc5c8c0",
											"fieldName": "blockPopoverRow",
											"fieldParent": "45d7de06-550b-452f-87db-a856c7b42f7d",
											"fieldType": "sap.ui.layout.BlockLayoutRow",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [],
											"data": []
										}
									]
								}
							]
						},
						{
							"fieldNo": "f4aaa6e7-327a-4600-bffc-b6c705bfa826",
							"fieldName": "popBlackout",
							"fieldParent": "6cc710c1-161b-453f-bd50-b935559ffbe6",
							"fieldType": "sap.m.Popover",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "showHeader",
									"grouping": "Properties",
									"value": "false",
									"script": "",
									"translation": []
								},
								{
									"attribute": "placement",
									"grouping": "Properties",
									"value": "PreferredBottomOrFlip",
									"script": "",
									"translation": []
								},
								{
									"attribute": "contentWidth",
									"grouping": "Properties",
									"value": "600px",
									"script": "",
									"translation": []
								},
								{
									"attribute": "contentHeight",
									"grouping": "Properties",
									"value": "400px",
									"script": "",
									"translation": []
								}
							],
							"data": [
								{
									"fieldNo": "217961dd-d0a8-4eb8-e0fa-9fd8f34e85d7",
									"fieldName": "scrollBlackout",
									"fieldParent": "f4aaa6e7-327a-4600-bffc-b6c705bfa826",
									"fieldType": "sap.m.ScrollContainer",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "width",
											"grouping": "Properties",
											"value": "100%",
											"script": "",
											"translation": []
										},
										{
											"attribute": "vertical",
											"grouping": "Properties",
											"value": "true",
											"script": "",
											"translation": []
										},
										{
											"attribute": "horizontal",
											"grouping": "Properties",
											"value": "false",
											"script": "",
											"translation": []
										},
										{
											"attribute": "height",
											"grouping": "Properties",
											"value": "100%",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "1965721f-736a-4721-d016-77c0ebd213a6",
											"fieldName": "descBlackout",
											"fieldParent": "217961dd-d0a8-4eb8-e0fa-9fd8f34e85d7",
											"fieldType": "sap.m.FlexBox",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "renderType",
													"grouping": "Properties",
													"value": "Bare",
													"script": "",
													"translation": []
												}
											],
											"data": []
										}
									]
								}
							]
						}
					]
				},
				{
					"fieldNo": "2af20b8c-2c59-4dc5-e76a-6871398cb8b1",
					"fieldName": "Dialogs",
					"fieldParent": 99999,
					"fieldType": "neptune.folder",
					"script": "",
					"request": [],
					"response": [],
					"attributes": [],
					"data": [
						{
							"fieldNo": "84b2c26b-539e-4e2c-93c4-96a145d17167",
							"fieldName": "butDiaSetPasswordConfirm",
							"fieldParent": "2af20b8c-2c59-4dc5-e76a-6871398cb8b1",
							"fieldType": "sap.m.Button",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "type",
									"grouping": "Properties",
									"value": "Emphasized",
									"script": "",
									"translation": []
								},
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Confirm",
									"script": "",
									"translation": [
										{
											"language": "DA",
											"value": "Bekræfte"
										},
										{
											"language": "IT",
											"value": "Confermare"
										},
										{
											"language": "PL",
											"value": "Potwierdzać"
										},
										{
											"language": "PT",
											"value": "confirme"
										},
										{
											"language": "ES",
											"value": "Confirmar"
										},
										{
											"language": "SV",
											"value": "Bekräfta"
										},
										{
											"language": "FR",
											"value": "Confirmer"
										},
										{
											"language": "NO",
											"value": "Bekrefte"
										},
										{
											"language": "DE",
											"value": "Bestätigen"
										},
										{
											"language": "EN",
											"value": "Confirm"
										}
									]
								},
								{
									"attribute": "press",
									"grouping": "Events",
									"value": "Anonymous Function",
									"script": [
										"==OBJECT STRING==",
										"if (informSetPasswordOne.getValue() !== informSetPasswordTwo.getValue()) {",
										"    sap.m.MessageToast.show(\"Password confirmation doesn't match password\");",
										"} else if (!informSetPasswordOne.getValue()) {",
										"    sap.m.MessageToast.show(\"Please provide a password\");",
										"} else if (!informSetPasswordOld.getValue()) {",
										"    sap.m.MessageToast.show(\"Please provide the current password\");",
										"} else {",
										"",
										"    diaSetPassword.setBusy(true);",
										"",
										"    data = {",
										"        id: AppCache.userInfo.id,",
										"        old: informSetPasswordOld.getValue(),",
										"        updated: informSetPasswordTwo.getValue()",
										"    }",
										"",
										"    request({",
										"        type: \"POST\",",
										"        contentType: 'application/json; charset=utf-8',",
										"        url: AppCache.Url + \"/user/reset\",",
										"        // dataType: \"json\",",
										"        data: JSON.stringify(data),",
										"        success: function (data) {",
										"            diaSetPassword.setBusy(false);",
										"            sap.m.MessageToast.show(\"Password updated\");",
										"            diaSetPassword.close();",
										"        },",
										"        error: function (data) {",
										"            diaSetPassword.setBusy(false);",
										"            if (data.responseJSON && data.responseJSON.status) sap.m.MessageToast.show(data.responseJSON.status);",
										"        }",
										"    });",
										"",
										"}"
									],
									"translation": []
								}
							],
							"data": []
						},
						{
							"fieldNo": "754911b5-e92f-4a3f-ea45-10a0a02d98ef",
							"fieldName": "diaSetPassword",
							"fieldParent": "2af20b8c-2c59-4dc5-e76a-6871398cb8b1",
							"fieldType": "sap.m.Dialog",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "styleClassPadding",
									"grouping": "Properties",
									"value": "sapUiNoContentPadding",
									"script": "",
									"translation": []
								},
								{
									"attribute": "styleClassMargin",
									"grouping": "Properties",
									"value": "sapUiNoMargin",
									"script": "",
									"translation": []
								},
								{
									"attribute": "styleClass",
									"grouping": "Properties",
									"value": "nepDialogWithObjHeader",
									"script": "",
									"translation": []
								},
								{
									"attribute": "draggable",
									"grouping": "Properties",
									"value": "true",
									"script": "",
									"translation": []
								},
								{
									"attribute": "contentWidth",
									"grouping": "Properties",
									"value": "400px",
									"script": "",
									"translation": []
								},
								{
									"attribute": "beforeOpen",
									"grouping": "Events",
									"value": "Anonymous Function",
									"script": [
										"==OBJECT STRING==",
										"//clearing dialog fields",
										"",
										"informSetPasswordOne.setValue=\"\";",
										"informSetPasswordTwo.setValue=\"\";"
									],
									"translation": []
								},
								{
									"attribute": "endButton",
									"grouping": "Associations",
									"value": "butDiaSetPasswordConfirm",
									"script": "",
									"translation": []
								}
							],
							"data": [
								{
									"fieldNo": "b74c1e52-94d8-44cc-99b2-fd4b2e34c302",
									"fieldName": "subHeaderPassword",
									"fieldParent": "754911b5-e92f-4a3f-ea45-10a0a02d98ef",
									"fieldType": "sap.m.Bar",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "styleClass",
											"grouping": "Properties",
											"value": "sapContrast sapContrastPlus",
											"script": "",
											"translation": []
										},
										{
											"attribute": "design",
											"grouping": "Properties",
											"value": "Footer",
											"script": "",
											"translation": []
										},
										{
											"attribute": "position",
											"grouping": "Parent",
											"value": "setCustomHeader",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "453005bb-512a-4494-f479-794eda17bf2f",
											"fieldName": "Right",
											"fieldParent": "b74c1e52-94d8-44cc-99b2-fd4b2e34c302",
											"fieldType": "neptune.BarContent",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "position",
													"grouping": "Parent",
													"value": "ContentRight",
													"script": "",
													"translation": []
												}
											],
											"data": [
												{
													"fieldNo": "b9b01a9f-5976-4a8c-f241-a3dae81692e4",
													"fieldName": "butPasswordClose",
													"fieldParent": "453005bb-512a-4494-f479-794eda17bf2f",
													"fieldType": "sap.m.Button",
													"script": "",
													"onlyDeclare": true,
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "styleClass",
															"grouping": "Properties",
															"value": "nepCloseBtn",
															"script": "",
															"translation": []
														},
														{
															"attribute": "icon",
															"grouping": "Properties",
															"value": "sap-icon://decline",
															"script": "",
															"translation": []
														},
														{
															"attribute": "press",
															"grouping": "Events",
															"value": "this.getParent().getParent().close();",
															"script": "this.getParent().getParent().close();",
															"translation": []
														}
													],
													"data": []
												}
											]
										}
									]
								},
								{
									"fieldNo": "6395632d-904d-4a5f-cd9e-bfa146e1d733",
									"fieldName": "objHeaderPassword",
									"fieldParent": "754911b5-e92f-4a3f-ea45-10a0a02d98ef",
									"fieldType": "sap.m.ObjectHeader",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "title",
											"grouping": "Properties",
											"value": "Password",
											"script": "",
											"translation": [
												{
													"language": "DA",
													"value": "Adgangskode"
												},
												{
													"language": "IT",
													"value": "Parola d'ordine"
												},
												{
													"language": "PL",
													"value": "Hasło"
												},
												{
													"language": "PT",
													"value": "Senha"
												},
												{
													"language": "ES",
													"value": "Contraseña"
												},
												{
													"language": "SV",
													"value": "Lösenord"
												},
												{
													"language": "FR",
													"value": "Mot de passe"
												},
												{
													"language": "NO",
													"value": "Passord"
												},
												{
													"language": "DE",
													"value": "Passwort"
												},
												{
													"language": "EN",
													"value": "Password"
												}
											]
										},
										{
											"attribute": "responsive",
											"grouping": "Properties",
											"value": "true",
											"script": "",
											"translation": []
										},
										{
											"attribute": "numberUnit",
											"grouping": "Properties",
											"value": "ENTRIES",
											"script": "",
											"translation": []
										},
										{
											"attribute": "numberState",
											"grouping": "Properties",
											"value": "Warning",
											"script": "",
											"translation": []
										},
										{
											"attribute": "intro",
											"grouping": "Properties",
											"value": "Change users password",
											"script": "",
											"translation": [
												{
													"language": "DA",
													"value": "Skift brugeradgangskode"
												},
												{
													"language": "IT",
													"value": "Cambia password utente"
												},
												{
													"language": "PL",
													"value": "Zmień hasło użytkownika"
												},
												{
													"language": "PT",
													"value": "Alterar senha de usuários"
												},
												{
													"language": "ES",
													"value": "Cambiar contraseña de usuario"
												},
												{
													"language": "SV",
													"value": "Ändra användarlösenord"
												},
												{
													"language": "FR",
													"value": "Changer le mot de passe des utilisateurs"
												},
												{
													"language": "NO",
													"value": "Endre passord for brukere"
												},
												{
													"language": "DE",
													"value": "Ändern Sie das Benutzerpasswort"
												},
												{
													"language": "EN",
													"value": "Change users password"
												}
											]
										},
										{
											"attribute": "icon",
											"grouping": "Properties",
											"value": "sap-icon://fa-solid/user-shield",
											"script": "",
											"translation": []
										}
									],
									"data": []
								},
								{
									"fieldNo": "bb301ff7-2295-4073-a8c2-8e9c52c9d348",
									"fieldName": "formSetPassword",
									"fieldParent": "754911b5-e92f-4a3f-ea45-10a0a02d98ef",
									"fieldType": "sap.ui.layout.form.SimpleForm",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "layout",
											"grouping": "Properties",
											"value": "ResponsiveGridLayout",
											"script": "",
											"translation": []
										},
										{
											"attribute": "labelSpanM",
											"grouping": "Properties",
											"value": "12",
											"script": "",
											"translation": []
										},
										{
											"attribute": "labelSpanL",
											"grouping": "Properties",
											"value": "12",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "dbc3b5ac-e43d-4705-a28f-b1a12168824b",
											"fieldName": "lblformSetPasswordOld",
											"fieldParent": "bb301ff7-2295-4073-a8c2-8e9c52c9d348",
											"fieldType": "sap.m.Label",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "text",
													"grouping": "Properties",
													"value": "Current Password",
													"script": "",
													"translation": [
														{
															"language": "DA",
															"value": "nyt kodeord"
														},
														{
															"language": "IT",
															"value": "Password attuale"
														},
														{
															"language": "PL",
															"value": "Aktualne hasło"
														},
														{
															"language": "PT",
															"value": "Nova senha"
														},
														{
															"language": "ES",
															"value": "Nueva contraseña"
														},
														{
															"language": "SV",
															"value": "nytt lösenord"
														},
														{
															"language": "FR",
															"value": "nouveau mot de passe"
														},
														{
															"language": "NO",
															"value": "Nytt passord"
														},
														{
															"language": "DE",
															"value": "Aktuelles Passwort"
														},
														{
															"language": "EN",
															"value": "Current Password"
														}
													]
												}
											],
											"data": []
										},
										{
											"fieldNo": "88c5d76f-8761-4508-fc88-b3b212abb444",
											"fieldName": "informSetPasswordOld",
											"fieldParent": "bb301ff7-2295-4073-a8c2-8e9c52c9d348",
											"fieldType": "sap.m.Input",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "type",
													"grouping": "Properties",
													"value": "Password",
													"script": "",
													"translation": []
												}
											],
											"data": []
										},
										{
											"fieldNo": "f130ab33-312e-4273-8b67-3b8eb46fd34e",
											"fieldName": "lblformSetPasswordOne",
											"fieldParent": "bb301ff7-2295-4073-a8c2-8e9c52c9d348",
											"fieldType": "sap.m.Label",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "text",
													"grouping": "Properties",
													"value": "New Password",
													"script": "",
													"translation": [
														{
															"language": "DA",
															"value": "nyt kodeord"
														},
														{
															"language": "IT",
															"value": "Password nuova "
														},
														{
															"language": "PL",
															"value": "nowe hasło"
														},
														{
															"language": "PT",
															"value": "Nova senha"
														},
														{
															"language": "ES",
															"value": "Nueva contraseña"
														},
														{
															"language": "SV",
															"value": "nytt lösenord"
														},
														{
															"language": "FR",
															"value": "nouveau mot de passe"
														},
														{
															"language": "NO",
															"value": "Nytt passord"
														},
														{
															"language": "DE",
															"value": "Neues Passwort"
														},
														{
															"language": "EN",
															"value": "New Password"
														}
													]
												}
											],
											"data": []
										},
										{
											"fieldNo": "76927280-5f9c-4f79-f870-bd61351ca435",
											"fieldName": "informSetPasswordOne",
											"fieldParent": "bb301ff7-2295-4073-a8c2-8e9c52c9d348",
											"fieldType": "sap.m.Input",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "type",
													"grouping": "Properties",
													"value": "Password",
													"script": "",
													"translation": []
												}
											],
											"data": []
										},
										{
											"fieldNo": "0afab486-5b54-4409-f1e3-da6886cff84a",
											"fieldName": "lblformSetPasswordTwo",
											"fieldParent": "bb301ff7-2295-4073-a8c2-8e9c52c9d348",
											"fieldType": "sap.m.Label",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "text",
													"grouping": "Properties",
													"value": "Repeat New Password",
													"script": "",
													"translation": [
														{
															"language": "DA",
															"value": "Gentag adgangskode"
														},
														{
															"language": "IT",
															"value": "Ripeti la password"
														},
														{
															"language": "PL",
															"value": "Powtórz nowe hasło"
														},
														{
															"language": "PT",
															"value": "Repita a senha"
														},
														{
															"language": "ES",
															"value": "Repite la contraseña"
														},
														{
															"language": "SV",
															"value": "Repetera lösenord"
														},
														{
															"language": "FR",
															"value": "Répéter le mot de passe"
														},
														{
															"language": "NO",
															"value": "Gjenta passord"
														},
														{
															"language": "DE",
															"value": "Wiederhole das Passwort"
														},
														{
															"language": "EN",
															"value": "Repeat New Password"
														}
													]
												}
											],
											"data": []
										},
										{
											"fieldNo": "f7d01bc7-b824-4b98-f1c4-dd0cbd27c507",
											"fieldName": "informSetPasswordTwo",
											"fieldParent": "bb301ff7-2295-4073-a8c2-8e9c52c9d348",
											"fieldType": "sap.m.Input",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "type",
													"grouping": "Properties",
													"value": "Password",
													"script": "",
													"translation": []
												}
											],
											"data": []
										}
									]
								}
							]
						},
						{
							"fieldNo": "2bf128d5-e4c8-4c9d-b397-566cddcc40ed",
							"fieldName": "acceptMessage",
							"fieldParent": "2af20b8c-2c59-4dc5-e76a-6871398cb8b1",
							"fieldType": "sap.m.Button",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "press",
									"grouping": "Events",
									"value": "Anonymous Function",
									"script": [
										"==OBJECT STRING==",
										"diaMessage.onAccept();",
										"diaMessage.close();",
										""
									],
									"translation": []
								}
							],
							"data": []
						},
						{
							"fieldNo": "779e5eb8-62ca-4ab3-9922-b0bb5b511530",
							"fieldName": "declineMessage",
							"fieldParent": "2af20b8c-2c59-4dc5-e76a-6871398cb8b1",
							"fieldType": "sap.m.Button",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "press",
									"grouping": "Events",
									"value": "Anonymous Function",
									"script": [
										"==OBJECT STRING==",
										"diaMessage.onDecline();",
										"diaMessage.close();",
										""
									],
									"translation": []
								}
							],
							"data": []
						},
						{
							"fieldNo": "91e402f0-f199-4718-9c64-1aa4fb1fecb3",
							"fieldName": "diaMessage",
							"fieldParent": "2af20b8c-2c59-4dc5-e76a-6871398cb8b1",
							"fieldType": "sap.m.Dialog",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "verticalScrolling",
									"grouping": "Properties",
									"value": "false",
									"script": "",
									"translation": []
								},
								{
									"attribute": "styleClassPadding",
									"grouping": "Properties",
									"value": "sapUiNoContentPadding",
									"script": "",
									"translation": []
								},
								{
									"attribute": "styleClassMargin",
									"grouping": "Properties",
									"value": "sapUiNoMargin",
									"script": "",
									"translation": []
								},
								{
									"attribute": "styleClass",
									"grouping": "Properties",
									"value": "nepDialogWithObjHeader",
									"script": "",
									"translation": []
								},
								{
									"attribute": "draggable",
									"grouping": "Properties",
									"value": "true",
									"script": "",
									"translation": []
								},
								{
									"attribute": "contentWidth",
									"grouping": "Properties",
									"value": "400px",
									"script": "",
									"translation": []
								},
								{
									"attribute": "afterClose",
									"grouping": "Events",
									"value": "Anonymous Function",
									"script": [
										"==OBJECT STRING==",
										"this.onClose();",
										"diaMessage.setEndButton();",
										"diaMessage.setBeginButton();"
									],
									"translation": []
								}
							],
							"data": [
								{
									"fieldNo": "4beb5f2b-cf05-40ca-a832-0b774659b2c4",
									"fieldName": "headerMessage",
									"fieldParent": "91e402f0-f199-4718-9c64-1aa4fb1fecb3",
									"fieldType": "sap.m.Bar",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "styleClass",
											"grouping": "Properties",
											"value": "sapContrast sapContrastPlus",
											"script": "",
											"translation": []
										},
										{
											"attribute": "design",
											"grouping": "Properties",
											"value": "Footer",
											"script": "",
											"translation": []
										},
										{
											"attribute": "position",
											"grouping": "Parent",
											"value": "setCustomHeader",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "1e47af90-b9ce-4bd2-e8a9-97f7e14ae45f",
											"fieldName": "Right",
											"fieldParent": "4beb5f2b-cf05-40ca-a832-0b774659b2c4",
											"fieldType": "neptune.BarContent",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "position",
													"grouping": "Parent",
													"value": "ContentRight",
													"script": "",
													"translation": []
												}
											],
											"data": [
												{
													"fieldNo": "0276adfc-5a99-4df1-e761-e477cacc8844",
													"fieldName": "closeMessage",
													"fieldParent": "1e47af90-b9ce-4bd2-e8a9-97f7e14ae45f",
													"fieldType": "sap.m.Button",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "styleClass",
															"grouping": "Properties",
															"value": "nepCloseBtn",
															"script": "",
															"translation": []
														},
														{
															"attribute": "icon",
															"grouping": "Properties",
															"value": "sap-icon://decline",
															"script": "",
															"translation": []
														},
														{
															"attribute": "press",
															"grouping": "Events",
															"value": "diaMessage.close();",
															"script": "diaMessage.close();",
															"translation": []
														}
													],
													"data": []
												}
											]
										}
									]
								},
								{
									"fieldNo": "5506d217-6e59-4ca5-acd5-34c32b803b5e",
									"fieldName": "objHeaderMessage",
									"fieldParent": "91e402f0-f199-4718-9c64-1aa4fb1fecb3",
									"fieldType": "sap.m.ObjectHeader",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "responsive",
											"grouping": "Properties",
											"value": "true",
											"script": "",
											"translation": []
										},
										{
											"attribute": "numberUnit",
											"grouping": "Properties",
											"value": "ENTRIES",
											"script": "",
											"translation": []
										}
									],
									"data": []
								},
								{
									"fieldNo": "dca1a48c-3d7b-4080-840c-dc2e6eeba479",
									"fieldName": "layoutMessage",
									"fieldParent": "91e402f0-f199-4718-9c64-1aa4fb1fecb3",
									"fieldType": "sap.m.VBox",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "styleClassMargin",
											"grouping": "Properties",
											"value": "sapUiMediumMargin",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "2464fbe9-df2f-40e6-8606-845d3ae2c9ce",
											"fieldName": "txtMessage1",
											"fieldParent": "dca1a48c-3d7b-4080-840c-dc2e6eeba479",
											"fieldType": "sap.m.Text",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [],
											"data": []
										},
										{
											"fieldNo": "2992d5c5-4692-426d-b406-19a3446863bd",
											"fieldName": "txtMessage2",
											"fieldParent": "dca1a48c-3d7b-4080-840c-dc2e6eeba479",
											"fieldType": "sap.m.Text",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [],
											"data": []
										},
										{
											"fieldNo": "bca46468-acd4-4bcc-cb60-7ed4735ab2a5",
											"fieldName": "txtMessage3",
											"fieldParent": "dca1a48c-3d7b-4080-840c-dc2e6eeba479",
											"fieldType": "sap.m.Text",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [],
											"data": []
										}
									]
								}
							]
						},
						{
							"fieldNo": "90c0c787-bfda-4b6b-878d-82f80209f941",
							"fieldName": "butSupportedBrowsersClose",
							"fieldParent": "2af20b8c-2c59-4dc5-e76a-6871398cb8b1",
							"fieldType": "sap.m.Button",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "icon",
									"grouping": "Properties",
									"value": "sap-icon://sys-cancel",
									"script": "",
									"translation": []
								},
								{
									"attribute": "press",
									"grouping": "Events",
									"value": "popSupportedBrowsers.close();",
									"script": "popSupportedBrowsers.close();",
									"translation": []
								}
							],
							"data": []
						},
						{
							"fieldNo": "157cb86d-df52-49bc-be84-1bea786f6c9a",
							"fieldName": "diaText",
							"fieldParent": "2af20b8c-2c59-4dc5-e76a-6871398cb8b1",
							"fieldType": "sap.m.Dialog",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "verticalScrolling",
									"grouping": "Properties",
									"value": "false",
									"script": "",
									"translation": []
								},
								{
									"attribute": "styleClass",
									"grouping": "Properties",
									"value": "nepDialogWithObjHeader",
									"script": "",
									"translation": []
								},
								{
									"attribute": "draggable",
									"grouping": "Properties",
									"value": "true",
									"script": "",
									"translation": []
								},
								{
									"attribute": "contentWidth",
									"grouping": "Properties",
									"value": "1280px",
									"script": "",
									"translation": []
								},
								{
									"attribute": "contentHeight",
									"grouping": "Properties",
									"value": "880px",
									"script": "",
									"translation": []
								}
							],
							"data": [
								{
									"fieldNo": "06e87d3e-373d-428a-bae2-3496a61ffdb5",
									"fieldName": "headerText",
									"fieldParent": "157cb86d-df52-49bc-be84-1bea786f6c9a",
									"fieldType": "sap.m.Bar",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "styleClass",
											"grouping": "Properties",
											"value": "sapContrast sapContrastPlus",
											"script": "",
											"translation": []
										},
										{
											"attribute": "design",
											"grouping": "Properties",
											"value": "Footer",
											"script": "",
											"translation": []
										},
										{
											"attribute": "position",
											"grouping": "Parent",
											"value": "setCustomHeader",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "9c2f348d-a3b8-4bb0-b0b0-67fe6f484eac",
											"fieldName": "Right",
											"fieldParent": "06e87d3e-373d-428a-bae2-3496a61ffdb5",
											"fieldType": "neptune.BarContent",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "position",
													"grouping": "Parent",
													"value": "ContentRight",
													"script": "",
													"translation": []
												}
											],
											"data": [
												{
													"fieldNo": "88b20027-eded-4c72-8aac-821a7a865b56",
													"fieldName": "closeText",
													"fieldParent": "9c2f348d-a3b8-4bb0-b0b0-67fe6f484eac",
													"fieldType": "sap.m.Button",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "styleClass",
															"grouping": "Properties",
															"value": "nepCloseBtn",
															"script": "",
															"translation": []
														},
														{
															"attribute": "icon",
															"grouping": "Properties",
															"value": "sap-icon://decline",
															"script": "",
															"translation": []
														},
														{
															"attribute": "press",
															"grouping": "Events",
															"value": "this.getParent().getParent().close();",
															"script": "this.getParent().getParent().close();",
															"translation": []
														}
													],
													"data": []
												}
											]
										}
									]
								},
								{
									"fieldNo": "782ce653-fa1e-46cd-fb80-778e2fc70f0b",
									"fieldName": "AppCacheText",
									"fieldParent": "157cb86d-df52-49bc-be84-1bea786f6c9a",
									"fieldType": "sap.m.ObjectHeader",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "responsive",
											"grouping": "Properties",
											"value": "true",
											"script": "",
											"translation": []
										},
										{
											"attribute": "numberUnit",
											"grouping": "Properties",
											"value": "ENTRIES",
											"script": "",
											"translation": []
										},
										{
											"attribute": "icon",
											"grouping": "Properties",
											"value": "sap-icon://document-text",
											"script": "",
											"translation": []
										}
									],
									"data": []
								},
								{
									"fieldNo": "d4c2534c-750b-4a9b-93d8-47f824810f25",
									"fieldName": "scrollText",
									"fieldParent": "157cb86d-df52-49bc-be84-1bea786f6c9a",
									"fieldType": "sap.m.ScrollContainer",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "width",
											"grouping": "Properties",
											"value": "100%",
											"script": "",
											"translation": []
										},
										{
											"attribute": "vertical",
											"grouping": "Properties",
											"value": "true",
											"script": "",
											"translation": []
										},
										{
											"attribute": "horizontal",
											"grouping": "Properties",
											"value": "false",
											"script": "",
											"translation": []
										},
										{
											"attribute": "height",
											"grouping": "Properties",
											"value": "100%",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "af9030a1-36d9-479e-eb41-eeb933380418",
											"fieldName": "panText",
											"fieldParent": "d4c2534c-750b-4a9b-93d8-47f824810f25",
											"fieldType": "sap.m.Panel",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "height",
													"grouping": "Properties",
													"value": "100%",
													"script": "",
													"translation": []
												}
											],
											"data": [
												{
													"fieldNo": "26f78f29-90c8-4a78-9321-eb3764235563",
													"fieldName": "oHTMLText",
													"fieldParent": "af9030a1-36d9-479e-eb41-eeb933380418",
													"fieldType": "sap.ui.core.HTML",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [],
													"data": [
														{
															"fieldNo": "04d00d2f-4953-4d70-ad39-e76a416e14e9",
															"fieldName": "oHTML1",
															"fieldParent": "26f78f29-90c8-4a78-9321-eb3764235563",
															"fieldType": "neptune.Html",
															"script": "<div id=\"textDiv\" style=\"height:777px;width:100%\"></div>",
															"request": [],
															"response": [],
															"attributes": [],
															"data": []
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"fieldNo": "9b84d528-14aa-4552-d9a6-75badb2ec62e",
							"fieldName": "AppCacheDiaHashClose",
							"fieldParent": "2af20b8c-2c59-4dc5-e76a-6871398cb8b1",
							"fieldType": "sap.m.Button",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "OK",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "OK"
										},
										{
											"language": "ZH",
											"value": "好"
										},
										{
											"language": "DA",
											"value": "Okay"
										},
										{
											"language": "NL",
											"value": "OK"
										},
										{
											"language": "FI",
											"value": "kunnossa"
										},
										{
											"language": "IT",
											"value": "ok"
										},
										{
											"language": "PL",
											"value": "dobrze"
										},
										{
											"language": "PT",
											"value": "OK"
										},
										{
											"language": "ES",
											"value": "DE ACUERDO"
										},
										{
											"language": "SV",
											"value": "ok"
										},
										{
											"language": "FR",
											"value": "D'accord"
										},
										{
											"language": "NO",
											"value": "OK"
										},
										{
											"language": "DE",
											"value": "OK"
										},
										{
											"language": "EN",
											"value": "OK"
										}
									]
								},
								{
									"attribute": "press",
									"grouping": "Events",
									"value": "AppCacheDiaHash.close();",
									"script": "AppCacheDiaHash.close();",
									"translation": []
								}
							],
							"data": []
						},
						{
							"fieldNo": "64a6adbf-1e95-4d3b-e15f-cad8a8b9cfed",
							"fieldName": "AppCacheDiaHash",
							"fieldParent": "2af20b8c-2c59-4dc5-e76a-6871398cb8b1",
							"fieldType": "sap.m.Dialog",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "type",
									"grouping": "Properties",
									"value": "Message",
									"script": "",
									"translation": []
								},
								{
									"attribute": "title",
									"grouping": "Properties",
									"value": "Error",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "エラー"
										},
										{
											"language": "ZH",
											"value": "错误"
										},
										{
											"language": "DA",
											"value": "Fejl"
										},
										{
											"language": "NL",
											"value": "Fout"
										},
										{
											"language": "FI",
											"value": "Virhe"
										},
										{
											"language": "IT",
											"value": "Errore"
										},
										{
											"language": "PL",
											"value": "Błąd"
										},
										{
											"language": "PT",
											"value": "Erro"
										},
										{
											"language": "ES",
											"value": "Error"
										},
										{
											"language": "SV",
											"value": "Fel"
										},
										{
											"language": "FR",
											"value": "Erreur"
										},
										{
											"language": "NO",
											"value": "Feil"
										},
										{
											"language": "DE",
											"value": "Fehler"
										},
										{
											"language": "EN",
											"value": "Error"
										}
									]
								},
								{
									"attribute": "state",
									"grouping": "Properties",
									"value": "Error",
									"script": "",
									"translation": []
								},
								{
									"attribute": "icon",
									"grouping": "Properties",
									"value": "sap-icon://error",
									"script": "",
									"translation": []
								},
								{
									"attribute": "endButton",
									"grouping": "Associations",
									"value": "AppCacheDiaHashClose",
									"script": "",
									"translation": []
								}
							],
							"data": [
								{
									"fieldNo": "bb1dd148-228d-4d90-f4d7-80f188bfc7fb",
									"fieldName": "AppCacheDiaHashText",
									"fieldParent": "64a6adbf-1e95-4d3b-e15f-cad8a8b9cfed",
									"fieldType": "sap.m.Text",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "text",
											"grouping": "Properties",
											"value": "Could not open app. Try again later.",
											"script": "",
											"translation": [
												{
													"language": "JA",
													"value": "アプリを開けませんでした。あとでもう一度試してみてください。"
												},
												{
													"language": "ZH",
													"value": "无法打开应用。稍后再试。"
												},
												{
													"language": "DA",
													"value": "Kunne ikke åbne app. Prøv igen senere."
												},
												{
													"language": "NL",
													"value": "Kan app niet openen. Probeer het later opnieuw."
												},
												{
													"language": "FI",
													"value": "Sovellusta ei voitu avata. Yritä myöhemmin uudelleen."
												},
												{
													"language": "IT",
													"value": "Impossibile aprire l'app. Riprovare più tardi."
												},
												{
													"language": "PL",
													"value": "Nie udało się otworzyć aplikacji. Spróbuj ponownie później."
												},
												{
													"language": "PT",
													"value": "Não foi possível abrir o aplicativo. Tente mais tarde."
												},
												{
													"language": "ES",
													"value": "No se pudo abrir la aplicación. Inténtalo de nuevo más tarde."
												},
												{
													"language": "SV",
													"value": "Det gick inte att öppna appen. Försök igen senare."
												},
												{
													"language": "FR",
													"value": "Impossible d'ouvrir l'application. Réessayez plus tard."
												},
												{
													"language": "NO",
													"value": "Kunne ikke åpne appen. Prøv igjen senere."
												},
												{
													"language": "DE",
													"value": "App konnte nicht geöffnet werden. Bitte später erneut versuchen."
												},
												{
													"language": "EN",
													"value": "Could not open app. Try again later."
												}
											]
										}
									],
									"data": []
								}
							]
						},
						{
							"fieldNo": "d58f3ebb-c76a-47f6-81a3-caf3344a0499",
							"fieldName": "AppCacheDiaSettingsClose",
							"fieldParent": "2af20b8c-2c59-4dc5-e76a-6871398cb8b1",
							"fieldType": "sap.m.Button",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "type",
									"grouping": "Properties",
									"value": "Transparent",
									"script": "",
									"translation": []
								},
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "OK",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "保存する"
										},
										{
											"language": "ZH",
											"value": "保存"
										},
										{
											"language": "DA",
											"value": "Gemme"
										},
										{
											"language": "NL",
											"value": "Opslaan"
										},
										{
											"language": "FI",
											"value": "Tallentaa"
										},
										{
											"language": "IT",
											"value": "Salvare"
										},
										{
											"language": "PL",
											"value": "dobrze"
										},
										{
											"language": "PT",
											"value": "Gravar"
										},
										{
											"language": "ES",
											"value": "Salvar"
										},
										{
											"language": "SV",
											"value": "Spara"
										},
										{
											"language": "FR",
											"value": "sauvegarder"
										},
										{
											"language": "NO",
											"value": "OK"
										},
										{
											"language": "DE",
											"value": "Speichern"
										},
										{
											"language": "EN",
											"value": "OK"
										}
									]
								},
								{
									"attribute": "press",
									"grouping": "Events",
									"value": "Anonymous Function",
									"script": [
										"==OBJECT STRING==",
										"AppCacheDiaSettings.close();\r",
										"sap.n.Launchpad.settingsMenuClose();\r",
										""
									],
									"translation": []
								}
							],
							"data": []
						},
						{
							"fieldNo": "d7b184b4-e7dd-439e-b537-e49ec02ea037",
							"fieldName": "AppCacheDiaSettings",
							"fieldParent": "2af20b8c-2c59-4dc5-e76a-6871398cb8b1",
							"fieldType": "sap.m.Dialog",
							"script": "",
							"bindingValue": "Generic Object",
							"bindingType": "u",
							"bindingSource": "P9",
							"bindingParentID": "f29e36cc-4c43-43e7-a1be-548815b92676",
							"bindingPathID": "4eebeb7d-8d21-4200-fd75-b99170d28ff5",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "verticalScrolling",
									"grouping": "Properties",
									"value": "false",
									"script": "",
									"translation": []
								},
								{
									"attribute": "styleClassPadding",
									"grouping": "Properties",
									"value": "sapUiNoContentPadding",
									"script": "",
									"translation": []
								},
								{
									"attribute": "styleClass",
									"grouping": "Properties",
									"value": "nepSettings nepDialogWithObjHeader",
									"script": "",
									"translation": []
								},
								{
									"attribute": "draggable",
									"grouping": "Properties",
									"value": "true",
									"script": "",
									"translation": []
								},
								{
									"attribute": "contentWidth",
									"grouping": "Properties",
									"value": "600px",
									"script": "",
									"translation": []
								},
								{
									"attribute": "contentHeight",
									"grouping": "Properties",
									"value": "680px",
									"script": "",
									"translation": []
								},
								{
									"attribute": "setEnableCache",
									"grouping": "Model",
									"value": "true",
									"script": "",
									"translation": []
								},
								{
									"attribute": "setCacheUserBased",
									"grouping": "Model",
									"value": "true",
									"script": "",
									"translation": []
								},
								{
									"attribute": "setCacheType",
									"grouping": "Model",
									"value": "LocalStorage",
									"script": "",
									"translation": []
								},
								{
									"attribute": "cacheInitLoadFinished",
									"grouping": "Events",
									"value": "sap.n.Launchpad.applyUserTheme();",
									"script": "sap.n.Launchpad.applyUserTheme();",
									"translation": []
								},
								{
									"attribute": "endButton",
									"grouping": "Associations",
									"value": "AppCacheDiaSettingsClose",
									"script": "",
									"translation": []
								}
							],
							"data": [
								{
									"fieldNo": "90ab8b1c-323d-47fb-94b6-12320e066424",
									"fieldName": "headerSettings",
									"fieldParent": "d7b184b4-e7dd-439e-b537-e49ec02ea037",
									"fieldType": "sap.m.Bar",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "styleClass",
											"grouping": "Properties",
											"value": "sapContrast sapContrastPlus",
											"script": "",
											"translation": []
										},
										{
											"attribute": "design",
											"grouping": "Properties",
											"value": "Footer",
											"script": "",
											"translation": []
										},
										{
											"attribute": "position",
											"grouping": "Parent",
											"value": "setCustomHeader",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "becaa6f9-945c-4dcf-a858-6de43edf4528",
											"fieldName": "Right",
											"fieldParent": "90ab8b1c-323d-47fb-94b6-12320e066424",
											"fieldType": "neptune.BarContent",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "position",
													"grouping": "Parent",
													"value": "ContentRight",
													"script": "",
													"translation": []
												}
											],
											"data": [
												{
													"fieldNo": "9527d20a-46b4-4225-c6d1-b40457afe2ba",
													"fieldName": "closeSettings",
													"fieldParent": "becaa6f9-945c-4dcf-a858-6de43edf4528",
													"fieldType": "sap.m.Button",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "styleClass",
															"grouping": "Properties",
															"value": "nepCloseBtn",
															"script": "",
															"translation": []
														},
														{
															"attribute": "icon",
															"grouping": "Properties",
															"value": "sap-icon://decline",
															"script": "",
															"translation": []
														},
														{
															"attribute": "press",
															"grouping": "Events",
															"value": "Anonymous Function",
															"script": [
																"==OBJECT STRING==",
																"this.getParent().getParent().close();\r",
																"sap.n.Launchpad.settingsMenuClose();"
															],
															"translation": []
														}
													],
													"data": []
												}
											]
										}
									]
								},
								{
									"fieldNo": "0a770fa8-5a7f-43ae-b613-fb80b968cf6c",
									"fieldName": "AppCacheSettingsUser",
									"fieldParent": "d7b184b4-e7dd-439e-b537-e49ec02ea037",
									"fieldType": "sap.m.ObjectHeader",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "responsive",
											"grouping": "Properties",
											"value": "true",
											"script": "",
											"translation": []
										},
										{
											"attribute": "numberUnit",
											"grouping": "Properties",
											"value": "ENTRIES",
											"script": "",
											"translation": []
										},
										{
											"attribute": "icon",
											"grouping": "Properties",
											"value": "sap-icon://fa-solid/user-circle",
											"script": "",
											"translation": []
										}
									],
									"data": []
								},
								{
									"fieldNo": "f833ec93-7c71-4aa9-bbbb-363e1ada5201",
									"fieldName": "barSettings",
									"fieldParent": "d7b184b4-e7dd-439e-b537-e49ec02ea037",
									"fieldType": "sap.m.IconTabBar",
									"script": "",
									"request": [],
									"response": [],
									"attributes": [
										{
											"attribute": "expandable",
											"grouping": "Properties",
											"value": "false",
											"script": "",
											"translation": []
										},
										{
											"attribute": "backgroundDesign",
											"grouping": "Properties",
											"value": "Transparent",
											"script": "",
											"translation": []
										},
										{
											"attribute": "applyContentPadding",
											"grouping": "Properties",
											"value": "false",
											"script": "",
											"translation": []
										}
									],
									"data": [
										{
											"fieldNo": "6fc9357b-b771-4ce8-9470-fe6ca5cfabf4",
											"fieldName": "barSettingsGeneral",
											"fieldParent": "f833ec93-7c71-4aa9-bbbb-363e1ada5201",
											"fieldType": "sap.m.IconTabFilter",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "text",
													"grouping": "Properties",
													"value": "SETTINGS",
													"script": "",
													"translation": [
														{
															"language": "JA",
															"value": "設定"
														},
														{
															"language": "ZH",
															"value": "设置"
														},
														{
															"language": "DA",
															"value": "INDSTILLINGER"
														},
														{
															"language": "NL",
															"value": "INSTELLINGEN"
														},
														{
															"language": "FI",
															"value": "ASETUKSET"
														},
														{
															"language": "IT",
															"value": "IMPOSTAZIONI"
														},
														{
															"language": "PL",
															"value": "USTAWIENIA"
														},
														{
															"language": "PT",
															"value": "DEFINIÇÕES"
														},
														{
															"language": "ES",
															"value": "AJUSTES"
														},
														{
															"language": "SV",
															"value": "INSTÄLLNINGAR"
														},
														{
															"language": "FR",
															"value": "RÉGLAGES"
														},
														{
															"language": "NO",
															"value": "INNSTILLINGER"
														},
														{
															"language": "DE",
															"value": "EINSTELLUNGEN"
														},
														{
															"language": "EN",
															"value": "SETTINGS"
														}
													]
												}
											],
											"data": [
												{
													"fieldNo": "d672672d-161f-46b5-8f02-093873ac3388",
													"fieldName": "scrollSettings",
													"fieldParent": "6fc9357b-b771-4ce8-9470-fe6ca5cfabf4",
													"fieldType": "sap.m.ScrollContainer",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "width",
															"grouping": "Properties",
															"value": "100%",
															"script": "",
															"translation": []
														},
														{
															"attribute": "vertical",
															"grouping": "Properties",
															"value": "true",
															"script": "",
															"translation": []
														},
														{
															"attribute": "horizontal",
															"grouping": "Properties",
															"value": "false",
															"script": "",
															"translation": []
														},
														{
															"attribute": "height",
															"grouping": "Properties",
															"value": "100%",
															"script": "",
															"translation": []
														}
													],
													"data": [
														{
															"fieldNo": "fe121fb3-fed8-4e24-c4b7-9dbecc6bd4d8",
															"fieldName": "AppCacheFormSettings",
															"fieldParent": "d672672d-161f-46b5-8f02-093873ac3388",
															"fieldType": "sap.ui.layout.form.SimpleForm",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "maxContainerCols",
																	"grouping": "Properties",
																	"value": "1",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "layout",
																	"grouping": "Properties",
																	"value": "ResponsiveGridLayout",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "labelSpanS",
																	"grouping": "Properties",
																	"value": "4",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "labelSpanM",
																	"grouping": "Properties",
																	"value": "4",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "editable",
																	"grouping": "Properties",
																	"value": "true",
																	"script": "",
																	"translation": []
																}
															],
															"data": [
																{
																	"fieldNo": "c4b737bf-e743-4138-dde9-e28104862f34",
																	"fieldName": "lblAppCacheFormSettingsLang",
																	"fieldParent": "fe121fb3-fed8-4e24-c4b7-9dbecc6bd4d8",
																	"fieldType": "sap.m.Label",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "text",
																			"grouping": "Properties",
																			"value": "Language",
																			"script": "",
																			"translation": [
																				{
																					"language": "JA",
																					"value": "言語"
																				},
																				{
																					"language": "ZH",
																					"value": "语言"
																				},
																				{
																					"language": "DA",
																					"value": "Sprog"
																				},
																				{
																					"language": "NL",
																					"value": "Taal"
																				},
																				{
																					"language": "FI",
																					"value": "Kieli"
																				},
																				{
																					"language": "IT",
																					"value": "linguaggio"
																				},
																				{
																					"language": "PL",
																					"value": "Język"
																				},
																				{
																					"language": "PT",
																					"value": "Língua"
																				},
																				{
																					"language": "ES",
																					"value": "Idioma"
																				},
																				{
																					"language": "SV",
																					"value": "Språk"
																				},
																				{
																					"language": "FR",
																					"value": "La langue"
																				},
																				{
																					"language": "NO",
																					"value": "Språk"
																				},
																				{
																					"language": "DE",
																					"value": "Sprache"
																				},
																				{
																					"language": "EN",
																					"value": "Language"
																				}
																			]
																		}
																	],
																	"data": []
																},
																{
																	"fieldNo": "71531019-0b3c-4acb-b78e-6a7fe4d359f3",
																	"fieldName": "inAppCacheFormSettingsLang",
																	"fieldParent": "fe121fb3-fed8-4e24-c4b7-9dbecc6bd4d8",
																	"fieldType": "sap.m.Select",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "visible",
																			"grouping": "Properties",
																			"value": "false",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "change",
																			"grouping": "Events",
																			"value": "Anonymous Function",
																			"script": [
																				"==OBJECT STRING==",
																				"let language = '';\r",
																				"if (!inAppCacheFormSettingsLang.getSelectedKey()) {\r",
																				"    language = 'EN';\r",
																				"} else {\r",
																				"    language = inAppCacheFormSettingsLang.getSelectedKey();\r",
																				"}\r",
																				"\r",
																				"// Update User \r",
																				"AppCache.userInfo.language = language;\r",
																				"ModelData.Update(AppCacheUsers, 'username', AppCache.userInfo.username, AppCache.userInfo);\r",
																				"setCacheAppCacheUsers();\r",
																				"\r",
																				"sap.n.Planet9.function({\r",
																				"    id: dataSet,\r",
																				"    method: 'UpdateUserDetails',\r",
																				"    data: {\r",
																				"        language: language\r",
																				"    },\r",
																				"    success: function (data) {\r",
																				"        if (!AppCache.isMobile) {\r",
																				"            location.reload();\r",
																				"        } else {\r",
																				"            AppCache.translate(language);\r",
																				"            sap.n.Launchpad.RebuildTiles();\r",
																				"            sap.n.Launchpad.BuildMenuTop();\r",
																				"            sap.n.Launchpad.BuildTreeMenu();\r",
																				"        }\r",
																				"    }\r",
																				"});"
																			],
																			"translation": []
																		}
																	],
																	"data": []
																},
																{
																	"fieldNo": "ebe5e21a-b0ac-4d56-e912-035653af9ff9",
																	"fieldName": "lblAppCacheFormSettingsTRAN",
																	"fieldParent": "fe121fb3-fed8-4e24-c4b7-9dbecc6bd4d8",
																	"fieldType": "sap.m.Label",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "text",
																			"grouping": "Properties",
																			"value": "Transitions",
																			"script": "",
																			"translation": [
																				{
																					"language": "JA",
																					"value": "トランジション"
																				},
																				{
																					"language": "ZH",
																					"value": "转变"
																				},
																				{
																					"language": "DA",
																					"value": "Overgange"
																				},
																				{
																					"language": "NL",
																					"value": "Transitions"
																				},
																				{
																					"language": "FI",
																					"value": "siirtymät"
																				},
																				{
																					"language": "IT",
																					"value": "transizioni"
																				},
																				{
																					"language": "PL",
																					"value": "Przejścia"
																				},
																				{
																					"language": "PT",
																					"value": "Transições"
																				},
																				{
																					"language": "ES",
																					"value": "Transiciones"
																				},
																				{
																					"language": "SV",
																					"value": "övergångar"
																				},
																				{
																					"language": "FR",
																					"value": "Les transitions"
																				},
																				{
																					"language": "NO",
																					"value": "Overganger"
																				},
																				{
																					"language": "DE",
																					"value": "Übergänge"
																				},
																				{
																					"language": "EN",
																					"value": "Transitions"
																				}
																			]
																		}
																	],
																	"data": []
																},
																{
																	"fieldNo": "92969d04-c2dc-4ff8-c2b0-4b82e716b9c9",
																	"fieldName": "inAppCacheFormSettingsTRAN",
																	"fieldParent": "fe121fb3-fed8-4e24-c4b7-9dbecc6bd4d8",
																	"fieldType": "sap.m.Select",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "selectedKey",
																			"grouping": "Properties",
																			"value": "{/TRANSITION}",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "change",
																			"grouping": "Events",
																			"value": "setCacheAppCacheDiaSettings();",
																			"script": "setCacheAppCacheDiaSettings();",
																			"translation": []
																		}
																	],
																	"data": [
																		{
																			"fieldNo": "ca418f6f-f2a0-43b0-d7a8-a66fe176624c",
																			"fieldName": "transitionMainNone",
																			"fieldParent": "92969d04-c2dc-4ff8-c2b0-4b82e716b9c9",
																			"fieldType": "sap.ui.core.Item",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "text",
																					"grouping": "Properties",
																					"value": "Default",
																					"script": "",
																					"translation": [
																						{
																							"language": "JA",
																							"value": "デフォルト"
																						},
																						{
																							"language": "ZH",
																							"value": "默认"
																						},
																						{
																							"language": "DA",
																							"value": "Standard"
																						},
																						{
																							"language": "NL",
																							"value": "Standaard"
																						},
																						{
																							"language": "FI",
																							"value": "oletusarvo"
																						},
																						{
																							"language": "IT",
																							"value": "Predefinito"
																						},
																						{
																							"language": "PL",
																							"value": "Domyślna"
																						},
																						{
																							"language": "PT",
																							"value": "Por Defeito"
																						},
																						{
																							"language": "ES",
																							"value": "Defecto"
																						},
																						{
																							"language": "SV",
																							"value": "Standard"
																						},
																						{
																							"language": "FR",
																							"value": "Défaut"
																						},
																						{
																							"language": "NO",
																							"value": "Standard"
																						},
																						{
																							"language": "DE",
																							"value": "Standard"
																						},
																						{
																							"language": "EN",
																							"value": "Default"
																						}
																					]
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "bc968e47-d965-4440-c9c5-783fe5ab6338",
																			"fieldName": "transitionMainDoor",
																			"fieldParent": "92969d04-c2dc-4ff8-c2b0-4b82e716b9c9",
																			"fieldType": "sap.ui.core.Item",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "text",
																					"grouping": "Properties",
																					"value": "Door",
																					"script": "",
																					"translation": [
																						{
																							"language": "JA",
																							"value": "によって"
																						},
																						{
																							"language": "ZH",
																							"value": "由"
																						},
																						{
																							"language": "PL",
																							"value": "Przez"
																						},
																						{
																							"language": "PT",
																							"value": "Porta"
																						}
																					]
																				},
																				{
																					"attribute": "key",
																					"grouping": "Properties",
																					"value": "door",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "e7d3622b-8a7a-4d2b-b54b-44245cb60b7a",
																			"fieldName": "transitionMainFade",
																			"fieldParent": "92969d04-c2dc-4ff8-c2b0-4b82e716b9c9",
																			"fieldType": "sap.ui.core.Item",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "text",
																					"grouping": "Properties",
																					"value": "Fade",
																					"script": "",
																					"translation": [
																						{
																							"language": "JA",
																							"value": "フェード"
																						},
																						{
																							"language": "ZH",
																							"value": "褪色"
																						},
																						{
																							"language": "PL",
																							"value": "Blaknąć"
																						},
																						{
																							"language": "PT",
																							"value": "Fade"
																						}
																					]
																				},
																				{
																					"attribute": "key",
																					"grouping": "Properties",
																					"value": "fade",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "45edee8f-1d61-4340-b9a4-f2adf1ed9634",
																			"fieldName": "transitionMainFlip",
																			"fieldParent": "92969d04-c2dc-4ff8-c2b0-4b82e716b9c9",
																			"fieldType": "sap.ui.core.Item",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "text",
																					"grouping": "Properties",
																					"value": "Flip",
																					"script": "",
																					"translation": [
																						{
																							"language": "JA",
																							"value": "反転する"
																						},
																						{
																							"language": "ZH",
																							"value": "翻动"
																						},
																						{
																							"language": "PL",
																							"value": "Trzepnięcie"
																						},
																						{
																							"language": "PT",
																							"value": "Girar"
																						}
																					]
																				},
																				{
																					"attribute": "key",
																					"grouping": "Properties",
																					"value": "flip",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "3f729b29-4263-4cde-c618-8b1d5683a853",
																			"fieldName": "transitionMainSlide",
																			"fieldParent": "92969d04-c2dc-4ff8-c2b0-4b82e716b9c9",
																			"fieldType": "sap.ui.core.Item",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "text",
																					"grouping": "Properties",
																					"value": "Slide",
																					"script": "",
																					"translation": [
																						{
																							"language": "JA",
																							"value": "滑り台"
																						},
																						{
																							"language": "ZH",
																							"value": "滑动"
																						},
																						{
																							"language": "PL",
																							"value": "Ślizgać się"
																						},
																						{
																							"language": "PT",
																							"value": "Deslizar"
																						}
																					]
																				},
																				{
																					"attribute": "key",
																					"grouping": "Properties",
																					"value": "slide",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		}
																	]
																},
																{
																	"fieldNo": "8f2a2ece-b7fa-4957-9471-9d5c1b7129c1",
																	"fieldName": "lblAppCacheFormSettingsTHEME",
																	"fieldParent": "fe121fb3-fed8-4e24-c4b7-9dbecc6bd4d8",
																	"fieldType": "sap.m.Label",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "text",
																			"grouping": "Properties",
																			"value": "Layout",
																			"script": "",
																			"translation": [
																				{
																					"language": "JA",
																					"value": "テーマ"
																				},
																				{
																					"language": "ZH",
																					"value": "主题"
																				},
																				{
																					"language": "DA",
																					"value": "Tema"
																				},
																				{
																					"language": "NL",
																					"value": "Thema"
																				},
																				{
																					"language": "FI",
																					"value": "Teema"
																				},
																				{
																					"language": "IT",
																					"value": "Tema"
																				},
																				{
																					"language": "PL",
																					"value": "Układ"
																				},
																				{
																					"language": "PT",
																					"value": "Tema"
																				},
																				{
																					"language": "ES",
																					"value": "Tema"
																				},
																				{
																					"language": "SV",
																					"value": "Tema"
																				},
																				{
																					"language": "FR",
																					"value": "Thème"
																				},
																				{
																					"language": "NO",
																					"value": "Tema"
																				},
																				{
																					"language": "DE",
																					"value": "Theme"
																				},
																				{
																					"language": "EN",
																					"value": "Layout"
																				}
																			]
																		}
																	],
																	"data": []
																},
																{
																	"fieldNo": "2a7f5668-f5ec-4010-efe5-c5b131d78aab",
																	"fieldName": "inAppCacheFormSettingsTHEME",
																	"fieldParent": "fe121fb3-fed8-4e24-c4b7-9dbecc6bd4d8",
																	"fieldType": "sap.m.Select",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "width",
																			"grouping": "Properties",
																			"value": "100%",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "visible",
																			"grouping": "Properties",
																			"value": "false",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "selectedKey",
																			"grouping": "Properties",
																			"value": "{/userTheme}",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "change",
																			"grouping": "Events",
																			"value": "Anonymous Function",
																			"script": [
																				"==OBJECT STRING==",
																				"setCacheAppCacheDiaSettings();",
																				"sap.n.Launchpad.applyUserTheme();",
																				"sap.n.Launchpad.RebuildTiles();",
																				"AppCache.Home();",
																				""
																			],
																			"translation": []
																		}
																	],
																	"data": []
																},
																{
																	"fieldNo": "820943bf-f016-4cda-96c6-18c309d298ad",
																	"fieldName": "txtAppCacheFormSettingsPANEL_WIDTH",
																	"fieldParent": "fe121fb3-fed8-4e24-c4b7-9dbecc6bd4d8",
																	"fieldType": "sap.m.Label",
																	"description": "",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "visible",
																			"grouping": "Properties",
																			"value": true,
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "text",
																			"grouping": "Properties",
																			"value": "Sidepanel Width",
																			"script": "",
																			"translation": [
																				{
																					"language": "1",
																					"value": "侧板宽度"
																				},
																				{
																					"language": "D",
																					"value": "Breite der Seitenwand"
																				},
																				{
																					"language": "F",
																					"value": "Largeur du panneau latéral"
																				},
																				{
																					"language": "H",
																					"value": "Oldalsó panel szélessége"
																				},
																				{
																					"language": "K",
																					"value": "Sidepanelbredde"
																				},
																				{
																					"language": "O",
																					"value": "Sidepanelbredde"
																				},
																				{
																					"language": "P",
																					"value": "Largura do painel lateral"
																				},
																				{
																					"language": "R",
																					"value": "Ширина боковой панели"
																				},
																				{
																					"language": "S",
																					"value": "Ancho del panel lateral"
																				},
																				{
																					"language": "PL",
																					"value": "Szerokość panelu bocznego"
																				},
																				{
																					"language": "EN",
																					"value": "Sidepanel Width"
																				}
																			]
																		}
																	],
																	"data": []
																},
																{
																	"fieldNo": "005065f0-529d-4f29-eb27-d88dab892b06",
																	"fieldName": "inAppCacheFormSettingsPANEL_WIDTH",
																	"fieldParent": "fe121fb3-fed8-4e24-c4b7-9dbecc6bd4d8",
																	"fieldType": "sap.m.Select",
																	"description": "",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "visible",
																			"grouping": "Properties",
																			"value": true,
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "selectedKey",
																			"grouping": "Properties",
																			"value": "{/sidepanelWidth}",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "forceSelection",
																			"grouping": "Properties",
																			"value": true,
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "enabled",
																			"grouping": "Properties",
																			"value": true,
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "change",
																			"grouping": "Events",
																			"value": "Anonymous Function",
																			"script": [
																				"==OBJECT STRING==",
																				"setCacheAppCacheDiaSettings();",
																				"if (launchpadContentSideApp.getWidth() !== '0px') {",
																				"    let sidepanelWidth = sap.n.Launchpad.sidepanelWidth[modelAppCacheDiaSettings.oData.sidepanelWidth || 'large'];",
																				"    launchpadContentSideApp.setWidth(sidepanelWidth);",
																				"    sap.n.Launchpad.setLaunchpadContentWidth();",
																				"}"
																			],
																			"translation": []
																		}
																	],
																	"data": [
																		{
																			"fieldNo": "413fe8a8-b104-45c0-ea24-c8d9e1891f97",
																			"fieldName": "itemSIDEPANEL_WIDTHXSmall",
																			"fieldParent": "005065f0-529d-4f29-eb27-d88dab892b06",
																			"fieldType": "sap.ui.core.Item",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "text",
																					"grouping": "Properties",
																					"value": "XSmall",
																					"script": "",
																					"translation": [
																						{
																							"language": "1",
																							"value": "X小"
																						},
																						{
																							"language": "D",
																							"value": "X Klein"
																						},
																						{
																							"language": "F",
																							"value": "X petit"
																						},
																						{
																							"language": "H",
																							"value": "X kicsi"
																						},
																						{
																							"language": "K",
																							"value": "X Lille"
																						},
																						{
																							"language": "O",
																							"value": "X Small"
																						},
																						{
																							"language": "P",
																							"value": "X pequeno"
																						},
																						{
																							"language": "R",
																							"value": "X маленький"
																						},
																						{
																							"language": "S",
																							"value": "X pequeño"
																						},
																						{
																							"language": "W",
																							"value": "X Малка"
																						},
																						{
																							"language": "PL",
																							"value": "XSmall"
																						}
																					]
																				},
																				{
																					"attribute": "key",
																					"grouping": "Properties",
																					"value": "xsmall",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "enabled",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "b9de0066-c2c0-45ca-e313-a0ed0d0597a7",
																			"fieldName": "itemSIDEPANEL_WIDTHSmall",
																			"fieldParent": "005065f0-529d-4f29-eb27-d88dab892b06",
																			"fieldType": "sap.ui.core.Item",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "text",
																					"grouping": "Properties",
																					"value": "Small ",
																					"script": "",
																					"translation": [
																						{
																							"language": "1",
																							"value": "小（默认）"
																						},
																						{
																							"language": "D",
																							"value": "Klein (Standard)"
																						},
																						{
																							"language": "F",
																							"value": "Petit (par défaut)"
																						},
																						{
																							"language": "H",
																							"value": "Kicsi (alapértelmezett)"
																						},
																						{
																							"language": "K",
																							"value": "Lille (standard)"
																						},
																						{
																							"language": "O",
																							"value": "Small (Default)"
																						},
																						{
																							"language": "P",
																							"value": "Pequeno (padrão)"
																						},
																						{
																							"language": "R",
																							"value": "Маленький (по умолчанию)"
																						},
																						{
																							"language": "S",
																							"value": "Pequeño (predeterminado)"
																						},
																						{
																							"language": "W",
																							"value": "Малка (по подразбиране)"
																						},
																						{
																							"language": "PL",
																							"value": "Mały"
																						}
																					]
																				},
																				{
																					"attribute": "key",
																					"grouping": "Properties",
																					"value": "small",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "enabled",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "fbd91c91-6970-421a-911f-8211426272bc",
																			"fieldName": "itemSIDEPANEL_WIDTHMedium",
																			"fieldParent": "005065f0-529d-4f29-eb27-d88dab892b06",
																			"fieldType": "sap.ui.core.Item",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "text",
																					"grouping": "Properties",
																					"value": "Medium ",
																					"script": "",
																					"translation": [
																						{
																							"language": "1",
																							"value": "中"
																						},
																						{
																							"language": "D",
																							"value": "Mittel"
																						},
																						{
																							"language": "F",
																							"value": "Moyen"
																						},
																						{
																							"language": "H",
																							"value": "Közepes"
																						},
																						{
																							"language": "K",
																							"value": "Medium"
																						},
																						{
																							"language": "O",
																							"value": "Medium"
																						},
																						{
																							"language": "P",
																							"value": "Médio"
																						},
																						{
																							"language": "R",
																							"value": "средний"
																						},
																						{
																							"language": "S",
																							"value": "Medio"
																						},
																						{
																							"language": "W",
																							"value": "среда"
																						},
																						{
																							"language": "PL",
																							"value": "Średni"
																						}
																					]
																				},
																				{
																					"attribute": "key",
																					"grouping": "Properties",
																					"value": "medium",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "enabled",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "303373c3-cefc-4f1a-b1d0-a5e4d9a62cea",
																			"fieldName": "itemSIDEPANEL_WIDTHLarge",
																			"fieldParent": "005065f0-529d-4f29-eb27-d88dab892b06",
																			"fieldType": "sap.ui.core.Item",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "text",
																					"grouping": "Properties",
																					"value": "Large (Default)",
																					"script": "",
																					"translation": [
																						{
																							"language": "1",
																							"value": "大"
																						},
																						{
																							"language": "D",
																							"value": "Groß"
																						},
																						{
																							"language": "F",
																							"value": "Grand"
																						},
																						{
																							"language": "H",
																							"value": "Nagy"
																						},
																						{
																							"language": "K",
																							"value": "Stor"
																						},
																						{
																							"language": "O",
																							"value": "Large"
																						},
																						{
																							"language": "P",
																							"value": "Ampla"
																						},
																						{
																							"language": "R",
																							"value": "Большой"
																						},
																						{
																							"language": "S",
																							"value": "Grande"
																						},
																						{
																							"language": "W",
																							"value": "Голям"
																						},
																						{
																							"language": "PL",
																							"value": "Duży (domyślny)"
																						}
																					]
																				},
																				{
																					"attribute": "enabled",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "a31f083a-f17a-4fa3-9c9e-a4d7454d1795",
																			"fieldName": "itemSIDEPANEL_WIDTHXLarge",
																			"fieldParent": "005065f0-529d-4f29-eb27-d88dab892b06",
																			"fieldType": "sap.ui.core.Item",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "text",
																					"grouping": "Properties",
																					"value": "XLarge",
																					"script": "",
																					"translation": [
																						{
																							"language": "1",
																							"value": "X大"
																						},
																						{
																							"language": "D",
																							"value": "X groß"
																						},
																						{
																							"language": "F",
																							"value": "X grand"
																						},
																						{
																							"language": "H",
																							"value": "X nagy"
																						},
																						{
																							"language": "K",
																							"value": "X Stor"
																						},
																						{
																							"language": "O",
																							"value": "X Large"
																						},
																						{
																							"language": "P",
																							"value": "Extra grande"
																						},
																						{
																							"language": "R",
																							"value": "X Большой"
																						},
																						{
																							"language": "S",
																							"value": "X grande"
																						},
																						{
																							"language": "W",
																							"value": "X голям"
																						},
																						{
																							"language": "PL",
																							"value": "XLarge"
																						}
																					]
																				},
																				{
																					"attribute": "key",
																					"grouping": "Properties",
																					"value": "xlarge",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "enabled",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "3ba01a91-00ed-4415-8e04-0c908819c2c5",
																			"fieldName": "itemSIDEPANEL_WIDTHXXLarge",
																			"fieldParent": "005065f0-529d-4f29-eb27-d88dab892b06",
																			"fieldType": "sap.ui.core.Item",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "text",
																					"grouping": "Properties",
																					"value": "XXLarge",
																					"script": "",
																					"translation": [
																						{
																							"language": "1",
																							"value": "XX大"
																						},
																						{
																							"language": "D",
																							"value": "XX Groß"
																						},
																						{
																							"language": "F",
																							"value": "XX Grand"
																						},
																						{
																							"language": "H",
																							"value": "XX nagy"
																						},
																						{
																							"language": "K",
																							"value": "XX Stor"
																						},
																						{
																							"language": "O",
																							"value": "XX Large"
																						},
																						{
																							"language": "P",
																							"value": "XX grande"
																						},
																						{
																							"language": "R",
																							"value": "XX Большой"
																						},
																						{
																							"language": "S",
																							"value": "XX grande"
																						},
																						{
																							"language": "W",
																							"value": "XX голям"
																						},
																						{
																							"language": "PL",
																							"value": "XXLarge"
																						}
																					]
																				},
																				{
																					"attribute": "key",
																					"grouping": "Properties",
																					"value": "xxlarge",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "enabled",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "d9ee0d56-f316-4e2c-d6f6-0b16c4746e5b",
																			"fieldName": "itemSIDEPANEL_WIDTHXXXLarge",
																			"fieldParent": "005065f0-529d-4f29-eb27-d88dab892b06",
																			"fieldType": "sap.ui.core.Item",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "text",
																					"grouping": "Properties",
																					"value": "XXXLarge",
																					"script": "",
																					"translation": [
																						{
																							"language": "1",
																							"value": "XXX大"
																						},
																						{
																							"language": "D",
																							"value": "XXX groß"
																						},
																						{
																							"language": "F",
																							"value": "XXX grand"
																						},
																						{
																							"language": "H",
																							"value": "XXX nagy"
																						},
																						{
																							"language": "K",
																							"value": "XXX Stor"
																						},
																						{
																							"language": "O",
																							"value": "XXX Large"
																						},
																						{
																							"language": "P",
																							"value": "XXX grande"
																						},
																						{
																							"language": "R",
																							"value": "XXX Большой"
																						},
																						{
																							"language": "S",
																							"value": "XXX grande"
																						},
																						{
																							"language": "W",
																							"value": "XXX големи"
																						},
																						{
																							"language": "PL",
																							"value": "XXXLarge"
																						}
																					]
																				},
																				{
																					"attribute": "key",
																					"grouping": "Properties",
																					"value": "xxxlarge",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "enabled",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "0880a520-13c2-4590-8a33-8d5bf57eb70c",
																			"fieldName": "itemSIDEPANEL_WIDTHWIDE",
																			"fieldParent": "005065f0-529d-4f29-eb27-d88dab892b06",
																			"fieldType": "sap.ui.core.Item",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "text",
																					"grouping": "Properties",
																					"value": "Wide",
																					"script": "",
																					"translation": [
																						{
																							"language": "1",
																							"value": "XXX大"
																						},
																						{
																							"language": "D",
																							"value": "XXX groß"
																						},
																						{
																							"language": "F",
																							"value": "XXX grand"
																						},
																						{
																							"language": "H",
																							"value": "XXX nagy"
																						},
																						{
																							"language": "K",
																							"value": "XXX Stor"
																						},
																						{
																							"language": "O",
																							"value": "XXX Large"
																						},
																						{
																							"language": "P",
																							"value": "XXX grande"
																						},
																						{
																							"language": "R",
																							"value": "XXX Большой"
																						},
																						{
																							"language": "S",
																							"value": "XXX grande"
																						},
																						{
																							"language": "W",
																							"value": "XXX големи"
																						},
																						{
																							"language": "PL",
																							"value": "Szeroki"
																						}
																					]
																				},
																				{
																					"attribute": "key",
																					"grouping": "Properties",
																					"value": "widescreen",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "enabled",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "6a0b1a6e-e0b4-4f1d-b120-ee1d2e0ee26e",
																			"fieldName": "itemSIDEPANEL_WIDTHXWIDE",
																			"fieldParent": "005065f0-529d-4f29-eb27-d88dab892b06",
																			"fieldType": "sap.ui.core.Item",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "text",
																					"grouping": "Properties",
																					"value": "XWide",
																					"script": "",
																					"translation": [
																						{
																							"language": "1",
																							"value": "XXX大"
																						},
																						{
																							"language": "D",
																							"value": "XXX groß"
																						},
																						{
																							"language": "F",
																							"value": "XXX grand"
																						},
																						{
																							"language": "H",
																							"value": "XXX nagy"
																						},
																						{
																							"language": "K",
																							"value": "XXX Stor"
																						},
																						{
																							"language": "O",
																							"value": "XXX Large"
																						},
																						{
																							"language": "P",
																							"value": "XXX grande"
																						},
																						{
																							"language": "R",
																							"value": "XXX Большой"
																						},
																						{
																							"language": "S",
																							"value": "XXX grande"
																						},
																						{
																							"language": "W",
																							"value": "XXX големи"
																						},
																						{
																							"language": "PL",
																							"value": "XWide"
																						}
																					]
																				},
																				{
																					"attribute": "key",
																					"grouping": "Properties",
																					"value": "xwidescreen",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "enabled",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "c91bf395-8144-4f62-bff5-634bf63e9dc0",
																			"fieldName": "itemSIDEPANEL_WIDTHXXWIDE",
																			"fieldParent": "005065f0-529d-4f29-eb27-d88dab892b06",
																			"fieldType": "sap.ui.core.Item",
																			"description": "",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "text",
																					"grouping": "Properties",
																					"value": "XXWide",
																					"script": "",
																					"translation": [
																						{
																							"language": "1",
																							"value": "XXX大"
																						},
																						{
																							"language": "D",
																							"value": "XXX groß"
																						},
																						{
																							"language": "F",
																							"value": "XXX grand"
																						},
																						{
																							"language": "H",
																							"value": "XXX nagy"
																						},
																						{
																							"language": "K",
																							"value": "XXX Stor"
																						},
																						{
																							"language": "O",
																							"value": "XXX Large"
																						},
																						{
																							"language": "P",
																							"value": "XXX grande"
																						},
																						{
																							"language": "R",
																							"value": "XXX Большой"
																						},
																						{
																							"language": "S",
																							"value": "XXX grande"
																						},
																						{
																							"language": "W",
																							"value": "XXX големи"
																						},
																						{
																							"language": "PL",
																							"value": "XXWide"
																						}
																					]
																				},
																				{
																					"attribute": "key",
																					"grouping": "Properties",
																					"value": "xxwidescreen",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "enabled",
																					"grouping": "Properties",
																					"value": true,
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		}
																	]
																},
																{
																	"fieldNo": "e6ea20d5-ac86-40c6-ff4b-73b0b8a5b42e",
																	"fieldName": "lblAppCacheFormSettingsBACK",
																	"fieldParent": "fe121fb3-fed8-4e24-c4b7-9dbecc6bd4d8",
																	"fieldType": "sap.m.Label",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "text",
																			"grouping": "Properties",
																			"value": "Background Image URL",
																			"script": "",
																			"translation": [
																				{
																					"language": "JA",
																					"value": "背景画像のURL"
																				},
																				{
																					"language": "ZH",
																					"value": "背景图片网址"
																				},
																				{
																					"language": "DA",
																					"value": "Baggrundsbilled-URL"
																				},
																				{
																					"language": "NL",
																					"value": "Achtergrondafbeelding"
																				},
																				{
																					"language": "FI",
																					"value": "Taustakuvan URL-osoite"
																				},
																				{
																					"language": "IT",
																					"value": "URL dell'immagine di sfondo"
																				},
																				{
																					"language": "PL",
																					"value": "URL obrazu tła"
																				},
																				{
																					"language": "PT",
																					"value": "URL da imagem de plano de fundo"
																				},
																				{
																					"language": "ES",
																					"value": "URL de imagen de fondo"
																				},
																				{
																					"language": "SV",
																					"value": "Bakgrundsbild URL"
																				},
																				{
																					"language": "FR",
																					"value": "URL de l'image de fond"
																				},
																				{
																					"language": "NO",
																					"value": "Bakgrunnsbilde URL"
																				},
																				{
																					"language": "DE",
																					"value": "URL Hintergrundbild"
																				},
																				{
																					"language": "EN",
																					"value": "Background Image URL"
																				}
																			]
																		}
																	],
																	"data": []
																},
																{
																	"fieldNo": "9be12f1b-f792-47df-a716-7d44151a17be",
																	"fieldName": "inAppCacheFormSettingsBACK",
																	"fieldParent": "fe121fb3-fed8-4e24-c4b7-9dbecc6bd4d8",
																	"fieldType": "sap.m.Input",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "value",
																			"grouping": "Properties",
																			"value": "{/userBackImage}",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "change",
																			"grouping": "Events",
																			"value": "Anonymous Function",
																			"script": [
																				"==OBJECT STRING==",
																				"setCacheAppCacheDiaSettings();",
																				"sap.n.Launchpad.applyUserTheme();"
																			],
																			"translation": []
																		}
																	],
																	"data": []
																},
																{
																	"fieldNo": "0d279ae5-7568-409f-e33b-c3a477cd5a9a",
																	"fieldName": "lblAppCacheFormSettingsFAV",
																	"fieldParent": "fe121fb3-fed8-4e24-c4b7-9dbecc6bd4d8",
																	"fieldType": "sap.m.Label",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "text",
																			"grouping": "Properties",
																			"value": "Most used",
																			"script": "",
																			"translation": [
																				{
																					"language": "JA",
																					"value": "最も使用"
																				},
																				{
																					"language": "ZH",
																					"value": "最常被使用"
																				},
																				{
																					"language": "DA",
																					"value": "Mest anvendte"
																				},
																				{
																					"language": "NL",
																					"value": "Meest gebruikt"
																				},
																				{
																					"language": "FI",
																					"value": "Eniten käytetty"
																				},
																				{
																					"language": "IT",
																					"value": "Più usato"
																				},
																				{
																					"language": "PL",
																					"value": "Najbardziej używane"
																				},
																				{
																					"language": "PT",
																					"value": "Mais utilizado"
																				},
																				{
																					"language": "ES",
																					"value": "Más usado"
																				},
																				{
																					"language": "SV",
																					"value": "Mest använda"
																				},
																				{
																					"language": "FR",
																					"value": "Plus utilisé"
																				},
																				{
																					"language": "NO",
																					"value": "Mest brukt"
																				},
																				{
																					"language": "DE",
																					"value": "meist genutzt"
																				},
																				{
																					"language": "EN",
																					"value": "Most used"
																				}
																			]
																		}
																	],
																	"data": []
																},
																{
																	"fieldNo": "4f73010b-e0f3-4983-b379-7ba048ed12df",
																	"fieldName": "AppCacheButDeleteRun",
																	"fieldParent": "fe121fb3-fed8-4e24-c4b7-9dbecc6bd4d8",
																	"fieldType": "sap.m.Button",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "text",
																			"grouping": "Properties",
																			"value": "Clear",
																			"script": "",
																			"translation": [
																				{
																					"language": "JA",
																					"value": "クリア"
																				},
																				{
																					"language": "ZH",
																					"value": "明确"
																				},
																				{
																					"language": "DA",
																					"value": "Klar"
																				},
																				{
																					"language": "NL",
																					"value": "Duidelijk"
																				},
																				{
																					"language": "FI",
																					"value": "Asia selvä"
																				},
																				{
																					"language": "IT",
																					"value": "Chiaro"
																				},
																				{
																					"language": "PL",
																					"value": "Jasny"
																				},
																				{
																					"language": "PT",
																					"value": "Limpar"
																				},
																				{
																					"language": "ES",
																					"value": "Claro"
																				},
																				{
																					"language": "SV",
																					"value": "Klar"
																				},
																				{
																					"language": "FR",
																					"value": "Clair"
																				},
																				{
																					"language": "NO",
																					"value": "Slett"
																				},
																				{
																					"language": "DE",
																					"value": "Zurücksetzen"
																				},
																				{
																					"language": "EN",
																					"value": "Clear"
																				}
																			]
																		},
																		{
																			"attribute": "press",
																			"grouping": "Events",
																			"value": "Anonymous Function",
																			"script": [
																				"==OBJECT STRING==",
																				"modelAppCacheTilesRun.setData([]);",
																				"setCacheAppCacheTilesRun();",
																				"",
																				""
																			],
																			"translation": []
																		}
																	],
																	"data": []
																},
																{
																	"fieldNo": "818ef90f-0166-4d2d-de9a-74ad8ef3e35d",
																	"fieldName": "lblAppCacheDelCache",
																	"fieldParent": "fe121fb3-fed8-4e24-c4b7-9dbecc6bd4d8",
																	"fieldType": "sap.m.Label",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "text",
																			"grouping": "Properties",
																			"value": "Local Data",
																			"script": "",
																			"translation": [
																				{
																					"language": "JA",
																					"value": "ローカルデータ"
																				},
																				{
																					"language": "ZH",
																					"value": "本地数据"
																				},
																				{
																					"language": "DA",
																					"value": "Lokale data"
																				},
																				{
																					"language": "NL",
																					"value": "Lokale gegevens"
																				},
																				{
																					"language": "FI",
																					"value": "Paikalliset tiedot"
																				},
																				{
																					"language": "IT",
																					"value": "Dati locali"
																				},
																				{
																					"language": "PL",
																					"value": "Dane lokalne"
																				},
																				{
																					"language": "PT",
																					"value": "Dados Locais"
																				},
																				{
																					"language": "ES",
																					"value": "Datos locales"
																				},
																				{
																					"language": "SV",
																					"value": "Lokala data"
																				},
																				{
																					"language": "FR",
																					"value": "Données locales"
																				},
																				{
																					"language": "NO",
																					"value": "Lokale data"
																				},
																				{
																					"language": "DE",
																					"value": "Lokale Daten"
																				},
																				{
																					"language": "EN",
																					"value": "Local Data"
																				}
																			]
																		}
																	],
																	"data": []
																},
																{
																	"fieldNo": "20f659ff-77ed-40b3-80ad-0e12005eef36",
																	"fieldName": "AppCacheButDeleteCache",
																	"fieldParent": "fe121fb3-fed8-4e24-c4b7-9dbecc6bd4d8",
																	"fieldType": "sap.m.Button",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "text",
																			"grouping": "Properties",
																			"value": "Clear",
																			"script": "",
																			"translation": [
																				{
																					"language": "JA",
																					"value": "クリア"
																				},
																				{
																					"language": "ZH",
																					"value": "明确"
																				},
																				{
																					"language": "DA",
																					"value": "Klar"
																				},
																				{
																					"language": "NL",
																					"value": "Duidelijk"
																				},
																				{
																					"language": "FI",
																					"value": "Asia selvä"
																				},
																				{
																					"language": "IT",
																					"value": "Chiaro"
																				},
																				{
																					"language": "PL",
																					"value": "Jasny"
																				},
																				{
																					"language": "PT",
																					"value": "Limpar"
																				},
																				{
																					"language": "ES",
																					"value": "Claro"
																				},
																				{
																					"language": "SV",
																					"value": "Klar"
																				},
																				{
																					"language": "FR",
																					"value": "Clair"
																				},
																				{
																					"language": "NO",
																					"value": "Slett"
																				},
																				{
																					"language": "DE",
																					"value": "Zurücksetzen"
																				},
																				{
																					"language": "EN",
																					"value": "Clear"
																				}
																			]
																		},
																		{
																			"attribute": "press",
																			"grouping": "Events",
																			"value": "Anonymous Function",
																			"script": [
																				"==OBJECT STRING==",
																				"AppCache.RemoveAllCache();",
																				"location.reload();"
																			],
																			"translation": []
																		}
																	],
																	"data": []
																}
															]
														}
													]
												}
											]
										},
										{
											"fieldNo": "0554d14e-91bc-4b3c-975b-6370e963abb8",
											"fieldName": "barSettingsSystem",
											"fieldParent": "f833ec93-7c71-4aa9-bbbb-363e1ada5201",
											"fieldType": "sap.m.IconTabFilter",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "text",
													"grouping": "Properties",
													"value": "SYSTEM",
													"script": "",
													"translation": [
														{
															"language": "JA",
															"value": "システム"
														},
														{
															"language": "ZH",
															"value": "系统"
														},
														{
															"language": "DA",
															"value": "SYSTEM"
														},
														{
															"language": "NL",
															"value": "SYSTEEM"
														},
														{
															"language": "FI",
															"value": "SYSTEM"
														},
														{
															"language": "IT",
															"value": "SISTEMA"
														},
														{
															"language": "PL",
															"value": "SYSTEM"
														},
														{
															"language": "PT",
															"value": "SISTEMA"
														},
														{
															"language": "ES",
															"value": "SISTEMA"
														},
														{
															"language": "SV",
															"value": "SYSTEMET"
														},
														{
															"language": "FR",
															"value": "SYSTÈME"
														},
														{
															"language": "NO",
															"value": "SYSTEM"
														},
														{
															"language": "DE",
															"value": "SYSTEM"
														},
														{
															"language": "EN",
															"value": "SYSTEM"
														}
													]
												}
											],
											"data": [
												{
													"fieldNo": "d6566ae4-2b3a-4403-b8a9-4656abea099e",
													"fieldName": "AppCacheTabVer",
													"fieldParent": "0554d14e-91bc-4b3c-975b-6370e963abb8",
													"fieldType": "sap.m.Table",
													"script": "",
													"bindingValue": "Generic Array",
													"bindingType": "h",
													"bindingSource": "P9",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "showSeparators",
															"grouping": "Properties",
															"value": "None",
															"script": "",
															"translation": []
														}
													],
													"data": [
														{
															"fieldNo": "47d0b0ad-9f91-4abb-9169-9f0796b92401",
															"fieldName": "AppCacheColVerKey",
															"fieldParent": "d6566ae4-2b3a-4403-b8a9-4656abea099e",
															"fieldType": "sap.m.Column",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [],
															"data": []
														},
														{
															"fieldNo": "16f89b56-a7fb-4952-8e58-4a8cee2567ab",
															"fieldName": "AppCacheColVerValue",
															"fieldParent": "d6566ae4-2b3a-4403-b8a9-4656abea099e",
															"fieldType": "sap.m.Column",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "hAlign",
																	"grouping": "Properties",
																	"value": "Right",
																	"script": "",
																	"translation": []
																}
															],
															"data": []
														},
														{
															"fieldNo": "e388208d-08cc-452b-8128-6123fede0479",
															"fieldName": "AppCacheItemVer",
															"fieldParent": "d6566ae4-2b3a-4403-b8a9-4656abea099e",
															"fieldType": "sap.m.ColumnListItem",
															"script": "",
															"request": [],
															"response": [],
															"attributes": [],
															"data": [
																{
																	"fieldNo": "2a3bbc7a-83ed-4b4f-e56d-84736d85ad3c",
																	"fieldName": "AppCacheTxtVerKey",
																	"fieldParent": "e388208d-08cc-452b-8128-6123fede0479",
																	"fieldType": "sap.m.Text",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "text",
																			"grouping": "Properties",
																			"value": "{key}",
																			"script": "",
																			"translation": []
																		}
																	],
																	"data": []
																},
																{
																	"fieldNo": "dd347f1b-a73a-4798-dd1b-0c337e98cea0",
																	"fieldName": "AppCacheTxtVerValue",
																	"fieldParent": "e388208d-08cc-452b-8128-6123fede0479",
																	"fieldType": "sap.m.Text",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "text",
																			"grouping": "Properties",
																			"value": "{value}",
																			"script": "",
																			"translation": []
																		}
																	],
																	"data": []
																}
															]
														}
													]
												}
											]
										},
										{
											"fieldNo": "793982cb-fc7b-428c-f59c-cdfe713dad2c",
											"fieldName": "barSettingsApps",
											"fieldParent": "f833ec93-7c71-4aa9-bbbb-363e1ada5201",
											"fieldType": "sap.m.IconTabFilter",
											"script": "",
											"request": [],
											"response": [],
											"attributes": [
												{
													"attribute": "text",
													"grouping": "Properties",
													"value": "APPS",
													"script": "",
													"translation": [
														{
															"language": "PL",
															"value": "APLIKACJE"
														},
														{
															"language": "EN",
															"value": "APPS"
														}
													]
												}
											],
											"data": [
												{
													"fieldNo": "4e11d723-ba6e-49bc-8dae-857ac3647581",
													"fieldName": "scrollAppData",
													"fieldParent": "793982cb-fc7b-428c-f59c-cdfe713dad2c",
													"fieldType": "sap.m.ScrollContainer",
													"script": "",
													"request": [],
													"response": [],
													"attributes": [
														{
															"attribute": "width",
															"grouping": "Properties",
															"value": "100%",
															"script": "",
															"translation": []
														},
														{
															"attribute": "vertical",
															"grouping": "Properties",
															"value": "true",
															"script": "",
															"translation": []
														},
														{
															"attribute": "horizontal",
															"grouping": "Properties",
															"value": "false",
															"script": "",
															"translation": []
														},
														{
															"attribute": "height",
															"grouping": "Properties",
															"value": "560px",
															"script": "",
															"translation": []
														}
													],
													"data": [
														{
															"fieldNo": "775bf113-a748-4ff6-dcce-a022e795b49a",
															"fieldName": "AppCacheData",
															"fieldParent": "4e11d723-ba6e-49bc-8dae-857ac3647581",
															"fieldType": "sap.m.List",
															"script": "",
															"bindingValue": "Generic Array",
															"bindingType": "h",
															"bindingSource": "P9",
															"request": [],
															"response": [],
															"attributes": [
																{
																	"attribute": "mode",
																	"grouping": "Properties",
																	"value": "Delete",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "setEnableCache",
																	"grouping": "Model",
																	"value": "true",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "setCacheType",
																	"grouping": "Model",
																	"value": "IndexedDB",
																	"script": "",
																	"translation": []
																},
																{
																	"attribute": "delete",
																	"grouping": "Events",
																	"value": "Anonymous Function",
																	"script": [
																		"==OBJECT STRING==",
																		"let deleteItem = oEvent.getParameter('listItem');\r",
																		"let context = deleteItem.getBindingContext();\r",
																		"let data = context.getObject();\r",
																		"\r",
																		"ModelData.Delete(AppCacheData, ['application', 'language', 'appPath'], [data.application, data.language, data.appPath]);\r",
																		"setCacheAppCacheData();"
																	],
																	"translation": []
																},
																{
																	"attribute": "sticky",
																	"grouping": "Properties",
																	"value": "[\"ColumnHeaders\"]",
																	"script": "",
																	"translation": []
																}
															],
															"data": [
																{
																	"fieldNo": "06f599c0-f98f-4ee5-c12b-98d5db1f37b3",
																	"fieldName": "AppCacheDataItem",
																	"fieldParent": "775bf113-a748-4ff6-dcce-a022e795b49a",
																	"fieldType": "sap.m.ObjectListItem",
																	"script": "",
																	"request": [],
																	"response": [],
																	"attributes": [
																		{
																			"attribute": "title",
																			"grouping": "Properties",
																			"value": "{application}",
																			"script": "",
																			"translation": []
																		},
																		{
																			"attribute": "title",
																			"grouping": "Formatter",
																			"value": "string:UpperCase",
																			"script": "",
																			"translation": []
																		}
																	],
																	"data": [
																		{
																			"fieldNo": "b8320cd6-3d45-4320-de90-6ebc1d4e5542",
																			"fieldName": "AppCacheDataSystem",
																			"fieldParent": "06f599c0-f98f-4ee5-c12b-98d5db1f37b3",
																			"fieldType": "sap.m.ObjectAttribute",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "text",
																					"grouping": "Properties",
																					"value": "{appPath}",
																					"script": "",
																					"translation": []
																				}
																			],
																			"data": []
																		},
																		{
																			"fieldNo": "77bee33d-c96c-4756-f96b-af6cf22677f4",
																			"fieldName": "AppCacheDataDate",
																			"fieldParent": "06f599c0-f98f-4ee5-c12b-98d5db1f37b3",
																			"fieldType": "sap.m.ObjectAttribute",
																			"script": "",
																			"request": [],
																			"response": [],
																			"attributes": [
																				{
																					"attribute": "text",
																					"grouping": "Properties",
																					"value": "{updatedAt}",
																					"script": "",
																					"translation": []
																				},
																				{
																					"attribute": "text",
																					"grouping": "Formatter",
																					"value": "Anonymous Function",
																					"script": [
																						"==OBJECT STRING==",
																						"if (typeof updatedAt === 'undefined' || updatedAt === null || updatedAt === '') { return; }\r",
																						"\r",
																						"let oDateFormat = sap.ui.core.format.DateFormat.getDateTimeInstance();\r",
																						"if (updatedAt.length === 14) {\r",
																						"    let oSAPFormat = sap.ui.core.format.DateFormat.getDateTimeInstance({ pattern: 'yyyyMMddhhmmss' });\r",
																						"    let oDate = oSAPFormat.parse(updatedAt);\r",
																						"    return oDateFormat.format(new Date(oDate));\r",
																						"}\r",
																						"    \r",
																						"return oDateFormat.format(new Date(updatedAt));"
																					],
																					"translation": []
																				}
																			],
																			"data": []
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"fieldNo": "f9c6b141-66b7-4cff-b4c2-9c652c5a0dca",
					"fieldName": "Data",
					"fieldParent": 99999,
					"fieldType": "neptune.folder",
					"script": "",
					"request": [],
					"response": [],
					"attributes": [],
					"data": [
						{
							"fieldNo": "4fb5b3db-f6fb-4536-812e-ca429d71810b",
							"fieldName": "Languages",
							"fieldParent": "f9c6b141-66b7-4cff-b4c2-9c652c5a0dca",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"const masterLanguages = [",
								"    { 'ISOCODE': '', 'NAME': '' },",
								"    { 'ISOCODE': 'AF', 'NAME': 'Afrikaans' },",
								"    { 'ISOCODE': 'AR', 'NAME': 'Arabic' },",
								"    { 'ISOCODE': 'BG', 'NAME': 'Bulgarian' },",
								"    { 'ISOCODE': 'CA', 'NAME': 'Catalan' },",
								"    { 'ISOCODE': 'ZH', 'NAME': 'Chinese' },",
								"    { 'ISOCODE': 'ZF', 'NAME': 'Chinese trad.' },",
								"    { 'ISOCODE': 'HR', 'NAME': 'Croatian' },",
								"    { 'ISOCODE': 'CS', 'NAME': 'Czech' },",
								"    { 'ISOCODE': 'DA', 'NAME': 'Danish' },",
								"    { 'ISOCODE': 'NL', 'NAME': 'Dutch' },",
								"    { 'ISOCODE': 'EN', 'NAME': 'English' },",
								"    { 'ISOCODE': 'ET', 'NAME': 'Estonian' },",
								"    { 'ISOCODE': 'FI', 'NAME': 'Finnish' },",
								"    { 'ISOCODE': 'FR', 'NAME': 'French' },",
								"    { 'ISOCODE': 'DE', 'NAME': 'German' },",
								"    { 'ISOCODE': 'EL', 'NAME': 'Greek' },",
								"    { 'ISOCODE': 'HE', 'NAME': 'Hebrew' },",
								"    { 'ISOCODE': 'HU', 'NAME': 'Hungarian' },",
								"    { 'ISOCODE': 'IS', 'NAME': 'Icelandic' },",
								"    { 'ISOCODE': 'ID', 'NAME': 'Indonesian' },",
								"    { 'ISOCODE': 'IT', 'NAME': 'Italian' },",
								"    { 'ISOCODE': 'JA', 'NAME': 'Japanese' },",
								"    { 'ISOCODE': 'KO', 'NAME': 'Korean' },",
								"    { 'ISOCODE': 'LV', 'NAME': 'Latvian' },",
								"    { 'ISOCODE': 'LT', 'NAME': 'Lithuanian' },",
								"    { 'ISOCODE': 'MS', 'NAME': 'Malaysian' },",
								"    { 'ISOCODE': 'NO', 'NAME': 'Norwegian' },",
								"    { 'ISOCODE': 'PL', 'NAME': 'Polish' },",
								"    { 'ISOCODE': 'PT', 'NAME': 'Portuguese' },",
								"    { 'ISOCODE': 'RO', 'NAME': 'Rumanian' },",
								"    { 'ISOCODE': 'RU', 'NAME': 'Russian' },",
								"    { 'ISOCODE': 'SR', 'NAME': 'Serbian' },",
								"    { 'ISOCODE': 'SH', 'NAME': 'Serbian (Latin)' },",
								"    { 'ISOCODE': 'SK', 'NAME': 'Slovakian' },",
								"    { 'ISOCODE': 'SL', 'NAME': 'Slovenian' },",
								"    { 'ISOCODE': 'ES', 'NAME': 'Spanish' },",
								"    { 'ISOCODE': 'SV', 'NAME': 'Swedish' },",
								"    { 'ISOCODE': 'TH', 'NAME': 'Thai' },",
								"    { 'ISOCODE': 'TR', 'NAME': 'Turkish' },",
								"    { 'ISOCODE': 'UK', 'NAME': 'Ukrainian' }",
								"];"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "a9af9e72-12d5-40fb-8719-f4461a90e011",
							"fieldName": "DataSettings",
							"fieldParent": "f9c6b141-66b7-4cff-b4c2-9c652c5a0dca",
							"fieldType": "neptune.model",
							"script": "",
							"bindingValue": "Generic Array",
							"bindingType": "h",
							"bindingSource": "P9",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "cacheInitLoadFinished",
									"grouping": "Events",
									"value": "AppCache.setSettings();",
									"script": "AppCache.setSettings();",
									"translation": []
								},
								{
									"attribute": "setCacheType",
									"grouping": "Model",
									"value": "LocalStorage",
									"script": "",
									"translation": []
								},
								{
									"attribute": "setEnableCache",
									"grouping": "Model",
									"value": "true",
									"script": "",
									"translation": []
								}
							],
							"data": []
						},
						{
							"fieldNo": "c03d017e-5606-4045-8449-8b2f8fc7516c",
							"fieldName": "AppCacheTiles",
							"fieldParent": "f9c6b141-66b7-4cff-b4c2-9c652c5a0dca",
							"fieldType": "neptune.model.array",
							"script": "",
							"bindingValue": "Generic Array",
							"bindingType": "h",
							"bindingSource": "P9",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "setEnableCache",
									"grouping": "Model",
									"value": "true",
									"script": "",
									"translation": []
								},
								{
									"attribute": "setCacheUserBased",
									"grouping": "Model",
									"value": "true",
									"script": "",
									"translation": []
								},
								{
									"attribute": "setCacheType",
									"grouping": "Model",
									"value": "IndexedDB",
									"script": "",
									"translation": []
								},
								{
									"attribute": "cacheInitLoadFinished",
									"grouping": "Events",
									"value": "cacheLoaded++;",
									"script": "cacheLoaded++;",
									"translation": []
								}
							],
							"data": []
						},
						{
							"fieldNo": "38c179dd-f009-4908-9e1e-6ec01c2f50c5",
							"fieldName": "AppCacheTilesFav",
							"fieldParent": "f9c6b141-66b7-4cff-b4c2-9c652c5a0dca",
							"fieldType": "neptune.model.array",
							"script": "",
							"bindingValue": "Generic Array",
							"bindingType": "h",
							"bindingSource": "P9",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "setEnableCache",
									"grouping": "Model",
									"value": "true",
									"script": "",
									"translation": []
								},
								{
									"attribute": "setCacheUserBased",
									"grouping": "Model",
									"value": "true",
									"script": "",
									"translation": []
								},
								{
									"attribute": "setCacheType",
									"grouping": "Model",
									"value": "IndexedDB",
									"script": "",
									"translation": []
								},
								{
									"attribute": "cacheInitLoadFinished",
									"grouping": "Events",
									"value": "cacheLoaded++;",
									"script": "cacheLoaded++;",
									"translation": []
								}
							],
							"data": []
						},
						{
							"fieldNo": "d41371df-9bf0-43a1-fc4e-a1d539b8e21d",
							"fieldName": "AppCacheTilesRun",
							"fieldParent": "f9c6b141-66b7-4cff-b4c2-9c652c5a0dca",
							"fieldType": "neptune.model.array",
							"script": "",
							"bindingValue": "Generic Array",
							"bindingType": "h",
							"bindingSource": "P9",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "setEnableCache",
									"grouping": "Model",
									"value": "true",
									"script": "",
									"translation": []
								},
								{
									"attribute": "setCacheUserBased",
									"grouping": "Model",
									"value": "true",
									"script": "",
									"translation": []
								},
								{
									"attribute": "setCacheType",
									"grouping": "Model",
									"value": "IndexedDB",
									"script": "",
									"translation": []
								},
								{
									"attribute": "cacheInitLoadFinished",
									"grouping": "Events",
									"value": "cacheLoaded++;",
									"script": "cacheLoaded++;",
									"translation": []
								}
							],
							"data": []
						},
						{
							"fieldNo": "d0eaf97d-30a6-4b2c-d580-934a02705f2c",
							"fieldName": "AppCacheCategory",
							"fieldParent": "f9c6b141-66b7-4cff-b4c2-9c652c5a0dca",
							"fieldType": "neptune.model.array",
							"script": "",
							"bindingValue": "Generic Array",
							"bindingType": "h",
							"bindingSource": "P9",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "setEnableCache",
									"grouping": "Model",
									"value": "true",
									"script": "",
									"translation": []
								},
								{
									"attribute": "setCacheUserBased",
									"grouping": "Model",
									"value": "true",
									"script": "",
									"translation": []
								},
								{
									"attribute": "setCacheType",
									"grouping": "Model",
									"value": "IndexedDB",
									"script": "",
									"translation": []
								},
								{
									"attribute": "cacheInitLoadFinished",
									"grouping": "Events",
									"value": "cacheLoaded++;",
									"script": "cacheLoaded++;",
									"translation": []
								}
							],
							"data": []
						},
						{
							"fieldNo": "ec5b8fa5-6059-4dc7-926c-c689b125e940",
							"fieldName": "AppCacheCategoryChild",
							"fieldParent": "f9c6b141-66b7-4cff-b4c2-9c652c5a0dca",
							"fieldType": "neptune.model.array",
							"script": "",
							"bindingValue": "Generic Array",
							"bindingType": "h",
							"bindingSource": "P9",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "setEnableCache",
									"grouping": "Model",
									"value": "true",
									"script": "",
									"translation": []
								},
								{
									"attribute": "setCacheUserBased",
									"grouping": "Model",
									"value": "true",
									"script": "",
									"translation": []
								},
								{
									"attribute": "setCacheType",
									"grouping": "Model",
									"value": "IndexedDB",
									"script": "",
									"translation": []
								},
								{
									"attribute": "cacheInitLoadFinished",
									"grouping": "Events",
									"value": "cacheLoaded++;",
									"script": "cacheLoaded++;",
									"translation": []
								}
							],
							"data": []
						},
						{
							"fieldNo": "8b675d10-c284-40c3-97af-0b76a38af065",
							"fieldName": "AppCacheAppTimestamp",
							"fieldParent": "f9c6b141-66b7-4cff-b4c2-9c652c5a0dca",
							"fieldType": "neptune.model.object",
							"script": "",
							"bindingValue": "Generic Object",
							"bindingType": "u",
							"bindingSource": "P9",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "setEnableCache",
									"grouping": "Model",
									"value": "true",
									"script": "",
									"translation": []
								}
							],
							"data": []
						}
					]
				},
				{
					"fieldNo": "a4096929-0f8e-49c6-ba36-b136359e96b2",
					"fieldName": "Translation",
					"fieldParent": 99999,
					"fieldType": "neptune.folder",
					"script": "",
					"request": [],
					"response": [],
					"attributes": [],
					"data": [
						{
							"fieldNo": "eba3c643-6f3f-434c-8f5e-90ceef26a562",
							"fieldName": "AppCache_tAdaptiveNotFound",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Adaptive Framework configuration not found",
									"script": "",
									"translation": [
										{
											"language": "PL",
											"value": "Nie znaleziono konfiguracji Adaptive Framework"
										},
										{
											"language": "EN",
											"value": "Adaptive Framework configuration not found"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "39396645-af8b-4344-e20e-3a4d02d2b233",
							"fieldName": "AppCache_Fingerprint",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "visible",
									"grouping": "Properties",
									"value": "false",
									"script": "",
									"translation": []
								},
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Login with Fingerprint",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "指紋でログイン"
										},
										{
											"language": "ZH",
											"value": "使用指纹登录"
										},
										{
											"language": "DA",
											"value": "Log ind med fingeraftryk"
										},
										{
											"language": "NL",
											"value": "Inloggen met een vingerafdruk"
										},
										{
											"language": "FI",
											"value": "Kirjaudu sisään sormenjäljellä"
										},
										{
											"language": "IT",
											"value": "Accedi con Fingerprint"
										},
										{
											"language": "PL",
											"value": "Zaloguj się za pomocą odcisku palca"
										},
										{
											"language": "PT",
											"value": "Faça o acesso com impressão digital"
										},
										{
											"language": "ES",
											"value": "Iniciar sesión con huella digital"
										},
										{
											"language": "SV",
											"value": "Logga in med fingeravtryck"
										},
										{
											"language": "FR",
											"value": "Connexion avec empreinte digitale"
										},
										{
											"language": "NO",
											"value": "Logg inn med Fingeravtrykk"
										},
										{
											"language": "DE",
											"value": "Einloggen mit Fingerprint"
										},
										{
											"language": "EN",
											"value": "Login with Fingerprint"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "c4c30591-5b7b-4474-e9d7-b9315495da0a",
							"fieldName": "AppCache_tPhoneModel",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Phone Model",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "電話モデル"
										},
										{
											"language": "ZH",
											"value": "手机型号"
										},
										{
											"language": "DA",
											"value": "Telefonmodel"
										},
										{
											"language": "NL",
											"value": "Telefoon model"
										},
										{
											"language": "FI",
											"value": "Puhelimen malli"
										},
										{
											"language": "IT",
											"value": "Modello del telefono"
										},
										{
											"language": "PL",
											"value": "Model telefonu"
										},
										{
											"language": "PT",
											"value": "Modelo de Celular"
										},
										{
											"language": "ES",
											"value": "Modelo de teléfono"
										},
										{
											"language": "SV",
											"value": "Telefonmodell"
										},
										{
											"language": "FR",
											"value": "Modèle de téléphone"
										},
										{
											"language": "NO",
											"value": "Telefonmodell"
										},
										{
											"language": "DE",
											"value": "Geräte Modell"
										},
										{
											"language": "EN",
											"value": "Phone Model"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "a93e0e44-1498-4ce8-9719-d3d4dad85864",
							"fieldName": "AppCache_tSearchResult",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Search Result",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "検索結果"
										},
										{
											"language": "ZH",
											"value": "搜索结果"
										},
										{
											"language": "DA",
											"value": "Søgeresultat"
										},
										{
											"language": "NL",
											"value": "Zoekresultaat"
										},
										{
											"language": "FI",
											"value": "Hakutulos"
										},
										{
											"language": "IT",
											"value": "Risultato della ricerca"
										},
										{
											"language": "PL",
											"value": "Wynik wyszukiwania"
										},
										{
											"language": "PT",
											"value": "Resultado da pesquisa"
										},
										{
											"language": "ES",
											"value": "Resultado de búsqueda"
										},
										{
											"language": "SV",
											"value": "Sökresultat"
										},
										{
											"language": "FR",
											"value": "Résultat de la recherche"
										},
										{
											"language": "NO",
											"value": "Søkeresultat"
										},
										{
											"language": "DE",
											"value": "Suchergebnis"
										},
										{
											"language": "EN",
											"value": "Search Result"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "baaaa070-f7da-4c66-9a19-3ec14ffb19cb",
							"fieldName": "AppCache_tPhoneType",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Phone Type",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "電話の種類"
										},
										{
											"language": "ZH",
											"value": "电话类型"
										},
										{
											"language": "DA",
											"value": "Telefontype"
										},
										{
											"language": "NL",
											"value": "Telefoon type"
										},
										{
											"language": "FI",
											"value": "Puhelintyyppi"
										},
										{
											"language": "IT",
											"value": "Tipo di telefono"
										},
										{
											"language": "PL",
											"value": "Rodzaj telefonu"
										},
										{
											"language": "PT",
											"value": "Tipo de Celular"
										},
										{
											"language": "ES",
											"value": "Tipo de telefono"
										},
										{
											"language": "SV",
											"value": "Telefontyp"
										},
										{
											"language": "FR",
											"value": "Type de téléphone"
										},
										{
											"language": "NO",
											"value": "Telefontype"
										},
										{
											"language": "DE",
											"value": "Geräte Typ"
										},
										{
											"language": "EN",
											"value": "Phone Type"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "c919c54b-ae12-4d2d-963b-c009213d216a",
							"fieldName": "AppCache_tPhoneVersion",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Phone Version",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "電話番号"
										},
										{
											"language": "ZH",
											"value": "电话版"
										},
										{
											"language": "DA",
											"value": "Telefonversion"
										},
										{
											"language": "NL",
											"value": "Telefoon versie"
										},
										{
											"language": "FI",
											"value": "Puhelinversio"
										},
										{
											"language": "IT",
											"value": "Versione del telefono"
										},
										{
											"language": "PL",
											"value": "Wersja telefonu"
										},
										{
											"language": "PT",
											"value": "Versão do Celular"
										},
										{
											"language": "ES",
											"value": "Versión del teléfono"
										},
										{
											"language": "SV",
											"value": "Telefonversion"
										},
										{
											"language": "FR",
											"value": "Version du téléphone"
										},
										{
											"language": "NO",
											"value": "Telefonversjon"
										},
										{
											"language": "DE",
											"value": "Geräte Version"
										},
										{
											"language": "EN",
											"value": "Phone Version"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "f3549c57-928f-4f68-e0ba-5959b5508794",
							"fieldName": "AppCache_tCordovaVersion",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Cordova Version",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "コルドバ版"
										},
										{
											"language": "ZH",
											"value": "科尔多瓦版"
										},
										{
											"language": "DA",
											"value": "Cordova Version"
										},
										{
											"language": "NL",
											"value": "Cordova-versie"
										},
										{
											"language": "FI",
											"value": "Cordova-versio"
										},
										{
											"language": "IT",
											"value": "Versione Cordova"
										},
										{
											"language": "PL",
											"value": "Wersja Cordova"
										},
										{
											"language": "PT",
											"value": "Versão Cordova"
										},
										{
											"language": "ES",
											"value": "Versión cordova"
										},
										{
											"language": "SV",
											"value": "Cordova Version"
										},
										{
											"language": "FR",
											"value": "Version Cordova"
										},
										{
											"language": "NO",
											"value": "Cordova versjon"
										},
										{
											"language": "DE",
											"value": "Cordova Version"
										},
										{
											"language": "EN",
											"value": "Cordova Version"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "9c8d3bd4-9c18-42c3-bc91-bbb7a17713db",
							"fieldName": "AppCache_tAppVersion",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "App Version",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "アプリのバージョン"
										},
										{
											"language": "ZH",
											"value": "应用版本"
										},
										{
											"language": "DA",
											"value": "App Version"
										},
										{
											"language": "NL",
											"value": "App versie"
										},
										{
											"language": "FI",
											"value": "Sovellusversio"
										},
										{
											"language": "IT",
											"value": "Versione dell'app"
										},
										{
											"language": "PL",
											"value": "Wersja aplikacji"
										},
										{
											"language": "PT",
											"value": "Versão do Aplicativo"
										},
										{
											"language": "ES",
											"value": "Version de aplicacion"
										},
										{
											"language": "SV",
											"value": "Appversion"
										},
										{
											"language": "FR",
											"value": "Version de l'application"
										},
										{
											"language": "NO",
											"value": "App Versjon"
										},
										{
											"language": "DE",
											"value": "App Version"
										},
										{
											"language": "EN",
											"value": "App Version"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "f041fb8d-6dc3-4610-ac73-3b1eb8e1b3ca",
							"fieldName": "AppCache_tNoConnection",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "No connection",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "接続なし"
										},
										{
											"language": "ZH",
											"value": "没联系"
										},
										{
											"language": "DA",
											"value": "Ingen forbindelse"
										},
										{
											"language": "NL",
											"value": "Geen connectie"
										},
										{
											"language": "FI",
											"value": "Ei yhteyttä"
										},
										{
											"language": "IT",
											"value": "Nessuna connessione"
										},
										{
											"language": "PL",
											"value": "Brak połączenia"
										},
										{
											"language": "PT",
											"value": "Sem Ligação"
										},
										{
											"language": "ES",
											"value": "Sin conexión"
										},
										{
											"language": "SV",
											"value": "Ingen förbindelse"
										},
										{
											"language": "FR",
											"value": "Pas de connection"
										},
										{
											"language": "NO",
											"value": "Ingen forbindelse"
										},
										{
											"language": "DE",
											"value": "Keine Verbindung"
										},
										{
											"language": "EN",
											"value": "No connection"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "7af40ce3-f6bf-4841-e4ce-2b5e8db3ab76",
							"fieldName": "AppCache_tUserLogout",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "User logged out",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "ユーザーがログアウトしました"
										},
										{
											"language": "ZH",
											"value": "用户退出了"
										},
										{
											"language": "DA",
											"value": "Bruger logget ud"
										},
										{
											"language": "NL",
											"value": "Gebruiker uitgelogd"
										},
										{
											"language": "FI",
											"value": "Käyttäjä kirjautui ulos"
										},
										{
											"language": "IT",
											"value": "Utente disconnesso"
										},
										{
											"language": "PL",
											"value": "Użytkownik wylogował się"
										},
										{
											"language": "PT",
											"value": "Usuário Desconectado"
										},
										{
											"language": "ES",
											"value": "Usuario desconectado"
										},
										{
											"language": "SV",
											"value": "Användare loggad ut"
										},
										{
											"language": "FR",
											"value": "Utilisateur déconnecté"
										},
										{
											"language": "NO",
											"value": "Bruker logget ut"
										},
										{
											"language": "DE",
											"value": "Benutzer abgemeldet"
										},
										{
											"language": "EN",
											"value": "User logged out"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "a9f8b956-bb00-4c0a-f05b-46ff8a7884e1",
							"fieldName": "AppCache_tEnterUsename",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Enter usename",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "usenameを入力してください"
										},
										{
											"language": "ZH",
											"value": "输入usename"
										},
										{
											"language": "DA",
											"value": "Indtast brugernavn"
										},
										{
											"language": "NL",
											"value": "Voer usename in"
										},
										{
											"language": "FI",
											"value": "Anna käyttäjätunnus"
										},
										{
											"language": "IT",
											"value": "Inserisci il nome utente"
										},
										{
											"language": "PL",
											"value": "Wpisz nazwę użytkownika"
										},
										{
											"language": "PT",
											"value": "Qual o nome do utilizador"
										},
										{
											"language": "ES",
											"value": "Introduzca nombre de usuario"
										},
										{
											"language": "SV",
											"value": "Ange användarnamn"
										},
										{
											"language": "FR",
											"value": "Entrez le nom d'utilisateur"
										},
										{
											"language": "NO",
											"value": "Skriv inn brukernavn"
										},
										{
											"language": "DE",
											"value": "Nutzernamen eingeben"
										},
										{
											"language": "EN",
											"value": "Enter usename"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "66dac954-3069-4452-bc15-c53a23bac1fa",
							"fieldName": "AppCache_tEnterPassword",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Enter password",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "パスワードを入力する"
										},
										{
											"language": "ZH",
											"value": "输入密码"
										},
										{
											"language": "DA",
											"value": "Indtast adgangskode"
										},
										{
											"language": "NL",
											"value": "Voer wachtwoord in"
										},
										{
											"language": "FI",
											"value": "Kirjoita salasana"
										},
										{
											"language": "IT",
											"value": "Inserire la password"
										},
										{
											"language": "PL",
											"value": "Wprowadź hasło"
										},
										{
											"language": "PT",
											"value": "Qual a senha"
										},
										{
											"language": "ES",
											"value": "Introducir la contraseña"
										},
										{
											"language": "SV",
											"value": "Skriv in lösenord"
										},
										{
											"language": "FR",
											"value": "Entrer le mot de passe"
										},
										{
											"language": "NO",
											"value": "Oppgi passord"
										},
										{
											"language": "DE",
											"value": "Passwort eingeben"
										},
										{
											"language": "EN",
											"value": "Enter password"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "582bfc0d-2fd8-4727-9463-60f617461d8f",
							"fieldName": "AppCache_tEnterNewPasscode",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Enter new pin code",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "新しいPINコードを入力"
										},
										{
											"language": "ZH",
											"value": "输入新的密码"
										},
										{
											"language": "DA",
											"value": "Indtast ny pinkode"
										},
										{
											"language": "NL",
											"value": "Voer een nieuwe pincode in"
										},
										{
											"language": "FI",
											"value": "Anna uusi PIN-koodi"
										},
										{
											"language": "IT",
											"value": "Inserisci un nuovo codice pin"
										},
										{
											"language": "PL",
											"value": "Wprowadź nowy kod PIN"
										},
										{
											"language": "PT",
											"value": "Insira o novo código PIN"
										},
										{
											"language": "ES",
											"value": "Introduzca el nuevo código pin"
										},
										{
											"language": "SV",
											"value": "Ange ny PIN-kod"
										},
										{
											"language": "FR",
											"value": "Entrez le nouveau code PIN"
										},
										{
											"language": "NO",
											"value": "Skriv inn ny Pin-kode"
										},
										{
											"language": "DE",
											"value": "Neuen PIN eingeben"
										},
										{
											"language": "EN",
											"value": "Enter new pin code"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "0a122420-f0c8-4cbe-e81b-a893366ebe68",
							"fieldName": "AppCache_tEnterRepeatPasscode",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Repeat pin code",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "繰り返しPINコード"
										},
										{
											"language": "ZH",
											"value": "重复密码"
										},
										{
											"language": "DA",
											"value": "Gentag PIN-kode"
										},
										{
											"language": "NL",
											"value": "Herhaal pincode"
										},
										{
											"language": "FI",
											"value": "Toista PIN-koodi"
										},
										{
											"language": "IT",
											"value": "Ripeti il codice pin"
										},
										{
											"language": "PL",
											"value": "Powtórz kod PIN"
										},
										{
											"language": "PT",
											"value": "Repetir o código PIN"
										},
										{
											"language": "ES",
											"value": "Repetir codigo pin"
										},
										{
											"language": "SV",
											"value": "Upprepa PIN-koden"
										},
										{
											"language": "FR",
											"value": "Répéter le code PIN"
										},
										{
											"language": "NO",
											"value": "Gjenta Pin-koden"
										},
										{
											"language": "DE",
											"value": "PIN wiederholen"
										},
										{
											"language": "EN",
											"value": "Repeat pin code"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "6e827096-b2ff-4084-b601-d59cf6b64396",
							"fieldName": "AppCache_tNoPasscodeMatch",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Pin code do not match",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "PINコードが一致しません"
										},
										{
											"language": "ZH",
											"value": "PIN码不匹配"
										},
										{
											"language": "DA",
											"value": "Pin kode stemmer ikke overens"
										},
										{
											"language": "NL",
											"value": "Pincode komt niet overeen"
										},
										{
											"language": "FI",
											"value": "Pin-koodi ei vastaa"
										},
										{
											"language": "IT",
											"value": "Il codice pin non corrisponde"
										},
										{
											"language": "PL",
											"value": "Kod PIN nie pasuje"
										},
										{
											"language": "PT",
											"value": "O código PIN não coincide"
										},
										{
											"language": "ES",
											"value": "El código pin no coincide"
										},
										{
											"language": "SV",
											"value": "PIN-kod matchar inte"
										},
										{
											"language": "FR",
											"value": "Le code PIN ne correspond pas"
										},
										{
											"language": "NO",
											"value": "Pin-koden stemmer ikke overens"
										},
										{
											"language": "DE",
											"value": "PIN inkorrekt"
										},
										{
											"language": "EN",
											"value": "Pin code do not match"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "6153fd1d-5817-439e-d636-7f2282bab517",
							"fieldName": "AppCache_tNewPasswordNoMatch",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Passwords do not match",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "パスワードが一致していません"
										},
										{
											"language": "ZH",
											"value": "密码不匹配"
										},
										{
											"language": "DA",
											"value": "adgangskoderne stemmer ikke overens"
										},
										{
											"language": "NL",
											"value": "Wachtwoorden komen niet overeen"
										},
										{
											"language": "FI",
											"value": "Salasanat eivät täsmää"
										},
										{
											"language": "IT",
											"value": "le passwords non corrispondono"
										},
										{
											"language": "PL",
											"value": "Hasła nie pasują do siebie"
										},
										{
											"language": "PT",
											"value": "As senhas não coincidem"
										},
										{
											"language": "ES",
											"value": "Las contraseñas no coinciden"
										},
										{
											"language": "SV",
											"value": "Lösenorden matchar inte"
										},
										{
											"language": "FR",
											"value": "Les mots de passe ne correspondent pas"
										},
										{
											"language": "NO",
											"value": "passordene er ikke like"
										},
										{
											"language": "DE",
											"value": "Passwort inkorrekt"
										},
										{
											"language": "EN",
											"value": "Passwords do not match"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "f3ee0a15-4c89-4940-dd51-303c33c1b50d",
							"fieldName": "AppCache_tPasscodeToShort",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Pin code to short, min chars",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "ショートコードにピンコード、最小文字"
										},
										{
											"language": "ZH",
											"value": "将代码固定为短，最小字符"
										},
										{
											"language": "DA",
											"value": "Pin kode til korte, min tegn"
										},
										{
											"language": "NL",
											"value": "Pincode voor korte, minimale tekens"
										},
										{
											"language": "FI",
											"value": "Kytke koodi lyhyisiin, pieniin merkkijonoihin"
										},
										{
											"language": "IT",
											"value": "Codice PIN per caratteri brevi, min"
										},
										{
											"language": "PL",
											"value": "Kod PIN na krótkie, min. Znaki"
										},
										{
											"language": "PT",
											"value": "Código PIN demasiado curto, nr. carateres"
										},
										{
											"language": "ES",
											"value": "Código pin a corto, min chars"
										},
										{
											"language": "SV",
											"value": "Pin-kod till kort, mina tecken"
										},
										{
											"language": "FR",
											"value": "Code PIN à court, min caractères"
										},
										{
											"language": "NO",
											"value": "Pin-koden er for kort, min tegn"
										},
										{
											"language": "DE",
											"value": "PIN zu kurz, mind. Zeichen"
										},
										{
											"language": "EN",
											"value": "Pin code too short, min digits"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "7a5825d2-1365-4048-f1ce-2cf8a8323aac",
							"fieldName": "AppCache_tWrongResponse",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "No valid APPLID or other Error",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "有効なAPPLIDがない、またはその他のエラー"
										},
										{
											"language": "ZH",
											"value": "没有有效的APPLID或其他错误"
										},
										{
											"language": "DA",
											"value": "Ingen gyldig APPLID eller anden fejl"
										},
										{
											"language": "NL",
											"value": "Geen geldige APPLID of andere fout"
										},
										{
											"language": "FI",
											"value": "Ei voimassa olevaa APPLID- tai muuta virhettä"
										},
										{
											"language": "IT",
											"value": "Nessun APPLID valido o altro errore"
										},
										{
											"language": "PL",
											"value": "Brak prawidłowego APPLID lub innego błędu"
										},
										{
											"language": "PT",
											"value": "Nenhum APPLID válido ou outro erro"
										},
										{
											"language": "ES",
											"value": "Ningún APPLID válido u otro error"
										},
										{
											"language": "SV",
											"value": "Inget giltigt APPLI eller annat fel"
										},
										{
											"language": "FR",
											"value": "Aucune demande valide ou autre erreur"
										},
										{
											"language": "NO",
											"value": "Ingen gyldig APPLI eller annen feil"
										},
										{
											"language": "DE",
											"value": "APPLID ungültig oder anderer Fehler"
										},
										{
											"language": "EN",
											"value": "No valid APPLID or other Error"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "3b8c35e1-7683-4f8d-c62c-bfbfd8020b74",
							"fieldName": "AppCache_tWrongActivationCode",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Wrong Activation Code",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "間違ったアクティベーションコード"
										},
										{
											"language": "ZH",
											"value": "错误的激活码"
										},
										{
											"language": "DA",
											"value": "Forkert aktiveringskode"
										},
										{
											"language": "NL",
											"value": "Foutieve activeringscode"
										},
										{
											"language": "FI",
											"value": "Väärä aktivointikoodi"
										},
										{
											"language": "IT",
											"value": "Codice di attivazione errato"
										},
										{
											"language": "PL",
											"value": "Błędny kod aktywacyjny"
										},
										{
											"language": "PT",
											"value": "Código de Ativação Errado"
										},
										{
											"language": "ES",
											"value": "Código de activación incorrecto"
										},
										{
											"language": "SV",
											"value": "Felaktiveringskod"
										},
										{
											"language": "FR",
											"value": "Mauvais code d'activation"
										},
										{
											"language": "NO",
											"value": "Feil aktiveringskode"
										},
										{
											"language": "DE",
											"value": "Aktivierungscode inkorrekt"
										},
										{
											"language": "EN",
											"value": "Wrong Activation Code"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "6e00741b-81f5-489a-8d9c-588a5f5dc96c",
							"fieldName": "AppCache_tWrongUserNamePass",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Wrong username/password",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "誤ったユーザー名/パスワード"
										},
										{
											"language": "ZH",
											"value": "用户名/密码错误"
										},
										{
											"language": "DA",
											"value": "Forkert brugernavn / kodeord"
										},
										{
											"language": "NL",
											"value": "Verkeerde gebruikersnaam / wachtwoord"
										},
										{
											"language": "FI",
											"value": "Väärä käyttäjätunnus / salasana"
										},
										{
											"language": "IT",
											"value": "Nome utente / password errati"
										},
										{
											"language": "PL",
											"value": "Nieprawidłowa nazwa użytkownika / hasło"
										},
										{
											"language": "PT",
											"value": "Nome de Usuário / senha incorretos"
										},
										{
											"language": "ES",
											"value": "Nombre de usuario / contraseña incorrectos"
										},
										{
											"language": "SV",
											"value": "Fel användarnamn / lösenord"
										},
										{
											"language": "FR",
											"value": "Nom d'utilisateur / mot de passe incorrect"
										},
										{
											"language": "NO",
											"value": "Feil brukernavn / passord"
										},
										{
											"language": "DE",
											"value": "Nutzername / Passwort inkorrekt"
										},
										{
											"language": "EN",
											"value": "Wrong username/password"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "db4a47c0-f81d-4a2c-9762-e9c62136c85e",
							"fieldName": "AppCache_tErrorDownloading",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Error downloading new version",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "新しいバージョンのダウンロードエラー"
										},
										{
											"language": "ZH",
											"value": "下载新版本时出错"
										},
										{
											"language": "DA",
											"value": "Fejl ved download af ny version"
										},
										{
											"language": "NL",
											"value": "Fout bij downloaden van nieuwe versie"
										},
										{
											"language": "FI",
											"value": "Virhe ladattaessa uutta versiota"
										},
										{
											"language": "IT",
											"value": "Errore durante il download della nuova versione"
										},
										{
											"language": "PL",
											"value": "Błąd podczas pobierania nowej wersji"
										},
										{
											"language": "PT",
											"value": "Erro ao baixar a nova versão"
										},
										{
											"language": "ES",
											"value": "Error al descargar la nueva versión"
										},
										{
											"language": "SV",
											"value": "Fel vid nedladdning av ny version"
										},
										{
											"language": "FR",
											"value": "Erreur lors du téléchargement de la nouvelle version"
										},
										{
											"language": "NO",
											"value": "Feil ved nedlasting av ny versjon"
										},
										{
											"language": "DE",
											"value": "Fehler beim Herunterladen der neuen Version"
										},
										{
											"language": "EN",
											"value": "Error downloading new version"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "4e31c45d-f273-4de9-889d-3760c2753949",
							"fieldName": "AppCache_tAppUpdated",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "App updated. New logon required",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "アプリを更新しました。新しいログオンが必要です"
										},
										{
											"language": "ZH",
											"value": "应用已更新。需要重新登录"
										},
										{
											"language": "DA",
											"value": "App opdateret. Ny logon kræves"
										},
										{
											"language": "NL",
											"value": "App bijgewerkt. Nieuwe aanmelding vereist"
										},
										{
											"language": "FI",
											"value": "Sovellus päivitettiin. Uusi sisäänkirjautuminen tarvitaan"
										},
										{
											"language": "IT",
											"value": "App aggiornata. Nuovo accesso richiesto"
										},
										{
											"language": "PL",
											"value": "Zaktualizowano aplikację. Wymagane nowe logowanie"
										},
										{
											"language": "PT",
											"value": "Aplicativo atualizado. Novo logon necessário"
										},
										{
											"language": "ES",
											"value": "Aplicación actualizada. Se requiere nuevo inicio de sesión"
										},
										{
											"language": "SV",
											"value": "App uppdaterad. Ny inloggning krävs"
										},
										{
											"language": "FR",
											"value": "App mis à jour. Nouvelle connexion requise"
										},
										{
											"language": "NO",
											"value": "App oppdatert. Ny pålogging kreves"
										},
										{
											"language": "DE",
											"value": "App aktualisiert. Neue Anmeldung erforderlich"
										},
										{
											"language": "EN",
											"value": "App updated. New logon required"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "cab6a801-47b4-421c-f2cc-c81571c78a6b",
							"fieldName": "AppCache_tNoCurrentConfig",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "No Launchpad ID selected",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "ランチパッドIDが選択されていません"
										},
										{
											"language": "ZH",
											"value": "未选择启动板ID"
										},
										{
											"language": "DA",
											"value": "Ingen start-id blev valgt"
										},
										{
											"language": "NL",
											"value": "Geen Launchpad-ID geselecteerd"
										},
										{
											"language": "FI",
											"value": "Launchpad-tunnusta ei ole valittu"
										},
										{
											"language": "IT",
											"value": "Nessun ID Launchpad selezionato"
										},
										{
											"language": "PL",
											"value": "Nie wybrano identyfikatora Launchpad"
										},
										{
											"language": "PT",
											"value": "Nenhum ID do Launchpad selecionado"
										},
										{
											"language": "ES",
											"value": "No se ha seleccionado ninguna ID de Launchpad"
										},
										{
											"language": "SV",
											"value": "Inget Launchpad ID valt"
										},
										{
											"language": "FR",
											"value": "Aucun ID de Launchpad sélectionné"
										},
										{
											"language": "NO",
											"value": "Ingen Launchpad ID valgt"
										},
										{
											"language": "DE",
											"value": "Keine Launchpad-ID ausgewählt"
										},
										{
											"language": "EN",
											"value": "No Launchpad ID selected"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "2499dafc-8f59-4dc2-dcc5-e968e1a7c0a5",
							"fieldName": "AppCache_tSessionTimeout",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Session timed out - please try again",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "セッションがタイムアウトしました - もう一度やり直してください"
										},
										{
											"language": "ZH",
											"value": "会话超时 - 请再试一次"
										},
										{
											"language": "DA",
											"value": "Session timed out - prøv igen"
										},
										{
											"language": "NL",
											"value": "De sessie is afgelopen - probeer het opnieuw"
										},
										{
											"language": "FI",
											"value": "Istuntoaika päättyi - yritä uudelleen"
										},
										{
											"language": "IT",
											"value": "La sessione è scaduta, riprova"
										},
										{
											"language": "PL",
											"value": "Upłynął limit czasu sesji - spróbuj ponownie"
										},
										{
											"language": "PT",
											"value": "A sessão expirou - tente novamente"
										},
										{
											"language": "ES",
											"value": "Tiempo de espera de sesión - por favor intente de nuevo"
										},
										{
											"language": "SV",
											"value": "Sessionen slutade - försök igen"
										},
										{
											"language": "FR",
											"value": "Session expirée - veuillez réessayer"
										},
										{
											"language": "NO",
											"value": "Session timed out - prøv igjen"
										},
										{
											"language": "DE",
											"value": "Sitzung abgelaufen - bitte versuchen Sie es erneut"
										},
										{
											"language": "EN",
											"value": "Session timed out - please try again"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "ed0c0b82-93f7-4af0-d6c8-966a86a48863",
							"fieldName": "AppCache_tMaxFileSize",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "File is too large. Max file size is 200k",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "ファイルが大きすぎます。最大ファイルサイズは200kです"
										},
										{
											"language": "ZH",
											"value": "文件太大了。最大文件大小为200k"
										},
										{
											"language": "DA",
											"value": "Filen er for stor. Maks filstørrelse er 200k"
										},
										{
											"language": "NL",
											"value": "Bestand is te groot. Max bestandsgrootte is 200k"
										},
										{
											"language": "FI",
											"value": "Tiedosto on liian suuri. Tiedoston enimmäiskoko on 200k"
										},
										{
											"language": "IT",
											"value": "Il file è troppo grande. La dimensione massima del file è 200k"
										},
										{
											"language": "PL",
											"value": "Plik jest za duży. Maksymalny rozmiar pliku to 200 KB"
										},
										{
											"language": "PT",
											"value": "O arquivo é muito grande. O tamanho máximo do arquivo é de 200k"
										},
										{
											"language": "ES",
											"value": "El archivo es demasiado grande. El tamaño máximo del archivo es de 200k"
										},
										{
											"language": "SV",
											"value": "Filen är för stor. Max filstorlek är 200k"
										},
										{
											"language": "FR",
											"value": "Le fichier est trop grand. La taille maximale du fichier est de 200 Ko"
										},
										{
											"language": "NO",
											"value": "Filen er for stor. Maks filstørrelse er 200k"
										},
										{
											"language": "DE",
											"value": "Datei ist zu groß. Max. Dateigröße beträgt 200 KB"
										},
										{
											"language": "EN",
											"value": "File is too large. Max file size is 200k"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "1474a1a5-c0c7-441b-8516-5ad5400f14d3",
							"fieldName": "AppCache_tAppNotFound",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "App not found or no policy",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "アプリが見つからないか、ポリシーがありません"
										},
										{
											"language": "ZH",
											"value": "应用程序未找到或没有策略"
										},
										{
											"language": "DA",
											"value": "App ikke fundet eller ingen politik"
										},
										{
											"language": "NL",
											"value": "App niet gevonden of geen beleid"
										},
										{
											"language": "FI",
											"value": "Sovellusta ei löytynyt tai sitä ei ole"
										},
										{
											"language": "IT",
											"value": "App non trovata o nessuna politica"
										},
										{
											"language": "PL",
											"value": "Nie znaleziono aplikacji lub brak zasad"
										},
										{
											"language": "PT",
											"value": "Aplicativo não encontrado ou sem política"
										},
										{
											"language": "ES",
											"value": "Aplicación no encontrada o sin política"
										},
										{
											"language": "SV",
											"value": "Appen hittades inte eller ingen policy"
										},
										{
											"language": "FR",
											"value": "App non trouvée ou pas de politique"
										},
										{
											"language": "NO",
											"value": "Appen ble ikke funnet eller ingen policy"
										},
										{
											"language": "DE",
											"value": "App nicht gefunden oder keine Berechtigung"
										},
										{
											"language": "EN",
											"value": "App not found or no policy"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "8da44d1d-8534-4ad6-9ffa-1072cfdd278b",
							"fieldName": "AppCache_tNotification",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Notification",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "お知らせ"
										},
										{
											"language": "ZH",
											"value": "通知"
										},
										{
											"language": "DA",
											"value": "Notifikation"
										},
										{
											"language": "NL",
											"value": "Kennisgeving"
										},
										{
											"language": "FI",
											"value": "ilmoitus"
										},
										{
											"language": "IT",
											"value": "Notifica"
										},
										{
											"language": "PL",
											"value": "Powiadomienie"
										},
										{
											"language": "PT",
											"value": "Notificação"
										},
										{
											"language": "ES",
											"value": "Notificación"
										},
										{
											"language": "SV",
											"value": "Underrättelse"
										},
										{
											"language": "FR",
											"value": "Notification"
										},
										{
											"language": "NO",
											"value": "Melding"
										},
										{
											"language": "DE",
											"value": "Benachrichtigung"
										},
										{
											"language": "EN",
											"value": "Notification"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "3f2e3d36-9da6-4edb-bba5-bf330491fd6f",
							"fieldName": "AppCache_tSentActivationCode",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Activation Code Sent",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "アクティベーションコード送信"
										},
										{
											"language": "ZH",
											"value": "已发送激活码"
										},
										{
											"language": "DA",
											"value": "Aktiveringskode sendt"
										},
										{
											"language": "NL",
											"value": "Activeringscode verzonden"
										},
										{
											"language": "FI",
											"value": "Aktivointikoodi lähetetty"
										},
										{
											"language": "IT",
											"value": "Codice di attivazione inviato"
										},
										{
											"language": "PL",
											"value": "Wysłano kod aktywacyjny"
										},
										{
											"language": "PT",
											"value": "Código de ativação enviado"
										},
										{
											"language": "ES",
											"value": "Código de activación enviado"
										},
										{
											"language": "SV",
											"value": "Aktiveringskod skickad"
										},
										{
											"language": "FR",
											"value": "Code d'activation envoyé"
										},
										{
											"language": "NO",
											"value": "Aktiveringskode sendt"
										},
										{
											"language": "DE",
											"value": "Aktivierungscode gesendet"
										},
										{
											"language": "EN",
											"value": "Activation Code Sent"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "6e1ab0fe-dba1-4998-827a-f4059b5f3e04",
							"fieldName": "AppCache_txtNotLoaded",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Not loaded",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "読み込まれていない"
										},
										{
											"language": "ZH",
											"value": "没装"
										},
										{
											"language": "DA",
											"value": "Ikke indlæst"
										},
										{
											"language": "NL",
											"value": "Niet geladen"
										},
										{
											"language": "FI",
											"value": "Ei ladattu"
										},
										{
											"language": "IT",
											"value": "Non caricato"
										},
										{
											"language": "PL",
											"value": "Nie załadowano"
										},
										{
											"language": "PT",
											"value": "Não carregado"
										},
										{
											"language": "ES",
											"value": "Sin cargar"
										},
										{
											"language": "SV",
											"value": "Inte laddad"
										},
										{
											"language": "FR",
											"value": "Pas chargé"
										},
										{
											"language": "NO",
											"value": "Ikke lastet"
										},
										{
											"language": "DE",
											"value": "Nicht geladen"
										},
										{
											"language": "EN",
											"value": "Not loaded"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "b7389d05-5851-4f19-a716-cb457fdc5c43",
							"fieldName": "AppCache_tEnableFingerprint",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Enable Fingerprint Authentication?",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "指紋認証を有効にしますか？"
										},
										{
											"language": "ZH",
											"value": "启用指纹认证？"
										},
										{
											"language": "DA",
											"value": "Aktivér fingerprinter-godkendelse?"
										},
										{
											"language": "NL",
											"value": "Vingerafdrukverificatie inschakelen?"
										},
										{
											"language": "FI",
											"value": "Ota sormenjälkitunnistus käyttöön?"
										},
										{
											"language": "IT",
											"value": "Abilitare l'autenticazione dell'impronta digitale?"
										},
										{
											"language": "PL",
											"value": "Włączyć uwierzytelnianie odcisków palców?"
										},
										{
											"language": "PT",
											"value": "Ativar autenticação de impressão digital?"
										},
										{
											"language": "ES",
											"value": "¿Habilitar la autenticación de huellas digitales?"
										},
										{
											"language": "SV",
											"value": "Aktivera fingeravtrycksautentisering?"
										},
										{
											"language": "FR",
											"value": "Activer l'authentification d'empreinte digitale?"
										},
										{
											"language": "NO",
											"value": "Aktiver fingeravtrykksautentisering?"
										},
										{
											"language": "DE",
											"value": "Fingerabdruck-Authentifizierung aktivieren?"
										},
										{
											"language": "EN",
											"value": "Enable Fingerprint Authentication?"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "e65b4a8e-3d32-4e06-9a4a-f657ef311e80",
							"fieldName": "AppCache_tEnableFaceId",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Enable Face-ID Authentication?",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "顔ID認証を有効にしますか？"
										},
										{
											"language": "ZH",
											"value": "启用面部身份验证？"
										},
										{
											"language": "DA",
											"value": "Aktivér ansigts-id-godkendelse?"
										},
										{
											"language": "NL",
											"value": "Face-ID-verificatie inschakelen?"
										},
										{
											"language": "FI",
											"value": "Ota käyttöön ID-tunnistus?"
										},
										{
											"language": "IT",
											"value": "Abilitare l'autenticazione Face-ID?"
										},
										{
											"language": "PL",
											"value": "Włączyć uwierzytelnianie Face-ID?"
										},
										{
											"language": "PT",
											"value": "Ativar autenticação Face-ID?"
										},
										{
											"language": "ES",
											"value": "¿Habilitar la autenticación de ID de cara?"
										},
										{
											"language": "SV",
											"value": "Aktivera ansikt-ID-autentisering?"
										},
										{
											"language": "FR",
											"value": "Activer l'authentification par visage?"
										},
										{
											"language": "NO",
											"value": "Aktiver ansikts-ID-godkjenning?"
										},
										{
											"language": "DE",
											"value": "Face-ID Authentifizierung aktivieren?"
										},
										{
											"language": "EN",
											"value": "Enable Face-ID Authentication?"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "f0ff7faf-a8d1-41d0-f682-c0ee23bc46ad",
							"fieldName": "AppCache_tRestartForced",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "System settings received.",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "システム設定を受信しました。"
										},
										{
											"language": "ZH",
											"value": "收到系统设置。"
										},
										{
											"language": "DA",
											"value": "Systemindstillinger modtaget."
										},
										{
											"language": "NL",
											"value": "Systeeminstellingen ontvangen."
										},
										{
											"language": "FI",
											"value": "Järjestelmän asetukset on vastaanotettu."
										},
										{
											"language": "IT",
											"value": "Impostazioni di sistema ricevute."
										},
										{
											"language": "PL",
											"value": "Otrzymano ustawienia systemowe."
										},
										{
											"language": "PT",
											"value": "Configurações do sistema recebidas."
										},
										{
											"language": "ES",
											"value": "Configuraciones del sistema recibidas."
										},
										{
											"language": "SV",
											"value": "Systeminställningar mottagna."
										},
										{
											"language": "FR",
											"value": "Paramètres système reçus."
										},
										{
											"language": "NO",
											"value": "Systeminnstillinger mottatt."
										},
										{
											"language": "DE",
											"value": "Systemeinstellungen erhalten"
										},
										{
											"language": "EN",
											"value": "System settings received."
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "69aece2a-08b3-4c88-c970-2bdf6819d890",
							"fieldName": "AppCache_tOpen",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Open",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "開いた"
										},
										{
											"language": "ZH",
											"value": "打开"
										},
										{
											"language": "DA",
											"value": "Åben"
										},
										{
											"language": "NL",
											"value": "Open"
										},
										{
											"language": "FI",
											"value": "Avata"
										},
										{
											"language": "IT",
											"value": "Aperto"
										},
										{
											"language": "PL",
											"value": "otwarty"
										},
										{
											"language": "PT",
											"value": "Abrir"
										},
										{
											"language": "ES",
											"value": "Abierto"
										},
										{
											"language": "SV",
											"value": "Öppna"
										},
										{
											"language": "FR",
											"value": "Ouvrir"
										},
										{
											"language": "NO",
											"value": "Åpne"
										},
										{
											"language": "DE",
											"value": "Öffnen"
										},
										{
											"language": "EN",
											"value": "Open"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "d8e9b1a5-c0ae-436b-a967-7365ef325774",
							"fieldName": "AppCache_tAddFav",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Add to favorite",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "お気に入りに追加"
										},
										{
											"language": "ZH",
											"value": "加入我的最爱"
										},
										{
											"language": "DA",
											"value": "Tilføj til favorit"
										},
										{
											"language": "NL",
											"value": "Toevoegen aan favorieten"
										},
										{
											"language": "FI",
											"value": "Lisää suosikkeihin"
										},
										{
											"language": "IT",
											"value": "Aggiungi ai favoriti"
										},
										{
											"language": "PL",
											"value": "Dodaj do ulubionych"
										},
										{
											"language": "PT",
											"value": "Adicionar aos favoritos"
										},
										{
											"language": "ES",
											"value": "Agregar a Favoritos"
										},
										{
											"language": "SV",
											"value": "Lägg till som favorit"
										},
										{
											"language": "FR",
											"value": "Ajouter aux Favoris"
										},
										{
											"language": "NO",
											"value": "Legg til i favoritter"
										},
										{
											"language": "DE",
											"value": "Zu Favoriten hinzufügen"
										},
										{
											"language": "EN",
											"value": "Add to favorite"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "5903fbe0-c019-4e63-8cf7-bb2d5019a1af",
							"fieldName": "AppCache_tDelFav",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Delete from favorite",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "お気に入りから削除"
										},
										{
											"language": "ZH",
											"value": "从收藏中删除"
										},
										{
											"language": "DA",
											"value": "Slet fra favorit"
										},
										{
											"language": "NL",
											"value": "Verwijderen van favoriet"
										},
										{
											"language": "FI",
											"value": "Poista suosikista"
										},
										{
											"language": "IT",
											"value": "Elimina dai preferiti"
										},
										{
											"language": "PL",
											"value": "Usuń z ulubionych"
										},
										{
											"language": "PT",
											"value": "Excluir do favorito"
										},
										{
											"language": "ES",
											"value": "Eliminar de favorito"
										},
										{
											"language": "SV",
											"value": "Ta bort från favorit"
										},
										{
											"language": "FR",
											"value": "Supprimer du favori"
										},
										{
											"language": "NO",
											"value": "Slett fra favoritter"
										},
										{
											"language": "DE",
											"value": "Aus Favoriten enfernen"
										},
										{
											"language": "EN",
											"value": "Delete from favorite"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "b423f8c6-2812-4533-e7a2-529484fb3e37",
							"fieldName": "AppCache_tHelp",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Help",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "お気に入りから削除"
										},
										{
											"language": "ZH",
											"value": "从收藏中删除"
										},
										{
											"language": "DA",
											"value": "Hjælp"
										},
										{
											"language": "NL",
											"value": "Helpen"
										},
										{
											"language": "FI",
											"value": "auta"
										},
										{
											"language": "IT",
											"value": "Aiuto"
										},
										{
											"language": "PL",
											"value": "Wsparcie"
										},
										{
											"language": "PT",
											"value": "Socorro"
										},
										{
											"language": "ES",
											"value": "Ayuda"
										},
										{
											"language": "SV",
											"value": "Hjälp"
										},
										{
											"language": "FR",
											"value": "Aidez-moi"
										},
										{
											"language": "NO",
											"value": "Hjelp"
										},
										{
											"language": "DE",
											"value": "Hilfe"
										},
										{
											"language": "EN",
											"value": "Help"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "09cc1170-1730-401b-cff2-71f9b943eed5",
							"fieldName": "AppCache_tDelFavConfirm",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Do you want to remove this tile from your favorites ?",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "あなたのお気に入りからこのタイルを削除しますか？"
										},
										{
											"language": "ZH",
											"value": "您想从收藏夹中删除此图块吗？"
										},
										{
											"language": "DA",
											"value": "Vil du fjerne denne flise fra dine favoritter?"
										},
										{
											"language": "NL",
											"value": "Wil je deze tegel van je favorieten verwijderen?"
										},
										{
											"language": "FI",
											"value": "Haluatko poistaa tämän laatan suosikeistasi?"
										},
										{
											"language": "IT",
											"value": "Vuoi rimuovere questa tessera dai tuoi preferiti?"
										},
										{
											"language": "PL",
											"value": "Czy chcesz usunąć ten kafelek z ulubionych?"
										},
										{
											"language": "PT",
											"value": "Quer remover este bloco de seus favoritos?"
										},
										{
											"language": "ES",
											"value": "¿Quieres eliminar este mosaico de tus favoritos?"
										},
										{
											"language": "SV",
											"value": "Vill du ta bort denna kakel från dina favoriter?"
										},
										{
											"language": "FR",
											"value": "Voulez-vous supprimer cette vignette de vos favoris?"
										},
										{
											"language": "NO",
											"value": "Vil du fjerne denne flisen fra favorittene dine?"
										},
										{
											"language": "DE",
											"value": "Möchten Sie diese Kachel aus Ihren Favoriten entfernen?"
										},
										{
											"language": "EN",
											"value": "Do you want to remove this tile from your favorites ?"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "6f1d0aa8-5051-4d36-894b-0a36d71c46fa",
							"fieldName": "AppCache_tFavTitle",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Favorite",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "あなたのお気に入りからこのタイルを削除しますか？"
										},
										{
											"language": "ZH",
											"value": "您想从收藏夹中删除此图块吗？"
										},
										{
											"language": "DA",
											"value": "Favorit"
										},
										{
											"language": "NL",
											"value": "Favoriet"
										},
										{
											"language": "FI",
											"value": "Suosikki"
										},
										{
											"language": "IT",
											"value": "Preferito"
										},
										{
											"language": "PL",
											"value": "Ulubiony"
										},
										{
											"language": "PT",
											"value": "Favorito"
										},
										{
											"language": "ES",
											"value": "Favorito"
										},
										{
											"language": "SV",
											"value": "Favorit"
										},
										{
											"language": "FR",
											"value": "Favori"
										},
										{
											"language": "NO",
											"value": "Favoritt"
										},
										{
											"language": "DE",
											"value": "Favorit"
										},
										{
											"language": "EN",
											"value": "Favorite"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "f1fc7eb3-d891-4a82-94b7-597c9859380b",
							"fieldName": "AppCache_tFavConfirm",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Confirmation needed",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "あなたのお気に入りからこのタイルを削除しますか？"
										},
										{
											"language": "ZH",
											"value": "您想从收藏夹中删除此图块吗？"
										},
										{
											"language": "DA",
											"value": "Bekræftelse nødvendig"
										},
										{
											"language": "NL",
											"value": "Bevestiging nodig"
										},
										{
											"language": "FI",
											"value": "Vahvistus tarvitaan"
										},
										{
											"language": "IT",
											"value": "Conferma necessaria"
										},
										{
											"language": "PL",
											"value": "Wymagane potwierdzenie"
										},
										{
											"language": "PT",
											"value": "Confirmação necessária"
										},
										{
											"language": "ES",
											"value": "Confirmación necesaria"
										},
										{
											"language": "SV",
											"value": "Bekräftelse behövs"
										},
										{
											"language": "FR",
											"value": "Confirmation nécessaire"
										},
										{
											"language": "NO",
											"value": "Bekreftelse nødvendig"
										},
										{
											"language": "DE",
											"value": "Bestätigung erforderlich"
										},
										{
											"language": "EN",
											"value": "Confirmation needed"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "47fb3e99-1899-4636-b064-8ad1b6e3ba6a",
							"fieldName": "AppCache_tDelFavRemove",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Yes, remove",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "はい、削除します"
										},
										{
											"language": "ZH",
											"value": "是的，删除"
										},
										{
											"language": "DA",
											"value": "Ja, fjern"
										},
										{
											"language": "NL",
											"value": "Ja, verwijder"
										},
										{
											"language": "FI",
											"value": "Kyllä, poista"
										},
										{
											"language": "IT",
											"value": "Sì, rimuovi"
										},
										{
											"language": "PL",
											"value": "Tak, usuń"
										},
										{
											"language": "PT",
											"value": "Sim, remover"
										},
										{
											"language": "ES",
											"value": "Si remover"
										},
										{
											"language": "SV",
											"value": "Ja, ta bort"
										},
										{
											"language": "FR",
											"value": "Oui, enlever"
										},
										{
											"language": "NO",
											"value": "Ja, fjern"
										},
										{
											"language": "DE",
											"value": "Ja, entfernen"
										},
										{
											"language": "EN",
											"value": "Yes, remove"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "a63636f4-e1da-4006-a381-5b4f304ea1d5",
							"fieldName": "AppCache_tIncompatible",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Incompatible",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "相容れない"
										},
										{
											"language": "ZH",
											"value": "不相容"
										},
										{
											"language": "DA",
											"value": "Uforenelig"
										},
										{
											"language": "NL",
											"value": "Onverenigbaar"
										},
										{
											"language": "FI",
											"value": "yhteensopimaton"
										},
										{
											"language": "IT",
											"value": "Incompatibile"
										},
										{
											"language": "PL",
											"value": "Niekompatybilny"
										},
										{
											"language": "PT",
											"value": "Incompatível"
										},
										{
											"language": "ES",
											"value": "Incompatible"
										},
										{
											"language": "SV",
											"value": "Oförenlig"
										},
										{
											"language": "FR",
											"value": "Incompatible"
										},
										{
											"language": "NO",
											"value": "Uforenlig"
										},
										{
											"language": "DE",
											"value": "Inkompatibel"
										},
										{
											"language": "EN",
											"value": "Incompatible"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "4e67fdd6-62e7-46f5-ed4a-5ef98c192e3f",
							"fieldName": "AppCache_tNoUserInfo",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "No stored user info found. Please re-login",
									"script": "",
									"translation": [
										{
											"language": "JA",
											"value": "相容れない"
										},
										{
											"language": "ZH",
											"value": "不相容"
										},
										{
											"language": "DA",
											"value": "Uforenelig"
										},
										{
											"language": "NL",
											"value": "Onverenigbaar"
										},
										{
											"language": "FI",
											"value": "yhteensopimaton"
										},
										{
											"language": "IT",
											"value": "Incompatibile"
										},
										{
											"language": "PL",
											"value": "Nie znaleziono zapisanych informacji o użytkowniku. Proszę zaloguj się ponownie"
										},
										{
											"language": "PT",
											"value": "Incompatível"
										},
										{
											"language": "ES",
											"value": "Incompatible"
										},
										{
											"language": "SV",
											"value": "Oförenlig"
										},
										{
											"language": "FR",
											"value": "Incompatible"
										},
										{
											"language": "NO",
											"value": "Uforenlig"
										},
										{
											"language": "DE",
											"value": "Inkompatibel"
										},
										{
											"language": "EN",
											"value": "No stored user info found. Please re-login"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "bf54fdb1-a0ac-405c-c65f-70dfc0c2403c",
							"fieldName": "AppCache_tDownloading",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Downloading new version",
									"script": "",
									"translation": [
										{
											"language": "1",
											"value": "下载新版本"
										},
										{
											"language": "D",
											"value": "Neue Version wird geladen…"
										},
										{
											"language": "F",
											"value": "Téléchargement d'une nouvelle version"
										},
										{
											"language": "K",
											"value": "Downloader ny version..."
										},
										{
											"language": "O",
											"value": "Laster ned ny versjon..."
										},
										{
											"language": "P",
											"value": "Download da nova versão"
										},
										{
											"language": "R",
											"value": "Загрузка новой версии"
										},
										{
											"language": "S",
											"value": "Descargando nueva versión"
										},
										{
											"language": "W",
											"value": "Изтегляне на нова версия"
										},
										{
											"language": "DA",
											"value": "Downloader ny version"
										},
										{
											"language": "IT",
											"value": "Download nuova versione"
										},
										{
											"language": "PL",
											"value": "Pobieranie nowej wersji"
										},
										{
											"language": "PT",
											"value": "Baixando nova versão"
										},
										{
											"language": "ES",
											"value": "Descargando nueva versión"
										},
										{
											"language": "SV",
											"value": "Nedladdning av ny version"
										},
										{
											"language": "FR",
											"value": "Téléchargement d'une nouvelle version"
										},
										{
											"language": "NO",
											"value": "Laster ned ny versjon"
										},
										{
											"language": "DE",
											"value": "Neue Version herunterladen"
										},
										{
											"language": "EN",
											"value": "Downloading new version"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "2b4188c3-1fee-4d9e-b9db-4353624dc0ba",
							"fieldName": "AppCache_tPWAUpdate",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "New version available. Reload required",
									"script": "",
									"translation": [
										{
											"language": "1",
											"value": "下载新版本"
										},
										{
											"language": "D",
											"value": "Neue Version wird geladen…"
										},
										{
											"language": "F",
											"value": "Téléchargement d'une nouvelle version"
										},
										{
											"language": "K",
											"value": "Downloader ny version..."
										},
										{
											"language": "O",
											"value": "Laster ned ny versjon..."
										},
										{
											"language": "P",
											"value": "Download da nova versão"
										},
										{
											"language": "R",
											"value": "Загрузка новой версии"
										},
										{
											"language": "S",
											"value": "Descargando nueva versión"
										},
										{
											"language": "W",
											"value": "Изтегляне на нова версия"
										},
										{
											"language": "PL",
											"value": "Nowa wersja dostępna. Wymagane ponowne załadowanie"
										},
										{
											"language": "EN",
											"value": "New version available. Reload required"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "d2e4cf32-6edf-4d0c-cf29-82669d6218de",
							"fieldName": "AppCache_tPWAInfo",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"onlyDeclare": true,
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Update Available",
									"script": "",
									"translation": [
										{
											"language": "1",
											"value": "下载新版本"
										},
										{
											"language": "D",
											"value": "Neue Version wird geladen…"
										},
										{
											"language": "F",
											"value": "Téléchargement d'une nouvelle version"
										},
										{
											"language": "K",
											"value": "Downloader ny version..."
										},
										{
											"language": "O",
											"value": "Laster ned ny versjon..."
										},
										{
											"language": "P",
											"value": "Download da nova versão"
										},
										{
											"language": "R",
											"value": "Загрузка новой версии"
										},
										{
											"language": "S",
											"value": "Descargando nueva versión"
										},
										{
											"language": "W",
											"value": "Изтегляне на нова версия"
										},
										{
											"language": "PL",
											"value": "Dostępna aktualizacja"
										},
										{
											"language": "EN",
											"value": "Update Available"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "d3a03661-29d8-4933-cccc-3eebafb31796",
							"fieldName": "AppCache_Screen_Login",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Login",
									"script": "",
									"translation": [
										{
											"language": "PL",
											"value": "Zaloguj sie"
										},
										{
											"language": "EN",
											"value": "Login"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "0937e5fa-b68a-452b-c794-2872f71401e7",
							"fieldName": "AppCache_Screen_PIN",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Set PIN Code",
									"script": "",
									"translation": [
										{
											"language": "PL",
											"value": "Ustaw kod PIN"
										},
										{
											"language": "EN",
											"value": "Set PIN Code"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "1aff3f71-8384-4c97-f145-a910fd2394c8",
							"fieldName": "AppCache_Screen_PINEntry",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "PIN Code",
									"script": "",
									"translation": [
										{
											"language": "PL",
											"value": "Kod PIN"
										},
										{
											"language": "EN",
											"value": "PIN Code"
										}
									]
								}
							],
							"data": []
						},
						{
							"fieldNo": "704176cb-6989-49df-9dfe-a525d4b09525",
							"fieldName": "AppCache_Screen_Users",
							"fieldParent": "a4096929-0f8e-49c6-ba36-b136359e96b2",
							"fieldType": "sap.m.Text",
							"script": "",
							"request": [],
							"response": [],
							"attributes": [
								{
									"attribute": "text",
									"grouping": "Properties",
									"value": "Users",
									"script": "",
									"translation": [
										{
											"language": "PL",
											"value": "Użytkownicy"
										},
										{
											"language": "NO",
											"value": "Brukere"
										},
										{
											"language": "EN",
											"value": "Users"
										}
									]
								}
							],
							"data": []
						}
					]
				},
				{
					"fieldNo": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
					"fieldName": "Functions",
					"fieldParent": 99999,
					"fieldType": "neptune.folder",
					"script": "",
					"request": [],
					"response": [],
					"attributes": [],
					"data": [
						{
							"fieldNo": "2db642c8-fb46-4eb8-cac8-2a297b6ff606",
							"fieldName": "jquery",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"jQuery.sap.require('sap.m.MessageBox');",
								"jQuery.sap.require('jquery.sap.storage');",
								"",
								"// common jQuery funcs",
								"function serializeDataForQueryString(data) {",
								"    return jQuery.param(data);",
								"}",
								"",
								"function request(opts) {",
								"    if (typeof opts.url === undefined) throw new Error('request: no url provided for the request');",
								"    return jQuery.ajax(Object.assign({}, opts));",
								"}",
								"",
								"function jsonRequest(opts) {",
								"    return request(",
								"        Object.assign({}, {",
								"            type: 'POST',",
								"            contentType: 'application/json',",
								"        }, opts)",
								"    );",
								"}",
								"",
								"function sapLoadLanguage(lang) {",
								"    return jQuery.sap.loadResource(`sap/ui/core/cldr/${lang}.json`, {",
								"        'async': true,",
								"        dataType: 'json',",
								"        failOnError: true,",
								"    });",
								"}",
								"",
								"function sapStorageGet(k) {",
								"    return jQuery.sap.storage(jQuery.sap.storage.Type.local).get(k);",
								"}",
								"",
								"function sapStoragePut(k, v) {",
								"    return jQuery.sap.storage(jQuery.sap.storage.Type.local).put(k, v);",
								"}"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "65b87b65-78d9-4061-f36e-028a3e4c4f36",
							"fieldName": "encryption",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"function generatePBKDF2Key(phrase, salt) {",
								"    return CryptoJS.PBKDF2(phrase, salt, {",
								"        keySize: 256 / 32,",
								"        iterations: typeof AppCache.pincodeKeyIterations !== 'undefined' ? AppCache.pincodeKeyIterations : 10,",
								"    });",
								"}",
								"",
								"function encryptAES(msg, secret) {",
								"    return CryptoJS.AES.encrypt(msg, secret);",
								"}",
								"",
								"function decryptAES(encrypted, secret) {",
								"    const decrypted = CryptoJS.AES.decrypt(encrypted, secret);",
								"    return decrypted.toString(CryptoJS.enc.Utf8);",
								"}"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "f93f4fed-7445-4133-d436-f934b7180c37",
							"fieldName": "helpers",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"function isTouchScreen() {",
								"    return sap.ui.Device.support.touch;",
								"}",
								"",
								"function isWidthGTE(width = 1000) {",
								"    return window.innerWidth >= width;",
								"}",
								"",
								"function nepPrefix() {",
								"    return `__nep`;",
								"}",
								"",
								"function hasNepPrefix(className) {",
								"    return className.startsWith(nepPrefix());",
								"}",
								"",
								"function nepId() {",
								"    return `${nepPrefix()}${ModelData.genID()}`;",
								"}",
								"",
								"function includesJSView(id) {",
								"    return id.includes('__jsview');",
								"}",
								"",
								"function sectionPrefix() {",
								"    return '__nepsection';",
								"}",
								"",
								"function isSection(id) {",
								"    return id.includes(sectionPrefix());",
								"}",
								"",
								"function closeContentNavigator() {",
								"    launchpadContentNavigator.setWidth('0px');",
								"}",
								"",
								"// AppCache Logging",
								"function appCacheLog(args) {",
								"    if (AppCache.enableLogging) console.log(args);",
								"}",
								"",
								"function appCacheError(args) {",
								"    if (AppCache.enableLogging) console.error(args);",
								"}",
								"",
								"function getFieldBindingText(field) {",
								"    const k = field.name;",
								"    return field.valueType ? `{${k}_value}` : `{${k}}`;",
								"}",
								"",
								"function setTextAndOpenDialogText(title, html) {",
								"    AppCacheText.setTitle(title);",
								"    document.getElementById('textDiv').innerHTML = html;",
								"    diaText.open();",
								"}",
								"",
								"// DOM",
								"function elById(id) {",
								"    return document.getElementById(id);",
								"}",
								"",
								"function querySelector(path) {",
								"    return document.querySelector(path);",
								"}",
								"",
								"function applyCSSToElmId(id, props) {",
								"    const el = elById(id);",
								"    if (!el) return;",
								"",
								"    Object.entries(props).forEach(function ([k, v]) {",
								"        el.style[k] = v;",
								"    });",
								"}",
								"",
								"function insertBeforeElm(el, newEl) {",
								"    if (!el || !newEl) return;",
								"    ",
								"    const parent = el.parentNode;",
								"    parent.insertBefore(newEl, el);",
								"}",
								"",
								"function addClass(el, list) {",
								"    if (!el) return;",
								"",
								"    list.forEach(function (name) {",
								"        el.classList.add(name);",
								"    });",
								"}",
								"",
								"function removeClass(el, list) {",
								"    if (!el) return;",
								"",
								"    list.forEach(function (name) {",
								"        el.classList.remove(name);",
								"    });",
								"}",
								"",
								"function getStyle(el, name) { return el.style[name]; }",
								"function setStyle(el, name, value) { el.style[name] = value; }",
								"",
								"function getWidth(el) { return el ? el.offsetWidth : 0; }",
								"function getHeight(el) { return el ? el.offsetHeight : 0; }",
								"",
								"function setWidth(el, width) { return el && (el.style.width = `${width}px`); }",
								"function setHeight(el, height) { return el && (el.style.height = `${height}px`); }",
								"",
								"function hideChildren(elPath) {",
								"    const el = document.querySelector(elPath);",
								"    if (!el) return;",
								"",
								"    [].slice.call(el.children).forEach(function (child) {",
								"        child.style.display = 'none';",
								"    });",
								"}",
								"",
								"function appendStylesheetToHead(href) {",
								"    const link = document.createElement('link');",
								"    link.rel = 'stylesheet';",
								"    link.type = 'text/css';",
								"    link.href = href;",
								"    document.head.appendChild(link);",
								"}",
								"",
								"function appendIFrame(targetEl, params) {",
								"    const iframe = document.createElement('iframe');",
								"    Object.entries(params).forEach(function ([k, v]) {",
								"        iframe.setAttribute(k, v);",
								"    });",
								"    targetEl.appendChild(iframe);",
								"}",
								"",
								"function createStyle(cssText) {",
								"    const s = document.createElement('style');",
								"    s.appendChild(document.createTextNode(cssText))",
								"    return s;",
								"}",
								"",
								"function appendStyle(targetEl, style) {",
								"    if (!targetEl) return;",
								"    targetEl.appendChild(style);",
								"}",
								"",
								"// Launchpad issues",
								"",
								"function isLaunchpadNotFound(status) {",
								"    return status !== undefined && typeof status === 'string' && status.toLowerCase().includes('unable to find the launchpad');",
								"}",
								"",
								"function showLaunchpadNotFoundError(status) {",
								"    sap.m.MessageBox.show(status, {",
								"        title: 'Launchpad Error',",
								"        onClose: function (oAction) {",
								"            if (AppCache.isMobile) {",
								"                if (AppCache.enablePasscode) {",
								"                    AppCache.Lock();",
								"                } else {",
								"                    AppCache.Logout();",
								"                }",
								"            }",
								"        }",
								"    });",
								"}",
								"",
								"function setiOSPwaIcons() {",
								"    if (!sap.ui.Device.os.ios) {",
								"        return;",
								"    }",
								"    ",
								"    jsonRequest({ type: 'GET', url: `${AppCache.Url}/public/launchpad/${AppCache.launchpadID}/pwa.json` }).then((data) => {",
								"        function setIcon(icon, href) {",
								"            document.querySelector(`link[rel='${icon}'`).setAttribute('href', href);",
								"        }",
								"",
								"        if (!data.icons.length) {",
								"            return;",
								"        }",
								"        ",
								"        const src = data.icons[0].src;",
								"",
								"        setIcon('shortcut icon', src);",
								"        setIcon('icon', src);",
								"        setIcon('apple-touch-icon', src);",
								"    });",
								"}",
								"",
								"function setSelectedLoginType(type) {",
								"    localStorage.setItem('selectedLoginType', type);",
								"    AppCacheUserActionPassword.setVisible(type === 'local');",
								"}",
								"",
								"function clearSelectedLoginType() {",
								"    localStorage.removeItem('selectedLoginType');",
								"}",
								""
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "79bcd662-5175-4be8-c1f9-f2c740142f45",
							"fieldName": "neptune.ElementQuery",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"'undefined' == typeof neptune && (neptune = {}), neptune.ElementQuery = {\r",
								"    register: function (i, s) {\r",
								"        let t = new this._ElementQueryClass(s);\r",
								"        sap.ui.core.ResizeHandler.register(i, function (s) {\r",
								"            t.resize(i, s.size.width)\r",
								"        })\r",
								"    },\r",
								"    _ElementQueryClass: function (s) {\r",
								"        s = s || {}, this.isolate = s.isolate || !1, this.debug = s.debug || !1, this.debugCallback = s.debugCallback || function (s) { }, this.callback = s.callback || function (s) { }, this.prefix = s.prefix || 'nepCanvas', this.canvas = {\r",
								"            XXXXL: 8,\r",
								"            XXXL: 7,\r",
								"            XXL: 6,\r",
								"            XL: 5,\r",
								"            L: 4,\r",
								"            M: 3,\r",
								"            S: 2,\r",
								"            XS: 1\r",
								"        }, this.width = {\r",
								"            xxxlarge: 2360,\r",
								"            xxlarge: 1880,\r",
								"            xlarge: 1580,\r",
								"            large: 1280,\r",
								"            medium: 980,\r",
								"            small: 680,\r",
								"            xsmall: 380\r",
								"        }, this.size = 9, s.width && (this.width.xxxlarge = s.width.xxxlarge || this.width.xxxlarge, this.width.xxlarge = s.width.xxlarge || this.width.xxlarge, this.width.xlarge = s.width.xlarge || this.width.xlarge, this.width.large = s.width.large || this.width.large, this.width.medium = s.width.medium || this.width.medium, this.width.small = s.width.small || this.width.small, this.width.xsmall = s.width.xsmall || this.width.xsmall), this.resize = function (s, i) {\r",
								"            let t, e;\r",
								"            0 !== i && (this.size > this.canvas.XXXXL && i > this.width.xxxlarge || i > this.width.xxxlarge && this.size !== this.canvas.XXXXL ? t = this.canvas.XXXXL : i <= this.width.xxxlarge && i > this.width.xxlarge && this.size !== this.canvas.XXXL ? t = this.canvas.XXXL : i <= this.width.xxlarge && i > this.width.xlarge && this.size !== this.canvas.XXL ? t = this.canvas.XXL : i <= this.width.xlarge && i > this.width.large && this.size !== this.canvas.XL ? t = this.canvas.XL : i <= this.width.large && i > this.width.medium && this.size !== this.canvas.L ? t = this.canvas.L : i <= this.width.medium && i > this.width.small && this.size !== this.canvas.M ? t = this.canvas.M : i <= this.width.small && i > this.width.xsmall && this.size !== this.canvas.S ? t = this.canvas.S : i <= this.width.xsmall && this.size !== this.canvas.XS && (t = this.canvas.XS), t && (this.size = t, this.debug && console.log('Resizing: ' + s.getId() + ' to -> ' + this.size), s.removeStyleClass(this.prefix + 'Full'), s.removeStyleClass(this.prefix + 'XXXLarge'), s.removeStyleClass(this.prefix + 'XXLarge'), s.removeStyleClass(this.prefix + 'XLarge'), s.removeStyleClass(this.prefix + 'Large'), s.removeStyleClass(this.prefix + 'Medium'), s.removeStyleClass(this.prefix + 'Small'), s.removeStyleClass(this.prefix + 'XSmall'), this.isolate ? (e = this.getWidth(this.size), this.size < this.canvas.XXXXL ? s.addStyleClass(this.prefix + e) : s.addStyleClass(this.prefix + 'Full')) : e = this.addAllClasses(this.size, s), this.callback({\r",
								"                width: i,\r",
								"                size: e\r",
								"            })), this.debug && (console.log('Width of ' + s.getId() + ' -> ' + i), this.debugCallback({\r",
								"                width: i,\r",
								"                size: this.getWidth(this.size)\r",
								"            })))\r",
								"        }, this.addAllClasses = function (s, i) {\r",
								"            let t = 'XXXXLarge';\r",
								"            return s <= this.canvas.XXXL && (t = 'XXXLarge', i.addStyleClass(this.prefix + t)), s <= this.canvas.XXL && (t = 'XXLarge', i.addStyleClass(this.prefix + t)), s <= this.canvas.XL && (t = 'XLarge', i.addStyleClass(this.prefix + t)), s <= this.canvas.L && (t = 'Large', i.addStyleClass(this.prefix + t)), s <= this.canvas.M && (t = 'Medium', i.addStyleClass(this.prefix + t)), s <= this.canvas.S && (t = 'Small', i.addStyleClass(this.prefix + t)), s <= this.canvas.XS && (t = 'XSmall', i.addStyleClass(this.prefix + t)), t\r",
								"        }, this.getWidth = function (s) {\r",
								"            return 1 === s ? 'XSmall' : 2 === s ? 'Small' : 3 === s ? 'Medium' : 4 === s ? 'Large' : 5 === s ? 'XLarge' : 6 === s ? 'XXLarge' : 7 === s ? 'XXXLarge' : 'XXXXLarge'\r",
								"        }\r",
								"    }\r",
								"};"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "99502fb7-e080-4f4b-e8eb-04af31d5bbbb",
							"fieldName": "sap.n.Adaptive",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"sap.n.Adaptive = {\r",
								"\r",
								"    configurations: {},\r",
								"    pages: {},\r",
								"    dialogs: {},\r",
								"\r",
								"    // Launchpad\r",
								"    initApp: function (report) {\r",
								"        sap.n.Shell.attachBeforeDisplay(function (data) {\r",
								"            if (localAppID !== 'ADAPTIVEDESIGNER') {\r",
								"                report.init(data, true);\r",
								"                return;\r",
								"            }\r",
								"\r",
								"            // Update Metadata\r",
								"            nwd.adaptive.loadMetaData(report.metadata);\r",
								"\r",
								"            let config = null;\r",
								"            // Handle BI Template - for 2-way binding\r",
								"            if (data.application === 'planet9_adaptive_bi') {\r",
								"                config = data;\r",
								"            } else {\r",
								"                config = JSON.parse(JSON.stringify(data));\r",
								"                config.settings.events = data.settings.events;\r",
								"            }\r",
								"            report.init(config, false);\r",
								"        });\r",
								"    },\r",
								"\r",
								"    run: function (config, appdata, method) {\r",
								"        return new Promise(function (resolve) {\r",
								"            // Check required fields\r",
								"            let valid = true;\r",
								"            if (method !== 'Get') {\r",
								"                const canBeValidated = config.settings.fieldsRun.filter(function ({ visible }) {\r",
								"                    return visible;\r",
								"                }).map(function ({ name }) {\r",
								"                    return name;\r",
								"                });\r",
								"                let requiredFields = config.settings.fieldsSel.filter(function ({ name, required }) {\r",
								"                    return required && canBeValidated.includes(name);\r",
								"                });\r",
								"                valid = sap.n.Adaptive.checkRequiredSel(requiredFields, appdata);\r",
								"            }\r",
								"            if (!valid) return resolve({ status: 'required' });\r",
								"\r",
								"            // New Record\r",
								"            if (method === 'Get' && !appdata) return resolve({});\r",
								"\r",
								"            // Script Startparameter\r",
								"            const s = config.settings;\r",
								"            const p = config.properties;\r",
								"            if (s && s.properties.report.scriptparam) appdata._startparam = s.properties.report.scriptparam;\r",
								"            if (p && p.report.scriptparam) appdata._startparam = p.report.scriptparam;\r",
								"\r",
								"            jsonRequest({\r",
								"                url: `${AppCache.Url}/api/functions/Adaptive/RunReport?report=${config.id}&method=${method}`,\r",
								"                data: JSON.stringify(appdata),\r",
								"                success: function (data) {\r",
								"                    if (method === 'Get') return resolve(Array.isArray(data) ? data[0] : data);\r",
								"                    resolve(data);\r",
								"                },\r",
								"                error: function (result, _status) {\r",
								"                    resolve(result);\r",
								"                }\r",
								"            });\r",
								"        });\r",
								"    },\r",
								"\r",
								"    init: function (config) {\r",
								"        return new Promise(function (resolve) {\r",
								"            let reqData = {};\r",
								"\r",
								"            // Script Startparameter\r",
								"            const s = config.settings;\r",
								"            const p = config.properties;\r",
								"            if (s && s.properties.report.scriptparam) reqData._startparam = s.properties.report.scriptparam;\r",
								"            if (p && p.report.scriptparam) reqData._startparam = p.report.scriptparam;\r",
								"\r",
								"            jsonRequest({\r",
								"                url: AppCache.Url + '/api/functions/Adaptive/RunSelection?report=' + config.id,\r",
								"                data: JSON.stringify(reqData),\r",
								"                success: function (data) {\r",
								"                    resolve(data);\r",
								"                },\r",
								"                error: function (result, status) {\r",
								"                    resolve(result);\r",
								"                }\r",
								"\r",
								"            });\r",
								"\r",
								"        });\r",
								"\r",
								"    },\r",
								"\r",
								"    navigation: function (navigation, appdata, events, id) {\r",
								"        if (!navigation) return;\r",
								"\r",
								"        let config, childPage;\r",
								"        switch (navigation.destinationType) {\r",
								"            case 'F':\r",
								"                sap.n.Adaptive.getConfig(navigation.destinationTargetF).then(function (data) {\r",
								"                    config = data;\r",
								"                    config.settings.data = JSON.parse(JSON.stringify(appdata));\r",
								"                    config.settings.events = events;\r",
								"                    config.settings.navigation = navigation;\r",
								"\r",
								"                    childPage = sap.n.Adaptive.navigate(data.application, config, navigation, id);\r",
								"                    if (navigation.openAs === 'P' && events.onNavigatePage) events.onNavigatePage(childPage);\r",
								"                    if (navigation.openAs === 'D' && events.onNavigateDialog) events.onNavigateDialog(childPage);\r",
								"\r",
								"                });\r",
								"                break;\r",
								"\r",
								"            case 'A':\r",
								"                config = {\r",
								"                    data: JSON.parse(JSON.stringify(appdata)),\r",
								"                    events,\r",
								"                }\r",
								"\r",
								"                childPage = sap.n.Adaptive.navigate(navigation.destinationTargetA, config, navigation, id);\r",
								"                if (navigation.openAs === 'P' && events.onNavigatePage) events.onNavigatePage(childPage);\r",
								"                if (navigation.openAs === 'D') childPage.open();\r",
								"                break;\r",
								"\r",
								"            default:\r",
								"                break;\r",
								"        }\r",
								"    },\r",
								"\r",
								"    navigate: function (pageName, config, navigation, id) {\r",
								"        if (!pageName) return;\r",
								"        if (!id) id = ModelData.genID();\r",
								"\r",
								"        pageName = pageName.toUpperCase();\r",
								"\r",
								"        let pageID;\r",
								"\r",
								"        // Open Navigation Destination\r",
								"        switch (navigation.openAs) {\r",
								"            case 'D':\r",
								"                pageID = pageName + '_' + id + '_D';\r",
								"                let title = navigation.dialogTitle || '';\r",
								"\r",
								"                if (navigation.dialogTitleFieldText) {\r",
								"                    if (navigation.dialogTitle) title += ` ${navigation.dialogTitleFieldText}`;\r",
								"                    else title = navigation.dialogTitleFieldText;\r",
								"                }\r",
								"\r",
								"                if (sap.n.Adaptive.dialogs[pageID] && sap.n.Adaptive.dialogs[pageID].getContent().length) {\r",
								"                    // Apply Changes to Dialog \r",
								"                    if (navigation.dialogHeight) sap.n.Adaptive.dialogs[pageID].setContentHeight(navigation.dialogHeight);\r",
								"                    if (navigation.dialogWidth) sap.n.Adaptive.dialogs[pageID].setContentWidth(navigation.dialogWidth);\r",
								"                    if (navigation.dialogTitle) sap.n.Adaptive.dialogs[pageID].setTitle(title);\r",
								"                    if (navigation.dialogIcon) sap.n.Adaptive.dialogs[pageID].setIcon(navigation.dialogIcon);\r",
								"\r",
								"                    if (navigation.dialogResize) {\r",
								"                        sap.n.Adaptive.dialogs[pageID].setResizable(navigation.dialogResize);\r",
								"                    } else {\r",
								"                        sap.n.Adaptive.dialogs[pageID].setResizable(false);\r",
								"                    }\r",
								"\r",
								"                    if (navigation.dialogHeader) {\r",
								"                        sap.n.Adaptive.dialogs[pageID].setShowHeader(navigation.dialogHeader);\r",
								"                    } else {\r",
								"                        sap.n.Adaptive.dialogs[pageID].setShowHeader(false);\r",
								"                    }\r",
								"                    \r",
								"                    if (navigation.dialogScrollHorizontal) {\r",
								"                        sap.n.Adaptive.dialogs[pageID].addStyleClass('nepScrollContent');\r",
								"                    } else {\r",
								"                        sap.n.Adaptive.dialogs[pageID].removeStyleClass('nepScrollContent');\r",
								"                    }\r",
								"\r",
								"                    sap.n.Adaptive.dialogs[pageID].setStretch(sap.n.Launchpad.isPhone());\r",
								"\r",
								"                    if (sap.n.Apps[pageID] && sap.n.Apps[pageID].beforeDisplay) {\r",
								"                        sap.n.Apps[pageID].beforeDisplay.forEach(function (data) {\r",
								"                            data(config);\r",
								"                        });\r",
								"                    }\r",
								"                } else {\r",
								"                    sap.n.Adaptive.dialogs[pageID] = new sap.m.Dialog({\r",
								"                        contentWidth: navigation.dialogWidth || '1024px',\r",
								"                        contentHeight: navigation.dialogHeight || '500px',\r",
								"                        stretch: sap.n.Launchpad.isPhone(),\r",
								"                        showHeader: navigation.dialogHeader || false,\r",
								"                        title: title,\r",
								"                        icon: navigation.dialogIcon,\r",
								"                        draggable: true,\r",
								"                        resizable: navigation.dialogResize || false,\r",
								"                        horizontalScrolling: false,\r",
								"                        beforeClose: function (oEvent) {\r",
								"                            if (sap.n.Adaptive.dialogs[pageID]._oManuallySetSize) {\r",
								"                                const s = sap.n.Adaptive.dialogs[pageID]._oManuallySetSize;\r",
								"                                sap.n.Adaptive.dialogs[pageID].setContentWidth(`${s.width}px`);\r",
								"                                sap.n.Adaptive.dialogs[pageID].setContentHeight(`${s.height}px`);\r",
								"                            }\r",
								"                        }\r",
								"                    });\r",
								"\r",
								"                    if (navigation.dialogScrollHorizontal) {\r",
								"                        sap.n.Adaptive.dialogs[pageID].addStyleClass('nepScrollContent');\r",
								"                    } else {\r",
								"                        sap.n.Adaptive.dialogs[pageID].removeStyleClass('nepScrollContent');\r",
								"                    }\r",
								"\r",
								"                    delete sap.n.Apps[pageID];\r",
								"\r",
								"                    AppCache.Load(pageName, {\r",
								"                        appGUID: pageID,\r",
								"                        parentObject: sap.n.Adaptive.dialogs[pageID],\r",
								"                        startParams: config,\r",
								"                    });\r",
								"                }\r",
								"\r",
								"                return sap.n.Adaptive.dialogs[pageID];\r",
								"\r",
								"            case 'S':\r",
								"                if (localAppID === 'ADAPTIVEDESIGNER') {\r",
								"                    sap.m.MessageToast.show('Sidepanel can only be displayed in Launchpad');\r",
								"                } else {\r",
								"                    let title = navigation.dialogTitle || '';\r",
								"                    if (navigation.dialogTitleFieldText) {\r",
								"                        if (navigation.dialogTitle) title += ` ${navigation.dialogTitleFieldText}`;\r",
								"                        else title = navigation.dialogTitleFieldText;\r",
								"                    }\r",
								"\r",
								"                    sap.n.Shell.loadSidepanel(pageName, title, {\r",
								"                        icon: navigation.dialogIcon,\r",
								"                        additionaltext: navigation.dialogSubTitle,\r",
								"                        appGUID: ModelData.genID(),\r",
								"                        startParams: config,\r",
								"                    });\r",
								"                }\r",
								"                return null;\r",
								"\r",
								"            default:\r",
								"                pageID = pageName + '_' + id + '_P';\r",
								"                if (sap.n.Adaptive.pages[pageID]) {\r",
								"                    if (sap.n.Apps[pageID] && sap.n.Apps[pageID].beforeDisplay) {\r",
								"                        sap.n.Apps[pageID].beforeDisplay.forEach(function (data) {\r",
								"                            data(config);\r",
								"                        });\r",
								"                    }\r",
								"                } else {\r",
								"                    sap.n.Adaptive.pages[pageID] = new sap.m.Page({\r",
								"                        showFooter: false,\r",
								"                        showHeader: false,\r",
								"                        enableScrolling: false\r",
								"                    });\r",
								"\r",
								"                    AppCache.Load(pageName, {\r",
								"                        appGUID: pageID,\r",
								"                        parentObject: sap.n.Adaptive.pages[pageID],\r",
								"                        startParams: config,\r",
								"                    });\r",
								"                }\r",
								"                return sap.n.Adaptive.pages[pageID];\r",
								"        }\r",
								"    },\r",
								"\r",
								"    buildForm: function (parent, config, appdata) {\r",
								"        try {\r",
								"            parent.destroyContent();\r",
								"\r",
								"            const props = config.settings.properties;\r",
								"            let form = new sap.ui.layout.form.SimpleForm({\r",
								"                layout: 'ResponsiveGridLayout',\r",
								"                editable: true,\r",
								"                columnsL: parseInt(props.form.columnsL) || 2,\r",
								"                columnsM: parseInt(props.form.columnsM) || 1,\r",
								"                labelSpanL: parseInt(props.form.labelSpanL) || 4,\r",
								"                labelSpanM: parseInt(props.form.labelSpanM) || 2,\r",
								"            });\r",
								"\r",
								"            if (props.form.enableCompact) {\r",
								"                form.addStyleClass('sapUiSizeCompact');\r",
								"            } else {\r",
								"                form.removeStyleClass('sapUiSizeCompact');\r",
								"            }\r",
								"\r",
								"            // Selection Fields\r",
								"            config.settings.fieldsSel.forEach(function (field) {\r",
								"                // Trigger new form\r",
								"                if (field.enableNewForm) {\r",
								"\r",
								"                    parent.addContent(form);\r",
								"                    form = new sap.ui.layout.form.SimpleForm({\r",
								"                        layout: 'ResponsiveGridLayout',\r",
								"                        editable: true,\r",
								"                        columnsL: parseInt(field.columnsL) || 2,\r",
								"                        columnsM: parseInt(field.columnsM) || 1,\r",
								"                        labelSpanL: parseInt(field.labelSpanL) || 4,\r",
								"                        labelSpanM: parseInt(field.labelSpanM) || 2,\r",
								"                    });\r",
								"\r",
								"                }\r",
								"\r",
								"                if (field.columnLabel) form.addContent(new sap.ui.core.Title({\r",
								"                    text: field.columnLabel,\r",
								"                    level: config.settings.properties.form.titleLevel || 'Auto'\r",
								"                }));\r",
								"\r",
								"                const { type, required, name } = field;\r",
								"                const fieldValue = `{AppData>/${name}}`;\r",
								"                const fieldValueState = `{AppData>/${name}ValueState}`;\r",
								"\r",
								"                switch (type) {\r",
								"                    case 'Editor':\r",
								"                        form.addContent(\r",
								"                            new sap.m.Label({\r",
								"                                required,\r",
								"                                text: sap.n.Adaptive.translateFieldLabel(field, config),\r",
								"                            })\r",
								"                        );\r",
								"\r",
								"                        let editorField = new sap.m.FlexBox({\r",
								"                            height: field.editorHeight || '400px',\r",
								"                            renderType: 'Bare',\r",
								"                            width: '100%',\r",
								"                            visible: field.visible,\r",
								"                        });\r",
								"\r",
								"                        try {\r",
								"                            sap.n.Adaptive.editor(editorField, {});\r",
								"                        } catch (e) {\r",
								"                            console.log(e);\r",
								"                        }\r",
								"\r",
								"                        field._editor = editorField.editor;\r",
								"                        field._editor.setEditable(field.editable);\r",
								"\r",
								"                        form.addContent(editorField);\r",
								"\r",
								"                        if (field.default) editorField.setState(field.default);\r",
								"                        break;\r",
								"\r",
								"                    case 'DatePicker':\r",
								"                        form.addContent(new sap.m.Label({ text: sap.n.Adaptive.translateFieldLabel(field, config), required }));\r",
								"                        form.addContent(\r",
								"                            new sap.m.DatePicker({\r",
								"                                visible: field.visible,\r",
								"                                editable: field.editable,\r",
								"                                valueState: fieldValueState,\r",
								"                                dateValue: fieldValue,\r",
								"                            })\r",
								"                        );\r",
								"                        break;\r",
								"\r",
								"                    case 'DateTimePicker':\r",
								"                        form.addContent(new sap.m.Label({ text: sap.n.Adaptive.translateFieldLabel(field, config), required }));\r",
								"                        form.addContent(\r",
								"                            new sap.m.DateTimePicker({\r",
								"                                visible: field.visible,\r",
								"                                editable: field.editable,\r",
								"                                secondsStep: parseInt(field.dateTimePickerSecondsStep) || 1,\r",
								"                                minutesStep: parseInt(field.dateTimePickerMinutesStep) || 1,\r",
								"                                valueState: fieldValueState,\r",
								"                                dateValue: fieldValue,\r",
								"                            })\r",
								"                        );\r",
								"                        break;\r",
								"\r",
								"                    case 'CheckBox':\r",
								"                        form.addContent(new sap.m.Label({ text: sap.n.Adaptive.translateFieldLabel(field, config), required }));\r",
								"                        form.addContent(\r",
								"                            new sap.m.CheckBox({\r",
								"                                visible: field.visible,\r",
								"                                editable: field.editable,\r",
								"                                valueState: fieldValueState,\r",
								"                                selected: fieldValue,\r",
								"                            })\r",
								"                        );\r",
								"                        break;\r",
								"\r",
								"                    case 'Switch':\r",
								"                        form.addContent(new sap.m.Label({ text: sap.n.Adaptive.translateFieldLabel(field, config), required }));\r",
								"                        form.addContent(\r",
								"                            new sap.m.Switch({\r",
								"                                visible: field.visible,\r",
								"                                enabled: field.editable,\r",
								"                                state: fieldValue,\r",
								"                            })\r",
								"                        );\r",
								"                        break;\r",
								"\r",
								"                    case 'MultiSelect':\r",
								"                    case 'MultiSelectLookup':\r",
								"                    case 'MultiSelectScript':\r",
								"                        form.addContent(new sap.m.Label({ text: sap.n.Adaptive.translateFieldLabel(field, config), required }));\r",
								"\r",
								"                        let multiField = new sap.m.MultiComboBox({\r",
								"                            width: '100%',\r",
								"                            visible: field.visible,\r",
								"                            selectedKeys: fieldValue,\r",
								"                            placeholder: field.placeholder || '',\r",
								"                            valueState: fieldValueState,\r",
								"                            showSecondaryValues: true\r",
								"                        });\r",
								"\r",
								"                        if (field.items) field.items.sort(sort_by('text'));\r",
								"                        field.items.forEach(function (item) {\r",
								"                            multiField.addItem(new sap.ui.core.ListItem({ key: item.key, text: item.text, additionalText: item.additionalText }));\r",
								"                        });\r",
								"\r",
								"                        form.addContent(multiField);\r",
								"                        break;\r",
								"\r",
								"                    case 'SingleSelect':\r",
								"                    case 'SingleSelectLookup':\r",
								"                    case 'SingleSelectScript':\r",
								"                        form.addContent(new sap.m.Label({ text: sap.n.Adaptive.translateFieldLabel(field, config), required }));\r",
								"\r",
								"                        let singleField = new sap.m.ComboBox({\r",
								"                            width: '100%',\r",
								"                            visible: field.visible,\r",
								"                            editable: field.editable,\r",
								"                            placeholder: field.placeholder || '',\r",
								"                            selectedKey: fieldValue,\r",
								"                            valueState: fieldValueState,\r",
								"                            showSecondaryValues: true\r",
								"                        });\r",
								"                        form.addContent(singleField);\r",
								"\r",
								"                        singleField.addItem(new sap.ui.core.Item({ key: '', text: '', }));\r",
								"\r",
								"                        if (field.items) field.items.sort(sort_by('text'));\r",
								"                        field.items.forEach(function (item) {\r",
								"                            singleField.addItem(\r",
								"                                new sap.ui.core.ListItem({\r",
								"                                    key: item.key, text: item.text, additionalText: item.additionalText\r",
								"                                })\r",
								"                            );\r",
								"                        });\r",
								"                        break;\r",
								"\r",
								"                    case 'TextArea':\r",
								"                        form.addContent(new sap.m.Label({ text: sap.n.Adaptive.translateFieldLabel(field, config), required }));\r",
								"                        form.addContent(\r",
								"                            new sap.m.TextArea({\r",
								"                                visible: field.visible,\r",
								"                                editable: field.editable,\r",
								"                                rows: parseInt(field.textAreaRows) || 2,\r",
								"                                placeholder: field.placeholder || '',\r",
								"                                valueState: fieldValueState,\r",
								"                                value: fieldValue,\r",
								"                                width: '100%'\r",
								"                            })\r",
								"                        );\r",
								"                        break;\r",
								"\r",
								"                    default:\r",
								"                        form.addContent(new sap.m.Label({ text: sap.n.Adaptive.translateFieldLabel(field, config), required }));\r",
								"                        form.addContent(\r",
								"                            new sap.m.Input({\r",
								"                                visible: field.visible,\r",
								"                                editable: field.editable,\r",
								"                                type: field.inputType || 'Text',\r",
								"                                placeholder: field.placeholder || '',\r",
								"                                valueState: fieldValueState,\r",
								"                                value: fieldValue,\r",
								"                            })\r",
								"                        );\r",
								"                        break;\r",
								"                }\r",
								"            });\r",
								"\r",
								"            parent.addContent(form);\r",
								"        } catch (e) {\r",
								"            console.log(e);\r",
								"        }\r",
								"    },\r",
								"\r",
								"    buildTableFilter: function (parent, table, config, appdata, enableSearch, run) {\r",
								"        try {\r",
								"            parent.destroyContent();\r",
								"            if (!config) return;\r",
								"\r",
								"            let numFields = ModelData.Find(config.settings.fieldsSel, 'visible', true)\r",
								"            let numFilters = (numFields) ? numFields.length : 1;\r",
								"            if (enableSearch) numFilters++;\r",
								"\r",
								"            let columnsM = 2;\r",
								"            let columnsL = 2;\r",
								"\r",
								"            switch (numFilters) {\r",
								"                case 3:\r",
								"                case 5:\r",
								"                case 6:\r",
								"                case 7:\r",
								"                case 8:\r",
								"                    columnsL = 3;\r",
								"                    break;\r",
								"                default:\r",
								"                    break;\r",
								"            }\r",
								"\r",
								"            let form = new sap.ui.layout.form.SimpleForm({\r",
								"                layout: 'ColumnLayout',\r",
								"                editable: true,\r",
								"                labelSpanL: 12,\r",
								"                labelSpanM: 12,\r",
								"                columnsM: columnsM,\r",
								"                columnsL: columnsL,\r",
								"            });\r",
								"\r",
								"            if (config.settings.properties.form.enableCompact) {\r",
								"                form.addStyleClass('sapUiSizeCompact');\r",
								"            } else {\r",
								"                form.removeStyleClass('sapUiSizeCompact');\r",
								"            }\r",
								"\r",
								"            // Search\r",
								"            if (enableSearch) {\r",
								"\r",
								"                form.addContent(new sap.m.Label({\r",
								"                    text: sap.n.Adaptive.translateProperty('report', 'searchLabel', config),\r",
								"                    width: '100%'\r",
								"                }));\r",
								"\r",
								"                form.addContent(new sap.m.SearchField({\r",
								"                    placeholder: sap.n.Adaptive.translateProperty('report', 'searchPlaceholder', config),\r",
								"                    liveChange: function (oEvent) {\r",
								"                        let searchField = this;\r",
								"                        let filters = [];\r",
								"                        let bindingItems = table.getBinding('items');\r",
								"                        let fieldsFilter = ModelData.Find(config.settings.fieldsRun, 'enableFilter', true);\r",
								"\r",
								"                        fieldsFilter.forEach(function ({ name, valueType }) {\r",
								"                            filters.push(\r",
								"                                new sap.ui.model.Filter(valueType ? `${name}_value` : name, 'Contains', searchField.getValue()),\r",
								"                            );\r",
								"                        });\r",
								"\r",
								"                        bindingItems.filter([new sap.ui.model.Filter({\r",
								"                            filters: filters,\r",
								"                            and: false\r",
								"                        })]);\r",
								"\r",
								"                    }\r",
								"\r",
								"                }));\r",
								"\r",
								"            }\r",
								"\r",
								"            config.settings.fieldsSel.forEach(function (field) {\r",
								"                const { name, type } = field;\r",
								"                if (field.default) {\r",
								"                    if (['MultiSelect', 'MultiSelectLookup', 'MultiSelectScript'].includes(type)) {\r",
								"                        if (typeof field.default === 'object') {\r",
								"                            appdata[name] = field.default;\r",
								"                        } else {\r",
								"                            if (field.default.indexOf('[') > -1) {\r",
								"                                appdata[name] = JSON.parse(field.default);\r",
								"                            } else {\r",
								"                                appdata[name] = field.default;\r",
								"                            }\r",
								"                        }\r",
								"\r",
								"                    } else if (['Switch', 'CheckBox'].includes(type)) {\r",
								"                        if (field.default === 'true' || field.default === '1' || field.default === 'X') {\r",
								"                            appdata[name] = true;\r",
								"                        } else {\r",
								"                            delete appdata[name];\r",
								"                        }\r",
								"\r",
								"                    } else {\r",
								"                        appdata[name] = field.default;\r",
								"                    }\r",
								"                }\r",
								"                if (field.required) delete appdata[`${name}ValueState`];\r",
								"\r",
								"                const fieldValue = `{AppData>/${name}}`;\r",
								"                const fieldValueState = `{AppData>/${name}ValueState}`;\r",
								"\r",
								"                function onChange(_oEvent) {\r",
								"                    if (run) run();\r",
								"                }\r",
								"\r",
								"                switch (type) {\r",
								"                    case 'MultiSelect':\r",
								"                    case 'MultiSelectLookup':\r",
								"                    case 'MultiSelectScript':\r",
								"                        form.addContent(new sap.m.Label({ text: sap.n.Adaptive.translateFieldLabel(field, config), required: field.required }));\r",
								"\r",
								"                        let multiField = new sap.m.MultiComboBox({\r",
								"                            width: '100%',\r",
								"                            visible: field.visible,\r",
								"                            selectedKeys: fieldValue,\r",
								"                            valueState: fieldValueState,\r",
								"                            showSecondaryValues: true,\r",
								"                            selectionChange: onChange,\r",
								"                        });\r",
								"\r",
								"                        if (field.items) field.items.sort(sort_by('text'));\r",
								"                        field.items.forEach(function ({ key, text, additionalText }) {\r",
								"                            multiField.addItem(new sap.ui.core.ListItem({ key, text, additionalText }));\r",
								"                        });\r",
								"\r",
								"                        form.addContent(multiField);\r",
								"                        break;\r",
								"\r",
								"                    case 'SingleSelect':\r",
								"                    case 'SingleSelectLookup':\r",
								"                    case 'SingleSelectScript':\r",
								"                        form.addContent(new sap.m.Label({ text: sap.n.Adaptive.translateFieldLabel(field, config), required: field.required }));\r",
								"\r",
								"                        let singleField = new sap.m.ComboBox({\r",
								"                            width: '100%',\r",
								"                            visible: field.visible,\r",
								"                            selectedKey: fieldValue,\r",
								"                            valueState: fieldValueState,\r",
								"                            showSecondaryValues: true,\r",
								"                            change: onChange,\r",
								"                        });\r",
								"                        singleField.addItem(new sap.ui.core.Item({ key: '', text: '', }));\r",
								"\r",
								"                        if (field.items) field.items.sort(sort_by('text'));\r",
								"                        field.items.forEach(function ({ key, text, additionalText }) {\r",
								"                            singleField.addItem(new sap.ui.core.ListItem({ key, text, additionalText }));\r",
								"                        });\r",
								"\r",
								"                        form.addContent(singleField);\r",
								"                        break;\r",
								"\r",
								"                    case 'DateRange':\r",
								"                        form.addContent(new sap.m.Label({ text: sap.n.Adaptive.translateFieldLabel(field, config), required: field.required }));\r",
								"                        form.addContent(\r",
								"                            new sap.m.DateRangeSelection({\r",
								"                                width: '100%',\r",
								"                                visible: field.visible,\r",
								"                                dateValue: fieldValue,\r",
								"                                secondDateValue: `{AppData>/${name}_end}`,\r",
								"                                valueState: fieldValueState,\r",
								"                                change: onChange,\r",
								"                            })\r",
								"                        );\r",
								"                        break;\r",
								"\r",
								"                    case 'CheckBox':\r",
								"                        form.addContent(new sap.m.Label({ text: sap.n.Adaptive.translateFieldLabel(field, config), required: field.required }));\r",
								"                        form.addContent(\r",
								"                            new sap.m.CheckBox({\r",
								"                                width: '100%',\r",
								"                                visible: field.visible,\r",
								"                                useEntireWidth: true,\r",
								"                                selected: fieldValue,\r",
								"                                valueState: fieldValueState,\r",
								"                                select: onChange,\r",
								"                            })\r",
								"                        );\r",
								"                        break;\r",
								"\r",
								"                    case 'Switch':\r",
								"                        form.addContent(new sap.m.Label({ text: sap.n.Adaptive.translateFieldLabel(field, config), required: field.required }));\r",
								"                        form.addContent(\r",
								"                            new sap.m.Switch({\r",
								"                                visible: field.visible,\r",
								"                                state: fieldValue,\r",
								"                                change: onChange,\r",
								"                            })\r",
								"                        );\r",
								"                        break;\r",
								"\r",
								"                    default:\r",
								"                        form.addContent(new sap.m.Label({ text: sap.n.Adaptive.translateFieldLabel(field, config), required: field.required }));\r",
								"                        form.addContent(\r",
								"                            new sap.m.SearchField({\r",
								"                                width: '100%',\r",
								"                                visible: field.visible,\r",
								"                                value: fieldValue,\r",
								"                                // valueState: fieldValueState,\r",
								"                                search: onChange,\r",
								"                            })\r",
								"                        );\r",
								"                        break;\r",
								"                }\r",
								"            });\r",
								"\r",
								"            parent.addContent(form);\r",
								"        } catch (e) {\r",
								"            console.log(e);\r",
								"        }\r",
								"    },\r",
								"\r",
								"    translateFieldLabel: function (field, config) {\r",
								"        if (!config.language) return field.text;\r",
								"\r",
								"        const t = config.settings.translation;\r",
								"        if (t && t[config.language] && t[config.language].fieldCatalog[field.name]) {\r",
								"            return t[config.language].fieldCatalog[field.name]\r",
								"        }\r",
								"        \r",
								"        return field.text;\r",
								"    },\r",
								"\r",
								"    translateProperty: function (parent, key, config) {\r",
								"\r",
								"        if (!config.language) return config.settings.properties[parent][key]\r",
								"\r",
								"        if (config.settings.translation && config.settings.translation[config.language] && config.settings.translation[config.language][parent][key]) {\r",
								"            return config.settings.translation[config.language][parent][key]\r",
								"        }\r",
								"        return config.settings.properties[parent][key];\r",
								"\r",
								"    },\r",
								"\r",
								"    buildTableColumns: function (table, config, events) {\r",
								"\r",
								"        try {\r",
								"\r",
								"            if (config.settings.properties.table.enableCompact) {\r",
								"                table.addStyleClass('sapUiSizeCompact');\r",
								"            } else {\r",
								"                table.removeStyleClass('sapUiSizeCompact');\r",
								"            }\r",
								"\r",
								"            try {\r",
								"                table.destroyColumns();\r",
								"            } catch (e) { }\r",
								"\r",
								"            let Column = new sap.m.ColumnListItem({ selected: '{_sel}' });\r",
								"\r",
								"            // Handle Item Press\r",
								"            if (config.settings.properties.report._navigationItemPress) {\r",
								"\r",
								"                Column.setType('Active');\r",
								"                Column.attachPress(function (oEvent) {\r",
								"\r",
								"                    let context = oEvent.oSource.getBindingContext();\r",
								"                    let columnData = context.getObject();\r",
								"\r",
								"                    if (config.settings.properties.report._navigationItemPress.dialogTitleField) {\r",
								"                        config.settings.properties.report._navigationItemPress.dialogTitleFieldText = columnData[config.settings.properties.report._navigationItemPress.dialogTitleField + '_value'] || columnData[config.settings.properties.report._navigationItemPress.dialogTitleField];\r",
								"                    }\r",
								"\r",
								"                    sap.n.Adaptive.navigation(config.settings.properties.report._navigationItemPress, columnData, events, table.sId)\r",
								"                });\r",
								"\r",
								"            }\r",
								"\r",
								"            // Build Columns\r",
								"            config.settings.fieldsRun.forEach(function (field) {\r",
								"                if (!field.visible) return;\r",
								"\r",
								"                let ColumnHeader = new sap.m.Column({\r",
								"                    width: field.width,\r",
								"                    minScreenWidth: field.minScreenWidth,\r",
								"                });\r",
								"\r",
								"                if (field.hAlign) ColumnHeader.setHAlign(field.hAlign);\r",
								"\r",
								"                // Enable Sum \r",
								"                if (field.enableSum && field.type === 'ObjectNumber') {\r",
								"                    let sumField = new sap.m.ObjectNumber({\r",
								"                        number: '{AppConfig>/settings/properties/table/_sum/' + field.name + '}',\r",
								"                        unit: '{AppConfig>/settings/properties/table/_sum/' + field.name + '_unit}',\r",
								"                    })\r",
								"                    ColumnHeader.setFooter(sumField);\r",
								"                }\r",
								"\r",
								"                let HBox = new sap.m.HBox();\r",
								"\r",
								"                HBox.addItem(new sap.m.Label({ text: sap.n.Adaptive.translateFieldLabel(field, config), wrapping: true }));\r",
								"\r",
								"                let enabled = true;\r",
								"                if (field.enableSort || field.enableGroup) {\r",
								"                    let ColumnButton = new sap.ui.core.Icon({\r",
								"                        src: 'sap-icon://slim-arrow-down',\r",
								"                        press: function (oEvent) {\r",
								"                            if (events.onHeaderClick) events.onHeaderClick(field, this);\r",
								"                        }\r",
								"                    });\r",
								"                    ColumnButton.addStyleClass('sapUiTinyMarginBegin');\r",
								"                    HBox.addItem(ColumnButton);\r",
								"                }\r",
								"\r",
								"                ColumnHeader.setHeader(HBox);\r",
								"\r",
								"                table.addColumn(ColumnHeader);\r",
								"\r",
								"                let newField = null;\r",
								"                let formatterProp = 'text';\r",
								"\r",
								"                const { name, type } = field;\r",
								"                switch (type) {\r",
								"                    case 'Link':\r",
								"                        const linkOpts = {\r",
								"                            text: getFieldBindingText(field),\r",
								"                            wrapping: field.wrapping || false,\r",
								"                            press: function (oEvent) {\r",
								"                                if (!field._navigation) return;\r",
								"\r",
								"                                let context = oEvent.oSource.getBindingContext();\r",
								"                                let columnData = context.getObject();\r",
								"\r",
								"                                // Sidepanel Lookup Text \r",
								"                                if (field._navigation.openAs === 'S') {\r",
								"                                    const dtf = field._navigation.dialogTitleField;\r",
								"                                    const fieldName = ModelData.FindFirst(config.settings.fieldsRun, 'name', dtf);\r",
								"                                    field._navigation.dialogTitleFieldText = fieldName.valueType ? columnData[`${dtf}_value`] : columnData[dtf];\r",
								"                                }\r",
								"\r",
								"                                // Add pressed fieldname\r",
								"                                events.objectPressed = name;\r",
								"                                sap.n.Adaptive.navigation(field._navigation, columnData, events, newField.sId)\r",
								"                            }\r",
								"                        }\r",
								"\r",
								"                        if (field.linkHrefType) {\r",
								"                            linkOpts.href = `{${name}_href}`;\r",
								"                            linkOpts.target = '_blank';\r",
								"                        }\r",
								"\r",
								"                        newField = new sap.m.Link(linkOpts);\r",
								"                        break;\r",
								"\r",
								"                    case 'ObjectNumber':\r",
								"                        formatterProp = 'number';\r",
								"                        const objNumOpts = {\r",
								"                            number: getFieldBindingText(field),\r",
								"                        };\r",
								"\r",
								"                        if (field.numberUnitType) objNumOpts.unit = `{${name}_unit}`;\r",
								"                        if (field.numberStateType) objNumOpts.state = `{${name}_state}`;\r",
								"\r",
								"                        newField = new sap.m.ObjectNumber(objNumOpts);\r",
								"\r",
								"                        if (field.numberUnitType && field.numberUnitFormatter) {\r",
								"                            let fieldName = `${name}_unit`;\r",
								"                            newField.bindProperty('unit', {\r",
								"                                parts: [fieldName],\r",
								"                                formatter: function (fieldName) {\r",
								"                                    if (typeof (fieldName) === 'undefined' || fieldName === null) return;\r",
								"                                    return sap.n.Adaptive.formatter(fieldName, field.numberUnitFormatter);\r",
								"                                }\r",
								"                            });\r",
								"                        }\r",
								"                        break;\r",
								"\r",
								"                    case 'ObjectStatus':\r",
								"                        formatterProp = 'text';\r",
								"                        const objStatusOpts = {\r",
								"                            text: getFieldBindingText(field),\r",
								"                        };\r",
								"\r",
								"                        if (field.statusTitleType) objStatusOpts.title = `{${name}_title`;\r",
								"                        if (field.statusIconType) objStatusOpts.icon = `{${name}_icon`;\r",
								"                        if (field.statusStateType) objStatusOpts.state = `{${name}_state`;\r",
								"\r",
								"                        newField = new sap.m.ObjectStatus(objStatusOpts);\r",
								"\r",
								"                        if (field.statusTitleType && field.statusTitleFormatter) {\r",
								"                            let fieldName = `${name}_title`;\r",
								"                            newField.bindProperty('title', {\r",
								"                                parts: [fieldName],\r",
								"                                formatter: function (fieldName) {\r",
								"                                    if (typeof (fieldName) === 'undefined' || fieldName === null) return;\r",
								"                                    return sap.n.Adaptive.formatter(fieldName, field.statusTitleFormatter);\r",
								"                                }\r",
								"                            });\r",
								"                        }\r",
								"                        break;\r",
								"\r",
								"                    case 'CheckBox':\r",
								"                        newField = new sap.m.CheckBox({\r",
								"                            editable: false,\r",
								"                            selected: getFieldBindingText(field),\r",
								"                            wrapping: field.wrapping || false,\r",
								"                        })\r",
								"                        break;\r",
								"\r",
								"                    case 'Switch':\r",
								"                        newField = new sap.m.Switch({\r",
								"                            enabled: false,\r",
								"                            state: getFieldBindingText(field),\r",
								"                        })\r",
								"                        break;\r",
								"\r",
								"                    case 'Image':\r",
								"                        newField = new sap.m.Image({\r",
								"                            height: '32px',\r",
								"                            src: getFieldBindingText(field),\r",
								"                        })\r",
								"                        break;\r",
								"\r",
								"                    case 'Icon':\r",
								"                        newField = new sap.ui.core.Icon({\r",
								"                            src: getFieldBindingText(field),\r",
								"                        })\r",
								"                        break;\r",
								"\r",
								"                    case 'Input':\r",
								"                        newField = new sap.m.Input({\r",
								"                            value: getFieldBindingText(field),\r",
								"                        })\r",
								"                        break;\r",
								"\r",
								"                    default:\r",
								"                        newField = new sap.m.Text({\r",
								"                            text: getFieldBindingText(field),\r",
								"                            wrapping: field.wrapping || false,\r",
								"                        })\r",
								"                        break;\r",
								"                }\r",
								"\r",
								"                Column.addCell(newField);\r",
								"\r",
								"                // Formatter \r",
								"                if (field.formatter) {\r",
								"                    let fieldName = (field.valueType ? `${name}_value` : name);\r",
								"                    newField.bindProperty(formatterProp, {\r",
								"                        parts: [fieldName],\r",
								"                        formatter: function (fieldName) {\r",
								"                            if (typeof (fieldName) === 'undefined' || fieldName === null) return;\r",
								"                            return sap.n.Adaptive.formatter(fieldName, field.formatter);\r",
								"                        }\r",
								"                    });\r",
								"                }\r",
								"            });\r",
								"\r",
								"            const t = config.settings.properties.table;\r",
								"\r",
								"            // Row Action 1\r",
								"            if (t.enableAction1) {\r",
								"                table.addColumn(\r",
								"                    new sap.m.Column({ width: t.action1Width || '' })\r",
								"                );\r",
								"                Column.addCell(\r",
								"                    new sap.m.Button({\r",
								"                        text: t.action1Text,\r",
								"                        icon: t.action1Icon,\r",
								"                        type: t.action1Type,\r",
								"                        press: function (oEvent) {\r",
								"                            if (!t._action1Nav) return;\r",
								"\r",
								"                            let context = oEvent.oSource.getBindingContext();\r",
								"                            let columnData = context.getObject();\r",
								"\r",
								"                            const k = t._action1Nav.dialogTitleField;\r",
								"                            if (k) {\r",
								"                                t._action1Nav.dialogTitleFieldText = columnData[`${k}_value`] || columnData[k];\r",
								"                            }\r",
								"\r",
								"                            sap.n.Adaptive.navigation(t._action1Nav, columnData, events, table.sId)\r",
								"                        }\r",
								"                    })\r",
								"                );\r",
								"            }\r",
								"\r",
								"            // Row Action 2\r",
								"            if (t.enableAction2) {\r",
								"                table.addColumn(\r",
								"                    new sap.m.Column({ width: t.action2Width || '' })\r",
								"                );\r",
								"                Column.addCell(\r",
								"                    new sap.m.Button({\r",
								"                        text: t.action2Text,\r",
								"                        icon: t.action2Icon,\r",
								"                        type: t.action2Type,\r",
								"                        width: t.action2Width || '',\r",
								"                        press: function (oEvent) {\r",
								"                            if (!t._action2Nav) return;\r",
								"\r",
								"                            let context = oEvent.oSource.getBindingContext();\r",
								"                            let columnData = context.getObject();\r",
								"\r",
								"                            const k = t._action2Nav.dialogTitleField;\r",
								"                            if (k) {\r",
								"                                t._action2Nav.dialogTitleFieldText = columnData[`${k}_value`] || columnData[k];\r",
								"                            }\r",
								"\r",
								"                            sap.n.Adaptive.navigation(t._action2Nav, columnData, events, table.sId)\r",
								"                        }\r",
								"                    })\r",
								"                );\r",
								"            }\r",
								"\r",
								"            // Row Action 3\r",
								"            if (t.enableAction3) {\r",
								"                table.addColumn(\r",
								"                    new sap.m.Column({ width: t.action3Width || '' })\r",
								"                );\r",
								"                Column.addCell(\r",
								"                    new sap.m.Button({\r",
								"                        text: t.action3Text,\r",
								"                        icon: t.action3Icon,\r",
								"                        type: t.action3Type,\r",
								"                        width: t.action3Width || '',\r",
								"                        press: function (oEvent) {\r",
								"                            if (!t._action3Nav) return;\r",
								"\r",
								"                            let context = oEvent.oSource.getBindingContext();\r",
								"                            let columnData = context.getObject();\r",
								"\r",
								"                            const k = t._action3Nav.dialogTitleField;\r",
								"                            if (k) {\r",
								"                                t._action3Nav.dialogTitleFieldText = columnData[`${k}_value`] || columnData[k];\r",
								"                            }\r",
								"\r",
								"                            sap.n.Adaptive.navigation(t._action3Nav, columnData, events, table.sId)\r",
								"                        }\r",
								"                    })\r",
								"                );\r",
								"            }\r",
								"\r",
								"            // Table - Aggregation\r",
								"            table.bindAggregation('items', { path: '/', template: Column, templateShareable: false });\r",
								"        } catch (e) {\r",
								"            console.log(e);\r",
								"        }\r",
								"    },\r",
								"\r",
								"    formatter: function (fieldName, formatter) {let formatDate00 = sap.ui.core.format.DateFormat.getDateTimeInstance();\r",
								"        let formatDate01 = sap.ui.core.format.DateFormat.getDateTimeInstance({ pattern: 'dd.MM.yyyy' });\r",
								"        let formatDate02 = sap.ui.core.format.DateFormat.getDateTimeInstance({ pattern: 'mm-dd-yyyy' });\r",
								"        let formatDate03 = sap.ui.core.format.DateFormat.getDateTimeInstance({ pattern: 'yyyy MMM' });\r",
								"        let formatDate04 = sap.ui.core.format.DateFormat.getDateTimeInstance({ pattern: 'yyyy QQ' });\r",
								"\r",
								"        let formatNumber01 = sap.ui.core.format.NumberFormat.getFloatInstance({ maxFractionDigits: 0, minFractionDigits: 0, groupingEnabled: true, groupingSeparator: ' ' });\r",
								"        let formatNumber02 = sap.ui.core.format.NumberFormat.getFloatInstance({ maxFractionDigits: 1, minFractionDigits: 1, groupingEnabled: true, groupingSeparator: ' ', decimalSeparator: ',' });\r",
								"        let formatNumber03 = sap.ui.core.format.NumberFormat.getFloatInstance({ maxFractionDigits: 2, minFractionDigits: 2, groupingEnabled: true, groupingSeparator: ' ', decimalSeparator: ',' });\r",
								"        let formatNumber04 = sap.ui.core.format.NumberFormat.getFloatInstance({ maxFractionDigits: 3, minFractionDigits: 3, groupingEnabled: true, groupingSeparator: ' ', decimalSeparator: ',' });\r",
								"        let formatNumber05 = sap.ui.core.format.NumberFormat.getFloatInstance({ maxFractionDigits: 1, minFractionDigits: 1, groupingEnabled: true, groupingSeparator: ' ', decimalSeparator: '.' });\r",
								"        let formatNumber06 = sap.ui.core.format.NumberFormat.getFloatInstance({ maxFractionDigits: 2, minFractionDigits: 2, groupingEnabled: true, groupingSeparator: ' ', decimalSeparator: '.' });\r",
								"        let formatNumber07 = sap.ui.core.format.NumberFormat.getFloatInstance({ maxFractionDigits: 3, minFractionDigits: 3, groupingEnabled: true, groupingSeparator: ' ', decimalSeparator: '.' });\r",
								"\r",
								"        switch (formatter) {\r",
								"\r",
								"            case 'date00':\r",
								"                return formatDate00.format(sap.n.Adaptive.getDate(fieldName));\r",
								"\r",
								"            case 'date01':\r",
								"                return formatDate01.format(sap.n.Adaptive.getDate(fieldName));\r",
								"\r",
								"            case 'date02':\r",
								"                return formatDate02.format(sap.n.Adaptive.getDate(fieldName));\r",
								"\r",
								"            case 'date03':\r",
								"                return formatDate03.format(sap.n.Adaptive.getDate(fieldName));\r",
								"\r",
								"            case 'date04':\r",
								"                return formatDate04.format(sap.n.Adaptive.getDate(fieldName));\r",
								"\r",
								"            case 'sapdate01':\r",
								"                return fieldName.substr(6, 2) + '.' + fieldName.substr(4, 2) + '.' + fieldName.substr(0, 4);\r",
								"\r",
								"            case 'sapdate02':\r",
								"                return fieldName.substr(4, 2) + '-' + fieldName.substr(6, 2) + '-' + fieldName.substr(0, 4);\r",
								"\r",
								"            case 'zero':\r",
								"                return fieldName.replace(/^0+/, '');\r",
								"\r",
								"            case 'uppercase':\r",
								"                return fieldName.toUpperCase();\r",
								"\r",
								"            case 'lowercase':\r",
								"                return fieldName.toLowerCase();\r",
								"\r",
								"            case 'number00':\r",
								"                return parseFloat(fieldName).toLocaleString();\r",
								"\r",
								"            case 'number01':\r",
								"                return formatNumber01.format(fieldName);\r",
								"\r",
								"            case 'number02':\r",
								"                return formatNumber02.format(fieldName);\r",
								"\r",
								"            case 'number03':\r",
								"                return formatNumber03.format(fieldName);\r",
								"\r",
								"            case 'number04':\r",
								"                return formatNumber04.format(fieldName);\r",
								"\r",
								"            case 'number05':\r",
								"                return formatNumber05.format(fieldName);\r",
								"\r",
								"            case 'number06':\r",
								"                return formatNumber06.format(fieldName);\r",
								"\r",
								"            case 'number07':\r",
								"                return formatNumber07.format(fieldName);\r",
								"\r",
								"            case 'file':\r",
								"                oFileSizeFormat = sap.ui.core.format.FileSizeFormat.getInstance({ binaryFilesize: false, decimals: 2 });\r",
								"                return oFileSizeFormat.format(fieldName);\r",
								"\r",
								"            default:\r",
								"                return fieldName;\r",
								"        }\r",
								"    },\r",
								"\r",
								"    getDate: function (dateValue) {\r",
								"        if (typeof dateValue === 'string' && dateValue.length === 13) return new Date(parseInt(dateValue));\r",
								"        return new Date(dateValue);\r",
								"    },\r",
								"\r",
								"    getConfig: function (id) {\r",
								"        return new Promise(function (resolve) {\r",
								"            if (localAppID !== 'ADAPTIVEDESIGNER') {\r",
								"                if (sap.n.Adaptive.configurations[id]) return resolve(sap.n.Adaptive.configurations[id]);\r",
								"            }\r",
								"\r",
								"            jsonRequest({\r",
								"                url: AppCache.Url + '/api/functions/Adaptive/Get',\r",
								"                data: JSON.stringify({ id: id }),\r",
								"                success: function (data) {\r",
								"                    sap.n.Adaptive.configurations[id] = data;\r",
								"                    resolve(data);\r",
								"                },\r",
								"                error: function (result, status) {\r",
								"                    resolve(result);\r",
								"                }\r",
								"            });\r",
								"        });\r",
								"    },\r",
								"    \r",
								"    checkRequiredSel: function (fields, data) {\r",
								"        let valid = true;\r",
								"        fields.filter(function ({ required }) {\r",
								"            return required;\r",
								"        }).forEach(function ({ type, name, required }) {\r",
								"            const v = data[name];\r",
								"            const k = `${name}ValueState`;\r",
								"\r",
								"            data[k] = 'None';\r",
								"\r",
								"            if (!v) {\r",
								"                valid = false;\r",
								"                data[k] = 'Error';\r",
								"            }\r",
								"\r",
								"            if (['MultiSelect', 'MultiSelectLookup', 'MultiSelectScript'].includes(type) && v && !v.length) {\r",
								"                valid = false;\r",
								"                data[k] = 'Error';\r",
								"            }\r",
								"        });\r",
								"\r",
								"        // remove invalid state\r",
								"        if (valid) {\r",
								"            fields.filter(function ({ required }) {\r",
								"                return required;\r",
								"            }).forEach(function ({ name }) {\r",
								"                delete data[`${name}ValueState`];\r",
								"            });\r",
								"        }\r",
								"\r",
								"        return valid;\r",
								"    },\r",
								"\r",
								"    setDefaultData: function (config, metadata) {\r",
								"        if (!metadata) return;\r",
								"        \r",
								"        const propReport = metadata.properties.report || [];\r",
								"        for (let key in propReport) {\r",
								"            let field = propReport[key];\r",
								"            if (typeof field.default !== 'undefined' && typeof config.settings.properties.report[key] === 'undefined') config.settings.properties.report[key] = field.default;\r",
								"        }\r",
								"\r",
								"        const propForm = metadata.properties.form || [];\r",
								"        for (let key in propForm) {\r",
								"            let field = propForm[key];\r",
								"            if (typeof field.default !== 'undefined' && typeof config.settings.properties.form[key] === 'undefined') config.settings.properties.form[key] = field.default;\r",
								"        }\r",
								"\r",
								"        const propTable = metadata.properties.table || [];\r",
								"        for (let key in propTable) {\r",
								"            let field = propTable[key];\r",
								"            if (typeof field.default !== 'undefined' && typeof config.settings.properties.table[key] === 'undefined') config.settings.properties.table[key] = field.default;\r",
								"        }\r",
								"    },\r",
								"\r",
								"    grouping: function (config, groupBy, oContext) {\r",
								"        let data = oContext.getObject();\r",
								"        let field = ModelData.FindFirst(config.settings.fieldsRun, 'name', groupBy);\r",
								"        let fieldName = (field.valueType ? field.name + '_value' : field.name);\r",
								"\r",
								"        if (field.formatter) return sap.n.Adaptive.formatter(data[fieldName], field.formatter);\r",
								"\r",
								"        return data[fieldName];\r",
								"    },\r",
								"\r",
								"    editor: function (obj, config) {\r",
								"        obj.editor = {\r",
								"            data: config.data || '',\r",
								"            editable: config.editable || false,\r",
								"            setData: function (data) {\r",
								"                this.data = data;\r",
								"                if (typeof obj.editor.sun !== 'undefined') {\r",
								"                    obj.editor.sun.setContents(this.data);\r",
								"                    obj.editor.sun.core.history.stack = [];\r",
								"                    obj.editor.sun.core.history.reset();\r",
								"                }\r",
								"            },\r",
								"            getData: function () {\r",
								"                return this.data;\r",
								"            },\r",
								"            onChange: config.onChange || function () { },\r",
								"            setEditable: function (status) {\r",
								"                this.editable = status;\r",
								"                if (typeof obj.editor.sun !== 'undefined') {\r",
								"                    if (this.editable) {\r",
								"                        obj.editor.sun.enabled();\r",
								"                    } else {\r",
								"                        obj.editor.sun.disabled();\r",
								"                    }\r",
								"                }\r",
								"            }\r",
								"        };\r",
								"\r",
								"        let id;\r",
								"        \r",
								"        id = config.id || ModelData.genID();\r",
								"        let data = config.data || '';\r",
								"\r",
								"        obj.addStyleClass(id);\r",
								"\r",
								"        id = 'nepHtmlEditor-' + ModelData.genID();\r",
								"        obj.addStyleClass('nepHtmlEditor ');\r",
								"        obj.addStyleClass(id);\r",
								"        obj.addItem(new sap.ui.core.HTML(id, {}).setContent(`<textarea id=${id}></textarea>`));\r",
								"\r",
								"        function resizeEditor(el) {\r",
								"            if (!el) return;\r",
								"            \r",
								"            const prefix = `.${id} .se-wrapper-inner.se-wrapper`;\r",
								"            const height = getHeight(el) - getHeight(querySelector('.se-toolbar.sun-editor-common')) - 32 - 4 - 2;\r",
								"            setHeight(querySelector(`${prefix}-wysiwyg.sun-editor-editable`), height);\r",
								"            setHeight(querySelector(`${prefix}-code`), height + 22);\r",
								"        }\r",
								"\r",
								"        obj.onAfterRendering = function () {\r",
								"            sap.ui.Device.resize.attachHandler(function (mParams) {\r",
								"                resizeEditor(obj.getDomRef());\r",
								"            });\r",
								"\r",
								"            let height = getHeight(obj.getDomRef()) - 250;\r",
								"            let createEditor = function () {\r",
								"                const buttonList = [\r",
								"                    ['undo', 'redo'],\r",
								"                    ['font', 'fontSize', 'formatBlock'],\r",
								"                    ['bold', 'underline', 'italic', 'fontColor', 'hiliteColor'],\r",
								"                    ['outdent', 'indent', 'align', 'horizontalRule', 'list', 'lineHeight'],\r",
								"                    ['table', 'link', 'image', 'video', 'audio'],\r",
								"                    ['showBlocks', 'removeFormat', 'codeView', 'fullScreen'],\r",
								"                ];\r",
								"\r",
								"                let editor = SUNEDITOR.create((document.getElementById(id) || id), {\r",
								"                    width: '100%',\r",
								"                    height: height,\r",
								"                    value: obj.editor.data,\r",
								"                    resizingBar: false,\r",
								"                    defaultStyle: 'font-family: cursive: font-size:14px',\r",
								"                    buttonList: config.buttonList || buttonList,\r",
								"                    font: ['Arial', 'Comic Sans MS', 'Courier New', 'Impact', 'Georgia', 'Tahoma', 'Trebuchet MS', 'Verdana'],\r",
								"                    attributesWhitelist: {\r",
								"                        'all': 'style',\r",
								"                        'img': 'src|style|data-rotatey|data-rotatex|data-index',\r",
								"                    }\r",
								"                });\r",
								"\r",
								"                editor.onBlur = function (e, core) {\r",
								"                    obj.editor.data = editor.getContents();\r",
								"                    obj.editor.onChange(obj.editor.data);\r",
								"                };\r",
								"\r",
								"                editor.onChange = function (e, core) {\r",
								"                    obj.editor.data = editor.getContents();\r",
								"                    obj.editor.onChange(obj.editor.data);\r",
								"                };\r",
								"\r",
								"                if (obj.editor.editable) {\r",
								"                    editor.enabled();\r",
								"                } else {\r",
								"                    editor.disabled();\r",
								"                }\r",
								"\r",
								"                obj.editor.sun = editor;\r",
								"\r",
								"                setTimeout(function () {\r",
								"                    resizeEditor(obj.getDomRef());\r",
								"                }, 1);\r",
								"            }\r",
								"\r",
								"            if (typeof SUNEDITOR !== 'object') {\r",
								"                let actions = [];\r",
								"                actions.push(sap.n.Adaptive.loadLibraryEditor());\r",
								"                Promise.all(actions).then(function (values) {\r",
								"                    createEditor();\r",
								"                });\r",
								"            } else {\r",
								"                createEditor();\r",
								"            }\r",
								"        };\r",
								"    },\r",
								"\r",
								"    loadLibraryEditor: function () {\r",
								"        return new Promise(function (resolve) {\r",
								"            appendStylesheetToHead('/public/editor/suneditor.min.css');\r",
								"\r",
								"            request({\r",
								"                type: 'GET',\r",
								"                url: '/public/editor/suneditor.min.js',\r",
								"                success: function (data) {\r",
								"                    resolve('OK');\r",
								"                },\r",
								"                error: function (jqXHR, textStatus, errorThrown) {\r",
								"                    resolve('ERROR');\r",
								"                },\r",
								"                dataType: 'script',\r",
								"                cache: true\r",
								"            });\r",
								"        });\r",
								"    }\r",
								"}"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "0549ca33-0f90-47cf-dd6b-2dbd473b329b",
							"fieldName": "sap.n.Ajax",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"sap.n.Ajax = {",
								"    SuccessGetMenu: function () {",
								"        // Enhancement",
								"        if (sap.n.Enhancement.SuccessGetMenu) {",
								"            try {",
								"                sap.n.Enhancement.SuccessGetMenu();",
								"            } catch (e) {",
								"                appCacheError('Enhancement SuccessGetMenu ' + e);",
								"            }",
								"        }",
								"",
								"        let delRun = [];",
								"        let delFav = [];",
								"",
								"        // Check Most Run",
								"        Object.entries(modelAppCacheTilesRun.oData).forEach(function ([_, data]) {",
								"            let rec = ModelData.FindFirst(AppCacheTiles, 'id', data.id);",
								"            if (!rec) {",
								"                delRun.push(data);",
								"            } else {",
								"                ModelData.Update(AppCacheTilesRun, 'id', rec.id, rec);",
								"            }",
								"        });",
								"",
								"        delRun.forEach(function (data) {",
								"            ModelData.Delete(AppCacheTilesRun, 'id', data.id);",
								"        });",
								"",
								"        modelAppCacheTilesFav.oData.forEach(function (data) {",
								"            let rec = ModelData.FindFirst(AppCacheTiles, 'id', data.id);",
								"            if (!rec) delFav.push(data);",
								"        });",
								"",
								"        delFav.forEach(function (data) {",
								"            ModelData.Delete(AppCacheTilesFav, 'id', data.id);",
								"        });",
								"",
								"        // Save Run/Fav",
								"        setCacheAppCacheTilesRun();",
								"        setCacheAppCacheTilesFav();",
								"",
								"        if (delRun.length) sap.n.Launchpad.handleFavRedraw();",
								"",
								"        // Check for rebuilding menu",
								"        let rebuild = false;",
								"",
								"        // Tiles - Check last update",
								"        Array.isArray(currTiles) && currTiles.forEach(function (data) {",
								"            let rec = ModelData.FindFirst(AppCacheTiles, 'id', data.id);",
								"            if (rec) {",
								"                if (data.updatedAt !== rec.updatedAt) rebuild = true;",
								"            } else {",
								"                rebuild = true;",
								"            }",
								"        });",
								"",
								"        // Category - Check last update",
								"        Array.isArray(currCategory) && currCategory.forEach(function (data) {",
								"            let rec = ModelData.FindFirst(AppCacheCategory, 'id', data.id);",
								"            if (rec) {",
								"                if (data.updatedAt !== rec.updatedAt) rebuild = true;",
								"            } else {",
								"                rebuild = true;",
								"            }",
								"        });",
								"",
								"        // Category Child - Check last update",
								"        Array.isArray(currCategoryChild) && currCategoryChild.forEach(function (data) {",
								"            let rec = ModelData.FindFirst(AppCacheCategoryChild, 'id', data.id);",
								"            if (rec) {",
								"                if (data.updatedAt !== rec.updatedAt) rebuild = true;",
								"            } else {",
								"                rebuild = true;",
								"            }",
								"        });",
								"",
								"        // New/Deleted",
								"        if (currTiles.length !== modelAppCacheTiles.oData.length) rebuild = true;",
								"        if (currCategory.length !== modelAppCacheCategory.oData.length) rebuild = true;",
								"        if (currCategoryChild.length !== modelAppCacheCategoryChild.oData.length) rebuild = true;",
								"        if (currFav.length !== modelAppCacheTilesFav.oData.length) rebuild = true;",
								"",
								"        // Rebuild ",
								"        if (rebuild) {",
								"            location.hash = '';",
								"            sap.n.Launchpad.BuildMenu();",
								"            sap.n.Launchpad.RebuildTiles();",
								"        }",
								"",
								"        // When using hash first time, need to get tiles from server before hash will work",
								"        if (sap.n.HashNavigation.lateNav) {",
								"            location.hash = sap.n.HashNavigation.lateNav;",
								"            sap.n.HashNavigation.lateNav = null;",
								"        }",
								"",
								"        // Cleanup",
								"        currCategoryChild = [];",
								"        currCategory = [];",
								"        currTiles = [];",
								"    },",
								"",
								"    loadApps: function (dataTile) {",
								"        if (!dataTile.urlApplication) dataTile.urlApplication = '';",
								"        if (!dataTile.urlType) dataTile.urlType = '';",
								"        if (!dataTile.urlAuth) dataTile.urlAuth = '';",
								"",
								"        // Application",
								"        if (dataTile.actionApplication) {",
								"            let viewName = 'app:' + dataTile.actionApplication + ':' + AppCache.userInfo.language + ':' + dataTile.urlApplication;",
								"            viewName = viewName.toUpperCase();",
								"",
								"            if (typeof p9Database !== 'undefined' && p9Database !== null) {",
								"                p9GetView(viewName).then(function (viewData) {",
								"                    if (viewData.length <= 2) {",
								"                        appCacheLog(`LoadApps: loading ${dataTile.actionApplication}`);",
								"                        AppCache.Load(dataTile.actionApplication, {",
								"                            load: 'download',",
								"                            appPath: dataTile.urlApplication,",
								"                            appType: dataTile.urlType,",
								"                            appAuth: dataTile.urlAuth,",
								"                            sapICFNode: dataTile.sapICFNode,",
								"                        });",
								"                    }",
								"                }).catch(function (e) {",
								"                    console.log(e);",
								"                });",
								"            } else {",
								"                if (!sapStorageGet(viewName)) {",
								"                    appCacheLog(`LoadApps: loading ${dataTile.actionApplication}`);",
								"                    AppCache.Load(dataTile.actionApplication, {",
								"                        load: 'download',",
								"                        appPath: dataTile.urlApplication,",
								"                        appType: dataTile.urlType,",
								"                        appAuth: dataTile.urlAuth,",
								"                        sapICFNode: dataTile.sapICFNode,",
								"                    });",
								"                }",
								"            }",
								"        }",
								"",
								"        // Application in Tile",
								"        if (dataTile.type === 'application' && dataTile.tileApplication) {",
								"            let viewName = 'app:' + dataTile.tileApplication + ':' + AppCache.userInfo.language + ':' + dataTile.urlApplication;",
								"            viewName = viewName.toUpperCase();",
								"",
								"            if (typeof p9Database !== 'undefined' && p9Database !== null) {",
								"                p9GetView(viewName).then(function (viewData) {",
								"                    if (viewData.length <= 2) {",
								"                        appCacheLog(`LoadApps: loading ${dataTile.tileApplication}`);",
								"                        AppCache.Load(dataTile.tileApplication, {",
								"                            load: 'download'",
								"                        });",
								"                    }",
								"                }).catch(function (e) {",
								"                    console.log(e);",
								"                });",
								"            } else {",
								"                if (!sapStorageGet(viewName)) {",
								"                    appCacheLog(`LoadApps: loading ${dataTile.tileApplication}`);",
								"                    AppCache.Load(dataTile.tileApplication, {",
								"                        load: 'download'",
								"                    });",
								"                }",
								"            }",
								"        }",
								"    }",
								"}"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "090f468e-3e9c-4981-e37d-3f6b3c942ef6",
							"fieldName": "sap.n.Card",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"sap.n.Card = {\r",
								"    applyDragDrop: function (container) {\r",
								"        jQuery(`#${container.getId()}`).sortable({\r",
								"            forceHelperSize: true,\r",
								"            tolerance: 'pointer',\r",
								"            revert: 25,\r",
								"            opacity: 0.5,\r",
								"            scroll: true,\r",
								"            placeholder: 'dragPlaceholder',\r",
								"            start: function (event, ui) {\r",
								"            },\r",
								"            stop: function (event, ui) {\r",
								"                let grid = container.getDomRef();\r",
								"                let favUpdated = [];\r",
								"\r",
								"                const children = [...grid.children];\r",
								"                children.forEach(function (item) {\r",
								"                    let tileId = item.id.split('_tile')[1];\r",
								"                    let favTile = ModelData.FindFirst(AppCacheTilesFav, 'id', tileId);\r",
								"                    favUpdated.push(favTile);\r",
								"                });\r",
								"\r",
								"                modelAppCacheTilesFav.setData(favUpdated);\r",
								"                setCacheAppCacheTilesFav();\r",
								"                sap.n.Launchpad.saveFav();\r",
								"                sap.n.Launchpad.BuildTreeMenu();\r",
								"            }\r",
								"        });\r",
								"    },\r",
								"\r",
								"    setBackgroundShade: function (dataTile, dataCat, card, isIcon) {\r",
								"        let backgroundColor, backgroundShade;\r",
								"\r",
								"        if (typeof dataCat === 'undefined') dataCat = {};\r",
								"\r",
								"        if (dataCat.styleClass) card.addStyleClass(dataCat.styleClass);\r",
								"        if (dataTile.styleClass) card.addStyleClass(dataTile.styleClass);\r",
								"\r",
								"        if (dataCat.enableShadeCalc) {\r",
								"            switch (sap.n.Launchpad.backgroundShade) {\r",
								"                case 'ShadeA':\r",
								"                    sap.n.Launchpad.backgroundShade = 'ShadeB';\r",
								"                    break;\r",
								"\r",
								"                case 'ShadeB':\r",
								"                    sap.n.Launchpad.backgroundShade = 'ShadeC';\r",
								"                    break;\r",
								"\r",
								"                case 'ShadeC':\r",
								"                    sap.n.Launchpad.backgroundShade = 'ShadeD';\r",
								"                    break;\r",
								"\r",
								"                default:\r",
								"                    sap.n.Launchpad.backgroundShade = 'ShadeA';\r",
								"                    break;\r",
								"            }\r",
								"        } else {\r",
								"            sap.n.Launchpad.backgroundShade = dataCat.backgroundShade;\r",
								"        }\r",
								"\r",
								"        backgroundColor = dataTile.backgroundColor || dataCat.backgroundColor || '';\r",
								"        backgroundShade = dataTile.backgroundShade || sap.n.Launchpad.backgroundShade || 'ShadeA';\r",
								"\r",
								"        if (isIcon && !backgroundColor) backgroundColor = 'ColorSet10';\r",
								"\r",
								"        card.addStyleClass('sap' + backgroundColor + backgroundShade.substr(5, 1));\r",
								"    },\r",
								"\r",
								"    cardWidth: function (config) {\r",
								"        // Backward compability\r",
								"        if (!config.dataTile.cardWidth && config.dataTile.frameType) {\r",
								"            switch (parseInt(config.dataTile.frameType)) {\r",
								"                case 20:\r",
								"                case 25:\r",
								"                    config.dataTile.cardWidth = sap.n.Layout.tileWidth.SMALL;\r",
								"                    break;\r",
								"\r",
								"                case 30:\r",
								"                case 40:\r",
								"                    config.dataTile.cardWidth = sap.n.Layout.tileWidth.MEDIUM;\r",
								"                    break;\r",
								"\r",
								"                case 50:\r",
								"                case 60:\r",
								"                case 70:\r",
								"                    config.dataTile.cardWidth = sap.n.Layout.tileWidth.WIDE;\r",
								"                    break;\r",
								"\r",
								"                case 75:\r",
								"                case 80:\r",
								"                case 90:\r",
								"                    config.dataTile.cardWidth = sap.n.Layout.tileWidth.WIDER;\r",
								"                    break;\r",
								"\r",
								"                case 100:\r",
								"                    config.dataTile.cardWidth = sap.n.Layout.tileWidth.MAX;\r",
								"                    break;\r",
								"            }\r",
								"        }\r",
								"\r",
								"        if (!config.dataTile.cardWidth && config.dataTile.forceRow) config.dataTile.cardWidth = sap.n.Layout.tileWidth.MAX;\r",
								"        return config.dataTile.cardWidth || sap.n.Layout.tileWidth.SMALL;\r",
								"    },\r",
								"\r",
								"    buildCardDefault: function (config) {\r",
								"        let cardWidth = sap.n.Card.cardWidth(config);\r",
								"        let cardHeader;\r",
								"\r",
								"        // Favorites\r",
								"        if (config.isFav) {\r",
								"            let favData = ModelData.FindFirst(AppCacheTilesFav, 'id', config.dataTile.id);\r",
								"            if (favData) {\r",
								"                if (favData.cardWidth) cardWidth = favData.cardWidth;\r",
								"                if (favData.cardHeight) config.dataTile.cardHeight = favData.cardHeight;\r",
								"            }\r",
								"        }\r",
								"\r",
								"        // Card Container\r",
								"        let cardContainer = new sap.m.FlexBox(`${nepId()}_tile${config.dataTile.id}`, {\r",
								"            width: '100%',\r",
								"            fitContainer: true\r",
								"        }).addStyleClass('nepFCardContainer nepTile' + cardWidth);\r",
								"\r",
								"        // Card\r",
								"        let card = new sap.f.Card(nepId(), {\r",
								"            width: '100%',\r",
								"        }).addStyleClass('nepFCard tile' + config.dataTile.id);\r",
								"\r",
								"        if (config.dataTile.styleClass) cardContainer.addStyleClass(config.dataTile.styleClass);\r",
								"        if (config.dataTile.cardHeight) cardContainer.addStyleClass('nepTile' + config.dataTile.cardHeight);\r",
								"        if (config.dataTile.openClickTile) card.addStyleClass('nepTileClickable');\r",
								"        if (config.dataTile.cardHeightFit || config.dataCat.cardHeightFit) card.addStyleClass('sapFCardFitContent');\r",
								"\r",
								"        // Background Color\r",
								"        sap.n.Card.setBackgroundShade(config.dataTile, config.dataCat, card);\r",
								"\r",
								"        // Icon/Image\r",
								"        let cardIconSrc = config.dataTile.icon || '';\r",
								"\r",
								"        if (config.dataTile.cardImage) {\r",
								"            let imageUrl = AppCache.Url + config.dataTile.cardImage;\r",
								"            if (AppCache.isMobile && config.dataTile.cardImageData) cardIconSrc = config.dataTile.cardImageData;\r",
								"            cardIconSrc = imageUrl;\r",
								"        }\r",
								"\r",
								"        // Header\r",
								"        cardHeader = new sap.f.cards.Header(nepId(), {\r",
								"            title: sap.n.Launchpad.translateTile('title', config.dataTile),\r",
								"            subtitle: sap.n.Launchpad.translateTile('subTitle', config.dataTile),\r",
								"            statusText: sap.n.Launchpad.translateTile('footer', config.dataTile),\r",
								"            iconSrc: cardIconSrc,\r",
								"        });\r",
								"\r",
								"        // Content\r",
								"        let cardContent = new sap.m.FlexBox(nepId(), {\r",
								"            direction: 'Column',\r",
								"            height: '100%',\r",
								"            justifyContent: 'SpaceBetween',\r",
								"            width: '100%',\r",
								"            fitContainer: true\r",
								"        });\r",
								"\r",
								"        // Content Body\r",
								"        let cardBody = new sap.m.FlexBox(nepId(), {\r",
								"            fitContainer: true,\r",
								"            renderType: 'Bare',\r",
								"            direction: 'Column',\r",
								"            justifyContent: 'Start'\r",
								"        }).addStyleClass('nepFCardBody');\r",
								"\r",
								"        // Background Image \r",
								"        let imageSource = config.dataTile.image\r",
								"        if (AppCache.isMobile && config.dataTile.imageData) imageSource = config.dataTile.imageData;\r",
								"\r",
								"        let inlineHeight = config.dataTile.imageHeight || 'auto';\r",
								"\r",
								"        // Background Image Inline\r",
								"        if (config.dataTile.image && !config.dataTile.imagePosition) {\r",
								"\r",
								"            let imageSource = config.dataTile.image\r",
								"            if (AppCache.isMobile && config.dataTile.imageData) imageSource = config.dataTile.imageData;\r",
								"\r",
								"            let cardImage = new sap.m.Image(nepId(), {\r",
								"                src: imageSource,\r",
								"                width: '100%',\r",
								"                height: inlineHeight,\r",
								"                densityAware: false,\r",
								"            }).addStyleClass('nepFCardInlineImage tileInlineImage' + config.dataTile.id);\r",
								"\r",
								"            cardBody.addItem(cardImage);\r",
								"        }\r",
								"\r",
								"        // Background Image on Top\r",
								"        function getBackgroundImageOnTop() {\r",
								"            cardHeader.topImageId = nepId();\r",
								"            const id = cardHeader.topImageId;\r",
								"            const tileId = config.dataTile.id;\r",
								"\r",
								"            const img = new Image();\r",
								"            Object.entries({\r",
								"                'src': imageSource,                \r",
								"                'alt': '',\r",
								"                'aria-hidden': 'true',\r",
								"                'role': 'presentation',\r",
								"                'data-sap-ui': id,\r",
								"            }).forEach(function ([k, v]) {\r",
								"                img.setAttribute(k, v);\r",
								"            });\r",
								"\r",
								"            addClass(img, ['sapMImg', 'nepFCardTopImage', 'tileTopImage', tileId, `tileTopImage${tileId}`]);\r",
								"            img.style.cssText = `\r",
								"                width: 100%;\r",
								"                height: ${inlineHeight};\r",
								"            `;\r",
								"\r",
								"            return img;\r",
								"        }\r",
								"\r",
								"        const isBackgroundImageOnTop = config.dataTile.imagePosition === 'top';\r",
								"        const img = isBackgroundImageOnTop ? getBackgroundImageOnTop() : '';\r",
								"\r",
								"        // Card Body Content\r",
								"        switch (config.dataTile.type) {\r",
								"            case 'adaptive':\r",
								"                cardBody.addItem(sap.n.Card.buildCardBodyAdaptive(config));\r",
								"                break;\r",
								"\r",
								"            case 'application':\r",
								"                cardBody.addItem(sap.n.Card.buildCardBodyApplication(config));\r",
								"                break;\r",
								"\r",
								"            case 'intcard':\r",
								"                cardBody.addItem(sap.n.Card.buildCardBodyIntCard(config));\r",
								"                cardHeader.setVisible(false);\r",
								"                break;\r",
								"\r",
								"            case 'highchart':\r",
								"                cardBody.addItem(sap.n.Card.buildCardBodyHighchart(config));\r",
								"                break;\r",
								"\r",
								"            case 'highstock':\r",
								"                cardBody.addItem(sap.n.Card.buildCardBodyHighstock(config));\r",
								"                break;\r",
								"\r",
								"            default:\r",
								"                break;\r",
								"        }\r",
								"\r",
								"        // Description\r",
								"        if (config.dataTile.description) cardBody.addItem(new sap.m.Text({ text: sap.n.Launchpad.translateTile('description', config.dataTile) }).addStyleClass('nepCardDescription'));\r",
								"\r",
								"        // Action Panel\r",
								"        let cardAction = new sap.m.VBox(nepId());\r",
								"\r",
								"        // Add Objects\r",
								"        cardContainer.addItem(card);\r",
								"        cardContent.addItem(cardBody);\r",
								"        cardContent.addItem(cardAction);\r",
								"        card.setHeader(cardHeader);\r",
								"        card.setContent(cardContent);\r",
								"\r",
								"        // Actions \r",
								"        sap.n.Card.buildCardAction({\r",
								"            pageID: config.pageID,\r",
								"            dataTile: config.dataTile,\r",
								"            parent: cardAction,\r",
								"            cardActionParent: card,\r",
								"            dataCat: config.dataCat,\r",
								"            cardContainer: cardContainer,\r",
								"            isFav: config.isFav\r",
								"        });\r",
								"\r",
								"        cardHeader.onAfterRendering = function () {\r",
								"            let dom = cardHeader.getDomRef();\r",
								"            if (!dom) {\r",
								"                return;\r",
								"            }\r",
								"\r",
								"            let labelledby = dom.getAttribute('aria-labelledby') || '';\r",
								"            let split = labelledby.split(' ');\r",
								"\r",
								"            dom.setAttribute('aria-labelledby', split[0]);\r",
								"\r",
								"            // Background Image on Top\r",
								"            if (config.dataTile.imagePosition === 'top') {\r",
								"                if (!elById(cardHeader.topImageId)) {\r",
								"                    insertBeforeElm(elById(cardHeader.getId()), img);\r",
								"                }\r",
								"            }\r",
								"        };\r",
								"\r",
								"        return cardContainer;\r",
								"    },\r",
								"\r",
								"    setCardContentHeight: function (config, cardContent) {\r",
								"        if (config.dataTile.bodyHeight) cardContent.setHeight(config.dataTile.bodyHeight);\r",
								"    },\r",
								"\r",
								"    buildCardBodyAdaptive: function (config) {\r",
								"        let cardContent = new sap.m.Panel(nepId(), {\r",
								"            backgroundDesign: 'Transparent'\r",
								"        }).addStyleClass('sapUiNoContentPadding nepTileApplicationPanel');\r",
								"\r",
								"        this.setCardContentHeight(config, cardContent);\r",
								"        if (!config.dataTile.settings.adaptive.idTile) return cardContent;\r",
								"\r",
								"        sap.n.Adaptive.getConfig(config.dataTile.settings.adaptive.idTile).then(function (startParams) {\r",
								"            // Exists ? \r",
								"            if (!startParams) {\r",
								"                sap.m.MessageToast.show(AppCache_tAdaptiveNotFound.getText());\r",
								"                return;\r",
								"            }\r",
								"\r",
								"            AppCache.Load(startParams.application, {\r",
								"                parentObject: cardContent,\r",
								"                appGUID: ModelData.genID(),\r",
								"                startParams: startParams\r",
								"            });\r",
								"        }).catch(function (_data) { });\r",
								"        return cardContent;\r",
								"    },\r",
								"\r",
								"    buildCardBodyApplication: function (config) {\r",
								"        let cardContent = new sap.m.Panel(nepId(), {\r",
								"            backgroundDesign: 'Transparent'\r",
								"        }).addStyleClass('sapUiNoContentPadding nepTileApplicationPanel');\r",
								"\r",
								"        this.setCardContentHeight(config, cardContent);\r",
								"\r",
								"        let startParams = {};\r",
								"        try {\r",
								"            startParams = JSON.parse(config.dataTile.startParams);\r",
								"        } catch (e) { }\r",
								"\r",
								"        if (config.dataTile.tileApplication) {\r",
								"            AppCache.Load(config.dataTile.tileApplication, {\r",
								"                parentObject: cardContent,\r",
								"                startParams: startParams,\r",
								"            });\r",
								"        }\r",
								"\r",
								"        return cardContent;\r",
								"    },\r",
								"\r",
								"    buildCardBodyIntCard: function (config) {\r",
								"        let cardContent = new sap.m.Panel(nepId(), {\r",
								"            backgroundDesign: 'Transparent'\r",
								"        }).addStyleClass('sapUiNoContentPadding nepTileApplicationPanel');\r",
								"        this.setCardContentHeight(config, cardContent);\r",
								"\r",
								"        // Integration Card \r",
								"        let intCard = new sap.ui.integration.widgets.Card(nepId(), {\r",
								"            width: '100%',\r",
								"            manifest: AppCache.Url + config.dataTile.dataUrl,\r",
								"        }).addStyleClass('nepFCard nepICCard');\r",
								"\r",
								"        cardContent.addContent(intCard);\r",
								"        return cardContent;\r",
								"    },\r",
								"\r",
								"    buildCardBodyHighchart: function (config) {\r",
								"        let cardContent = new sap.m.Panel(nepId(), {\r",
								"            backgroundDesign: 'Transparent'\r",
								"        }).addStyleClass('sapUiNoContentPadding nepTileApplicationPanel');\r",
								"\r",
								"        this.setCardContentHeight(config, cardContent);\r",
								"\r",
								"        let chartId = 'chart' + ModelData.genID();\r",
								"        let chartHeight = config.dataTile.bodyHeight || '400px';\r",
								"        let oHighchart;\r",
								"\r",
								"        let oHighchartHTML = new sap.ui.core.HTML(nepId(), {\r",
								"            content: `<div id=\"${chartId}\" style=\"height:100%; width:100%\"></div>`,\r",
								"            afterRendering: function (oEvent) {\r",
								"                setTimeout(function () {\r",
								"                    let chartData = localStorage.getItem(`p9TileChart${config.dataTile.id}`);\r",
								"                    if (chartData) {\r",
								"                        chartData = JSON.parse(chartData);\r",
								"                        if (!chartData.chart) chartData.chart = {};\r",
								"                        chartData.chart.renderTo = chartId;\r",
								"                        oHighchart = Highcharts.chart(chartData);\r",
								"                    } else {\r",
								"                        oHighchart = Highcharts.chart({\r",
								"                            chart: {\r",
								"                                renderTo: chartId,\r",
								"                                height: chartHeight,\r",
								"                                style: { fontFamily: '72' }\r",
								"                            },\r",
								"                            credits: { enabled: false },\r",
								"                            title: { text: '' },\r",
								"                            subTitle: { text: '' },\r",
								"                            series: []\r",
								"                        });\r",
								"                    }\r",
								"\r",
								"                    // Fetch Data \r",
								"                    if (config.dataTile.dataUrl) {\r",
								"\r",
								"                        // Trigger Pull 1. Time\r",
								"                        setTimeout(function () { sap.n.Launchpad.getHighchartData(config.dataTile, oHighchart, config.pageID, chartId, 'start'); }, 250);\r",
								"\r",
								"                        // Pull Interval\r",
								"                        if (config.dataTile.dataInterval && config.dataTile.dataInterval !== '0' && !sap.n.Launchpad.Timers[chartId]) {\r",
								"                            sap.n.Launchpad.Timers[chartId] = {\r",
								"                                timer: setInterval(function () {\r",
								"                                    if (sap.n.Launchpad.Timers[chartId].pageId !== AppCacheNav.getCurrentPage().sId) return;\r",
								"                                    sap.n.Launchpad.getHighchartData(config.dataTile, oHighchart, config.pageID, chartId, 'continue');\r",
								"                                }, config.dataTile.dataInterval * 1000),\r",
								"                                pageId: config.pageID\r",
								"                            };\r",
								"                        }\r",
								"                    }\r",
								"\r",
								"                }, 200);\r",
								"            }\r",
								"        });\r",
								"\r",
								"        cardContent.addContent(oHighchartHTML);\r",
								"        return cardContent;\r",
								"    },\r",
								"\r",
								"    buildCardBodyHighstock: function (config) {\r",
								"        let cardContent = new sap.m.Panel(nepId(), {\r",
								"            backgroundDesign: 'Transparent'\r",
								"        }).addStyleClass('sapUiNoContentPadding nepTileApplicationPanel');\r",
								"\r",
								"        this.setCardContentHeight(config, cardContent);\r",
								"\r",
								"        let chartId = 'chart' + ModelData.genID();\r",
								"        let chartHeight = config.dataTile.bodyHeight || '400px';\r",
								"        let oHighchart;\r",
								"\r",
								"        let oHighchartHTML = new sap.ui.core.HTML(nepId(), {\r",
								"            content: `<div id=\"${chartId}\" style='height:100%;width:100%'></div>`,\r",
								"            afterRendering: function (oEvent) {\r",
								"                let chartData = localStorage.getItem('p9TileChart' + config.dataTile.id);\r",
								"                if (chartData) {\r",
								"                    let chartData = JSON.parse(chartData);\r",
								"                    if (!chartData.chart) chartData.chart = {};\r",
								"                    chartData.chart.renderTo = chartId;\r",
								"                    oHighchart = Highcharts.stockChart(chartData);\r",
								"                } else {\r",
								"                    oHighchart = Highcharts.stockChart({\r",
								"                        chart: {\r",
								"                            renderTo: chartId,\r",
								"                            height: chartHeight,\r",
								"                            style: { fontFamily: '72' }\r",
								"                        },\r",
								"                        credits: { enabled: false },\r",
								"                        title: { text: '' },\r",
								"                        subTitle: { text: '' },\r",
								"                        series: []\r",
								"                    });\r",
								"                }\r",
								"\r",
								"                // Fetch Data \r",
								"                if (config.dataTile.dataUrl) {\r",
								"                    // Trigger Pull 1. Time\r",
								"                    setTimeout(function () { sap.n.Launchpad.getHighstockData(config.dataTile, oHighchart, config.pageID, chartId, 'start'); }, 250);\r",
								"\r",
								"                    // Pull Interval\r",
								"                    if (config.dataTile.dataInterval && config.dataTile.dataInterval !== '0' && !sap.n.Launchpad.Timers[chartId]) {\r",
								"                        sap.n.Launchpad.Timers[chartId] = {\r",
								"                            timer: setInterval(function () {\r",
								"                                if (sap.n.Launchpad.Timers[chartId].pageId !== AppCacheNav.getCurrentPage().sId) return;\r",
								"                                sap.n.Launchpad.getHighstockData(config.dataTile, oHighchart, config.pageID, chartId, 'continue');\r",
								"                            }, config.dataTile.dataInterval * 1000),\r",
								"                            pageId: config.pageID\r",
								"                        };\r",
								"                    }\r",
								"                }\r",
								"            }\r",
								"        });\r",
								"\r",
								"        cardContent.addContent(oHighchartHTML);\r",
								"        return cardContent;\r",
								"    },\r",
								"\r",
								"    buildCardAction: function (config) {\r",
								"        let dataTile = config.dataTile;\r",
								"        let buttonStyle = '';\r",
								"        let supportedBrowser = true;\r",
								"        let openEnabled = true;\r",
								"        let cardActionContainer = new sap.m.FlexBox(nepId(), {}).addStyleClass('nepActionContainer nepCardAction sapUiSizeCompact');\r",
								"\r",
								"        // Check Offline Mode -> Disable Open button \r",
								"        if (AppCache.isOffline) {\r",
								"            if (dataTile.actionURL) openEnabled = false;\r",
								"            if (dataTile.type === 'storeitem') openEnabled = false;\r",
								"            if (!dataTile.urlApplication) dataTile.urlApplication = '';\r",
								"\r",
								"            if (dataTile.actionApplication) {\r",
								"                let app = ModelData.FindFirst(AppCacheData,\r",
								"                    ['application', 'language', 'appPath'],\r",
								"                    [dataTile.actionApplication.toUpperCase(),\r",
								"                    AppCache.userInfo.language,\r",
								"                    dataTile.urlApplication || '']);\r",
								"                if (!app) openEnabled = false;\r",
								"            }\r",
								"\r",
								"            if (dataTile.actionWebApp) {\r",
								"                if (dataTile.openWindow) {\r",
								"                    openEnabled = false;\r",
								"                } else {\r",
								"                    let viewName = 'webapp:' + dataTile.actionWebApp + ':' + dataTile.urlApplication;\r",
								"\r",
								"                    // Get App from Cache\r",
								"                    if (typeof p9Database !== 'undefined' && p9Database !== null) {\r",
								"                        p9GetView(viewName).then(function (viewData) {\r",
								"                            if (viewData.length < 10) openEnabled = false;\r",
								"                        });\r",
								"                    } else {\r",
								"                        if (!sapStorageGet(viewName)) openEnabled = false;\r",
								"                    }\r",
								"                }\r",
								"            }\r",
								"        }\r",
								"\r",
								"        // Supported Browsers\r",
								"        const w = dataTile.browserBlockWin;\r",
								"        if (sap.ui.Device.os.name === 'win' && w && w !== '[]' && w.indexOf(sap.ui.Device.browser.name) === -1) {\r",
								"            supportedBrowser = false;\r",
								"        }\r",
								"\r",
								"        const m = dataTile.browserBlockMac;\r",
								"        if (sap.ui.Device.os.name === 'mac' && m && dataTile.browserBlockWin !== '[]' && m.indexOf(sap.ui.Device.browser.name) === -1) {\r",
								"            supportedBrowser = false;\r",
								"        }\r",
								"\r",
								"        let butStart;\r",
								"        let inFavCat;\r",
								"\r",
								"        if (dataTile.actionType === 'F' || dataTile.actionApplication || dataTile.actionWebApp || dataTile.actionURL || dataTile.actiongroup || dataTile.type === 'storeitem') {\r",
								"            if (supportedBrowser) {\r",
								"                if (dataTile.blackoutEnabled) {\r",
								"                    butStart = new sap.m.Button(nepId(), {\r",
								"                        text: dataTile.blackoutText,\r",
								"                        press: function (oEvent) {\r",
								"                            descBlackout.editor.setData(dataTile.blackoutDescription);\r",
								"                            popBlackout.openBy(this);\r",
								"                        }\r",
								"                    });\r",
								"                    butStart.addStyleClass('nepTileAction sapUiTinyMarginEnd nepTileBlackout ' + buttonStyle);\r",
								"                } else {\r",
								"                    if (dataTile.openClickTile) {\r",
								"                        if (openEnabled) {\r",
								"                            config.cardActionParent.attachBrowserEvent('tap', function (oEvent) {\r",
								"                                setTimeout(function () {\r",
								"                                    if (sap.n.Launchpad.favInProcess) {\r",
								"                                        sap.n.Launchpad.favInProcess = false;\r",
								"                                    } else {\r",
								"                                        sap.n.Launchpad.HandleTilePress(dataTile, config.dataCat);\r",
								"                                    }\r",
								"                                }, 50);\r",
								"                            });\r",
								"                            cardActionContainer.addStyleClass('nepNavBarTile');\r",
								"                        }\r",
								"                    } else {\r",
								"                        let openText = (dataTile.cardButtonIconOnly) ? '' : AppCache_tOpen.getText();\r",
								"                        if (dataTile.openText) openText = sap.n.Launchpad.translateTile('openText', dataTile);\r",
								"                        butStart = new sap.m.Button(nepId(), {\r",
								"                            text: openText,\r",
								"                            enabled: openEnabled,\r",
								"                            icon: dataTile.cardButtonIcon,\r",
								"                            press: function (oEvent) {\r",
								"                                sap.n.Launchpad.HandleTilePress(dataTile, config.dataCat);\r",
								"                            }\r",
								"                        });\r",
								"\r",
								"                        butStart.addStyleClass('nepTileAction sapUiTinyMarginEnd ' + buttonStyle);\r",
								"                    }\r",
								"                }\r",
								"            } else {\r",
								"                butStart = new sap.m.Button(nepId(), {\r",
								"                    text: AppCache_tIncompatible.getText(),\r",
								"                    iconFirst: false,\r",
								"                    enabled: openEnabled,\r",
								"                    icon: 'sap-icon://sys-help',\r",
								"                    press: function (oEvent) {\r",
								"                        let browsers;\r",
								"                        \r",
								"                        if (sap.ui.Device.os.name === 'win') browsers = JSON.parse(dataTile.browserBlockWin);\r",
								"                        if (sap.ui.Device.os.name === 'mac') browsers = JSON.parse(dataTile.browserBlockMac);\r",
								"\r",
								"                        const m = {\r",
								"                            'cr': 'Chrome',\r",
								"                            'ed': 'Edge',\r",
								"                            'ff': 'Firefox',\r",
								"                            'ie': 'Internet Explorer',\r",
								"                            'op': 'Opera',\r",
								"                            'sf': 'Safari',\r",
								"                        };\r",
								"\r",
								"                        let array = browsers.map(function (k) {\r",
								"                            return { name: m[k] };\r",
								"                        });\r",
								"                        array.sort(sort_by('name'));\r",
								"                        modellistSupportedBrowsers.setData(array);\r",
								"                        popSupportedBrowsers.openBy(this);\r",
								"                    }\r",
								"                });\r",
								"\r",
								"                butStart.addStyleClass('nepTileAction nepTileBlocked sapUiTinyMarginEnd ' + buttonStyle);\r",
								"                cardActionContainer.addItem(butStart);\r",
								"            }\r",
								"\r",
								"            let butIdAdd = config.isFav ? '' : 'FavAdd';\r",
								"            let butFavAdd = new sap.m.Button(`${nepPrefix()}${butIdAdd}${dataTile.id}`, {\r",
								"                tooltip: AppCache_tAddFav.getText(),\r",
								"                icon: 'sap-icon://unfavorite',\r",
								"                press: function (oEvent) {\r",
								"                    sap.n.Launchpad.favInProcess = true;\r",
								"\r",
								"                    ModelData.Update(AppCacheTilesFav, 'id', dataTile.id, dataTile);\r",
								"                    setCacheAppCacheTilesFav();\r",
								"\r",
								"                    butFavDel.setVisible(true);\r",
								"                    butFavAdd.setVisible(false);\r",
								"\r",
								"                    sap.n.Launchpad.handleFavRedraw();\r",
								"                }\r",
								"            });\r",
								"\r",
								"            butFavAdd.addStyleClass('nepTileAction sapUiTinyMarginEnd ' + buttonStyle);\r",
								"\r",
								"            let butIdDel = config.isFav ? '' : 'FavDel';\r",
								"            let butFavDel = new sap.m.Button(`${nepPrefix()}${butIdDel}${dataTile.id}`, {\r",
								"                tooltip: AppCache_tDelFav.getText(),\r",
								"                icon: 'sap-icon://favorite',\r",
								"                press: function (oEvent) {\r",
								"                    sap.n.Launchpad.favInProcess = true;\r",
								"                    sap.n.Utils.message({\r",
								"                        title: AppCache_tFavTitle.getText(),\r",
								"                        intro: AppCache_tFavConfirm.getText(),\r",
								"                        text1: AppCache_tDelFavConfirm.getText(),\r",
								"                        state: 'Warning',\r",
								"                        acceptText: AppCache_tDelFavRemove.getText(),\r",
								"                        onAccept: function (oAction) {\r",
								"\r",
								"                            ModelData.Delete(AppCacheTilesFav, 'id', dataTile.id);\r",
								"                            setCacheAppCacheTilesFav();\r",
								"\r",
								"                            let butFavAdd = sap.ui.getCore().byId(`${nepPrefix()}FavAdd${dataTile.id}`);\r",
								"                            if (butFavAdd) butFavAdd.setVisible(true);\r",
								"\r",
								"                            let butFavDel = sap.ui.getCore().byId(`${nepPrefix()}FavDel${dataTile.id}`);\r",
								"                            if (butFavDel) butFavDel.setVisible(false);\r",
								"\r",
								"                            sap.n.Launchpad.handleFavRedraw();\r",
								"                        }\r",
								"                    });\r",
								"                }\r",
								"            });\r",
								"\r",
								"            butFavDel.addStyleClass('nepTileAction sapUiTinyMarginEnd ' + buttonStyle);\r",
								"\r",
								"            // Tile is by default in Fav Category\r",
								"            inFavCat = ModelData.FindFirst(config.dataCat.tiles, 'id', dataTile.id);\r",
								"\r",
								"            // Fav\r",
								"            let rec = ModelData.Find(AppCacheTilesFav, 'id', dataTile.id);\r",
								"            if (rec.length) {\r",
								"                butFavAdd.setVisible(false);\r",
								"                butFavDel.setVisible(true);\r",
								"            } else {\r",
								"                butFavAdd.setVisible(true);\r",
								"                butFavDel.setVisible(false);\r",
								"            }\r",
								"\r",
								"            if (!dataTile.openClickTile || dataTile.blackoutEnabled) cardActionContainer.addItem(butStart);\r",
								"\r",
								"            if (!AppCache.isPublic && sap.n.Launchpad.enableFav && !AppCache.isOffline) {\r",
								"                if (config.dataCat.inclFav && inFavCat) {\r",
								"                } else {\r",
								"                    cardActionContainer.addItem(butFavAdd);\r",
								"                    cardActionContainer.addItem(butFavDel);\r",
								"                }\r",
								"            }\r",
								"        }\r",
								"\r",
								"        // Help \r",
								"        if (dataTile.helpEnabled) {\r",
								"            let butHelp = new sap.m.Button(nepId(), {\r",
								"                tooltip: AppCache_tHelp.getText(),\r",
								"                icon: 'sap-icon://sys-help',\r",
								"                press: function (oEvent) {\r",
								"                    descBlackout.editor.setData(dataTile.helpText);\r",
								"                    popBlackout.openBy(this);\r",
								"                }\r",
								"            });\r",
								"\r",
								"            cardActionContainer.addItem(butHelp);\r",
								"        }\r",
								"\r",
								"\r",
								"        // Favorites Config \r",
								"        if (config.dataCat.inclFav && !inFavCat) {\r",
								"            let butConfigspacer = new sap.m.HBox(nepId(), {\r",
								"                width: '100%'\r",
								"            });\r",
								"\r",
								"            let butConfig = new sap.m.Button(nepId(), {\r",
								"                tooltip: AppCache_tHelp.getText(),\r",
								"                icon: 'sap-icon://resize-corner',\r",
								"                type: 'Transparent',\r",
								"                press: function (oEvent) {\r",
								"                    let favData = ModelData.FindFirst(AppCacheTilesFav, 'id', config.dataTile.id);\r",
								"                    modelpopConfig.setData(favData);\r",
								"                    popConfig.openBy(this);\r",
								"                }\r",
								"            }).addStyleClass('nepActionConfig');\r",
								"\r",
								"            cardActionContainer.addItem(butConfigspacer);\r",
								"            cardActionContainer.addItem(butConfig);\r",
								"            config.cardContainer.addStyleClass('dragCursor');\r",
								"        }\r",
								"\r",
								"        config.parent.addItem(cardActionContainer);\r",
								"    }\r",
								"};\r",
								""
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "11606f12-e740-4cf0-b86c-45a9f756e956",
							"fieldName": "sap.n.Dialog",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"// Dialog Constructor",
								"sap.m.Dialog.extend('sap.n.Dialog', {",
								"    metadata: {",
								"        properties: {",
								"            'hideMinimize': { type: 'boolean', defaultValue: false },",
								"            'hideMosaic': { type: 'boolean', defaultValue: false },",
								"            'hideMaximize': { type: 'boolean', defaultValue: false },",
								"            'icon': { type: 'sap.ui.core.Icon', },",
								"            'contentIsURL': { type: 'boolean', defaultValue: false },",
								"            '_origWidth': { type: 'sap.ui.core.CSSSize' },",
								"            '_origHeight': { type: 'sap.ui.core.CSSSize' },",
								"            '_origTop': { type: 'sap.ui.core.CSSSize' },",
								"            '_origLeft': { type: 'sap.ui.core.CSSSize' },",
								"            '_headerIcon': { type: 'sap.ui.core.Icon' },",
								"            '_headerTitle': { type: 'sap.m.Title' },",
								"            '_butMaximize': { type: 'sap.m.Button' },",
								"            '_butMinimize': { type: 'sap.m.Button' },",
								"            '_butRestore': { type: 'sap.m.Button' },",
								"            '_butMosaic': { type: 'sap.m.Button' },",
								"            '_butClose': { type: 'sap.m.Button' },",
								"            '_viewContent': { type: 'string' }",
								"        },",
								"    },",
								"",
								"    init: function () {",
								"        sap.m.Dialog.prototype.init.call(this);",
								"",
								"        const dia = this;",
								"        dia._viewContent = AppCache.diaView;",
								"",
								"        // Dialog Header",
								"        const diaHeader = new sap.m.Bar();",
								"        dia.setCustomHeader(diaHeader);",
								"",
								"        this._headerIcon = new sap.ui.core.Icon({ width: '30px' });",
								"        diaHeader.addContentLeft(this._headerIcon);",
								"",
								"        // Dialog Icon",
								"        if (sap.n.Launchpad.contextType === 'Tile') {",
								"            this._headerIcon.setSrc(sap.n.Launchpad.contextTile.icon);",
								"        } else {",
								"            this._headerIcon.setSrc();",
								"        }",
								"",
								"        // Dialog Title",
								"        this._headerTitle = new sap.m.Title({ titleStyle: 'H6' });",
								"        diaHeader.addContentLeft(this._headerTitle);",
								"",
								"        // Minimize button",
								"        this._butMinimize = new sap.m.Button({",
								"            icon: 'sap-icon://minimize',",
								"            press: function (oEvent) {",
								"                dia.minimize(dia);",
								"            }",
								"        });",
								"        this._butMinimize.setTooltip(' ');",
								"        diaHeader.addContentRight(this._butMinimize);",
								"",
								"        // Mosaic button",
								"        this._butMosaic = new sap.m.Button({",
								"            icon: 'sap-icon://grid',",
								"            press: function (oEvent) {",
								"                dia.mosaic();",
								"            }",
								"        });",
								"        this._butMosaic.setTooltip(' ');",
								"        diaHeader.addContentRight(this._butMosaic);",
								"",
								"",
								"        // Maximize button",
								"        this._butMaximize = new sap.m.Button({",
								"            icon: 'sap-icon://full-screen',",
								"            press: function (oEvent) {",
								"                dia.maximize();",
								"            }",
								"        });",
								"        this._butMaximize.setTooltip(' ');",
								"        diaHeader.addContentRight(this._butMaximize);",
								"",
								"        this._butRestore = new sap.m.Button({ // Restore button",
								"            icon: 'sap-icon://exit-full-screen',",
								"            visible: false,",
								"            press: function (oEvent) {",
								"                dia.restore();",
								"            }",
								"        });",
								"        this._butRestore.setTooltip(' ');",
								"        diaHeader.addContentRight(this._butRestore);",
								"",
								"",
								"        // Close button",
								"        this._butClose = new sap.m.Button({",
								"            icon: 'sap-icon://decline',",
								"            press: function (oEvent) {",
								"                dia.close();",
								"            }",
								"        });",
								"        this._butClose.setTooltip(' ');",
								"        diaHeader.addContentRight(this._butClose);",
								"",
								"        setTimeout(function () {",
								"            dia._headerTitle.setText(dia.getTitle());",
								"            if (dia.getIcon()) dia._headerIcon.setSrc(dia.getIcon());",
								"        }, 50);",
								"",
								"        // Dialog Styling",
								"        dia.addStyleClass('sapUiNoContentPadding');",
								"",
								"        const modal = AppCache.LoadOptions.dialogModal ? true : false;",
								"        dia.oPopup.setModal(modal);",
								"    },",
								"",
								"    onBeforeRendering: function () {",
								"        this._butMinimize.setVisible(!this.getHideMinimize());",
								"        this._butMosaic.setVisible(!this.getHideMosaic());",
								"        this._butMaximize.setVisible(!this.getHideMaximize());",
								"    },",
								"",
								"",
								"    // trigger BeforeClose event before closing",
								"    close: function () {",
								"        if (this.getContent()[0].sViewName) {",
								"            const applid = this.getContent()[0].sViewName.replace(/\\//g, ''); // Format ID",
								"            if (applid) { // trigger custom beforeClose",
								"                if (sap.n.Apps[applid] && sap.n.Apps[applid].beforeClose) {",
								"                    sap.n.Apps[applid].beforeClose.forEach(function (data) {",
								"                        data();",
								"                    });",
								"                }",
								"            }",
								"        }",
								"",
								"        sap.m.Dialog.prototype.close.call(this);",
								"        return this;",
								"    },",
								"",
								"    ondblclick: function (oEvent) { },",
								"",
								"    targetElId: function () { return `#${this.sId}`; },",
								"    targetEl: function () { return querySelector(this.targetElId()); },",
								"",
								"    _getCSS: function (name) { return getStyle(this.targetEl(), name); },",
								"    _setCSS: function (name, value) { setStyle(this.targetEl(), name, value); },",
								"",
								"    setVisibility: function (value) { this._setCSS('visibility', value); },",
								"    setHeight: function (height) {",
								"        const dialog = this.getDomRef();",
								"        if (!dialog) return;",
								"",
								"        const section = dialog.querySelector('.sapMDialogSection');",
								"        if (!section) return;",
								"",
								"        section.style.height = height;",
								"    },",
								"",
								"    maximize: function (event) {",
								"        if (this.getContentIsURL()) {",
								"            const oDomRef = this.getDomRef();",
								"",
								"            // Store original values",
								"            this._origLeft = oDomRef.style.left;",
								"            this._origTop = oDomRef.style.top;",
								"            this._origWidth = oDomRef.style.width;",
								"            this._origHeight = oDomRef.style.height;",
								"",
								"            // Maximize",
								"            oDomRef.style.width = '100%';",
								"            oDomRef.style.height = '99%';",
								"            oDomRef.style.top = oDomRef.style.top.includes('%') ? '50%' : '1px';",
								"            oDomRef.style.left = oDomRef.style.left.includes('%') ? '50%' : '1px';",
								"            ",
								"            oDomRef.style['max-height'] = '94%';",
								"            oDomRef.style['max-width'] = '100%';",
								"        } else {",
								"            this.setStretch(true);",
								"        }",
								"",
								"        this.setHeight('');",
								"        this._butMaximize.setVisible(false);",
								"        this.setHideMaximize(true);",
								"        this._butRestore.setVisible(true);",
								"    },",
								"",
								"    unminimize: function (oControl) {",
								"        AppCacheShellDialog.focus(); // IE11 looses focus",
								"        oControl.destroy(); // Destroy toolbar button",
								"",
								"        if (this.getContentIsURL()) {",
								"            this.setVisibility('visible');",
								"        } else {",
								"            this.setVisible(true);",
								"        }",
								"",
								"        if (AppCacheUserDialog.getButtons().length === 1) AppCacheShellDialog.setVisible(false);",
								"    },",
								"",
								"    onAfterRendering: function () {",
								"        sap.m.Dialog.prototype.onAfterRendering.call(this);",
								"",
								"        if (!this.getContentIsURL()) { // override CSS after rerender",
								"            applyCSSToElmId(this.targetElId(), {",
								"                'max-height': '95%',",
								"                'max-width': '98%',",
								"                'min-height': 'initial',",
								"                'min-width': 'initial',",
								"                'transform': '',",
								"            });",
								"        }",
								"    },",
								"",
								"    minimize: function () {",
								"        const dia = this;",
								"",
								"        AppCacheShellDialog.setVisible(true);",
								"        // Add button to Top Shell Bar",
								"        AppCacheUserDialog.addButton(new sap.m.Button({",
								"            icon: dia._headerIcon.getSrc(),",
								"            text: dia._headerTitle.getText(),",
								"            press: function () {",
								"                dia.unminimize(this);",
								"            }",
								"",
								"        }));",
								"",
								"        if (this.getContentIsURL()) {",
								"            this.setVisibility('hidden');",
								"        } else {",
								"            this.setVisible(false);",
								"        }",
								"    },",
								"",
								"    restore: function (event) {",
								"        if (this.getContentIsURL()) {",
								"            applyCSSToElmId(this.targetElId(), {",
								"                'left': this._origLeft,",
								"                'top': this._origTop,",
								"                'width': this._origWidth,",
								"                'height': this._origHeight,",
								"            });",
								"        } else {",
								"            this.setStretch(false);",
								"        }",
								"",
								"        this.setHeight('');",
								"        this._butMaximize.setVisible(true);",
								"        this.setHideMaximize(false);",
								"        this._butRestore.setVisible(false);",
								"    },",
								"",
								"    _isPrime: function (num) {",
								"        for (let i = 2; i < num; i++) {",
								"            if (num % i === 0) {",
								"                return false;",
								"            }",
								"        }",
								"        return true;",
								"    },",
								"",
								"    _buildPrimesArray: function (max) {",
								"        let arr = [2];",
								"        for (let i = 3; i <= max; i += 2) {",
								"            if (this._isPrime(i)) {",
								"                arr.push(i);",
								"            }",
								"        }",
								"        return arr;",
								"    },",
								"",
								"    mosaic: function () {",
								"        let diaArray = [];",
								"        AppCache.Dialogs.forEach(function (data) {",
								"            let dia = sap.ui.getCore().byId(data);",
								"            if (dia.getVisible() && dia._getCSS('visibility') !== 'hidden') {",
								"                diaArray.push(data);",
								"            }",
								"        });",
								"",
								"        if (diaArray.length <= 1) {",
								"            return;",
								"        }",
								"",
								"        // Calculate sections needed (prime numbers)",
								"        let primesArray = this._buildPrimesArray(diaArray.length);",
								"",
								"        for (i = 0; i < primesArray.length; i++) {",
								"            let r = diaArray.length % primesArray[i];",
								"            if (r === 0) {",
								"                let div = diaArray.length / primesArray[i];",
								"",
								"                let hsecs, vsecs;",
								"                if (div >= primesArray[i]) {",
								"                    hsecs = div;",
								"                    vsecs = primesArray[i];",
								"                } else {",
								"                    hsecs = primesArray[i];",
								"                    vsecs = div;",
								"                }",
								"                i = primesArray.length + 1;",
								"            }",
								"        }",
								"",
								"        let eachSecWidth = Math.floor((window.innerWidth - 10) / hsecs);",
								"        let eachSecHeight = Math.floor((window.innerHeight - 10) / vsecs) - 48;",
								"        let eachSecWidthCSS = eachSecWidth + 'px';",
								"        let eachSecHeightCSS = eachSecHeight + 'px';",
								"",
								"        let currHsec = 1;",
								"        let currVsec = 1;",
								"        for (i = 0; i < diaArray.length; i++) {",
								"            let newTop = ((currVsec - 1) * eachSecHeight) + 4;",
								"            let newLeft = ((currHsec - 1) * eachSecWidth) + 5;",
								"",
								"            if (currVsec > 1)",
								"                newTop = newTop + 48;",
								"",
								"            let d = sap.ui.getCore().byId(diaArray[i]);",
								"            //remove the transform translate",
								"            d._bDisableRepositioning = true;",
								"            d._$dialog.addClass('sapDialogDisableTransition sapMDialogTouched');",
								"",
								"            d._oManuallySetPosition = {",
								"                x: newLeft,",
								"                y: newTop",
								"            };",
								"",
								"            d._oManuallySetSize = {",
								"                height: eachSecHeightCSS,",
								"                width: eachSecWidthCSS",
								"            };",
								"",
								"            applyCSSToElmId(querySelector(d.sId), {",
								"                'top': newTop,",
								"                'left': newLeft,",
								"                'width': eachSecWidthCSS,",
								"                'height': eachSecHeightCSS,",
								"                'max-height': '95%',",
								"                'max-width': '98%',",
								"                'min-height': 'initial',",
								"                'min-width': 'initial',",
								"                'transform': '',",
								"            });",
								"",
								"            if (currHsec === hsecs) {",
								"                currVsec++;",
								"                currHsec = 1;",
								"            } else {",
								"                currHsec++;",
								"            }",
								"        }",
								"    },",
								"",
								"    rerender: function () {",
								"        if (!this.getContentIsURL()) {",
								"            sap.m.Dialog.prototype.rerender.call(this);",
								"        }",
								"    },",
								"",
								"    renderer: {}",
								"});",
								""
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "32332f2b-bb4f-4dca-e175-965c17576b82",
							"fieldName": "sap.n.Enhancement",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"sap.n.Enhancement = {\r",
								"    spots: [\r",
								"        {\r",
								"            title: 'Global Functions',\r",
								"            name: 'global',\r",
								"            description: 'Reuse global functions declared in this enhancement spot. Use the object sap.n.Enhancement.global for methods/data',\r",
								"            param: '',\r",
								"            sort: 10,\r",
								"            group: 'Common'\r",
								"        },\r",
								"        {\r",
								"            title: 'Before Startup',\r",
								"            name: 'BeforeStartup',\r",
								"            description: 'Triggers after UI5 is loaded but before Startup of desktop/mobile',\r",
								"            param: '',\r",
								"            sort: 20,\r",
								"            group: 'Common'\r",
								"        },\r",
								"        {\r",
								"            title: 'After Get Tiles',\r",
								"            name: 'SuccessGetMenu',\r",
								"            description: 'Triggers after GetTiles request and before tiles/tile groups is re-rendered if changes are detected in tiles/tile groups',\r",
								"            param: '',\r",
								"            sort: 40,\r",
								"            group: 'Common'\r",
								"        },\r",
								"        {\r",
								"            title: 'After Tile Group Renderer',\r",
								"            name: 'AfterTileGroupRenderer',\r",
								"            description: 'Triggers after Tile Group is rendered',\r",
								"            param: 'Container, dataCat',\r",
								"            sort: 50,\r",
								"            group: 'Common'\r",
								"        },\r",
								"        {\r",
								"            title: 'Before Logout',\r",
								"            name: 'BeforeLogout',\r",
								"            description: 'Triggers right after user starts the logout process.',\r",
								"            param: '',\r",
								"            sort: 51,\r",
								"            group: 'Common'\r",
								"        },\r",
								"        {\r",
								"            title: 'After Logout',\r",
								"            name: 'AfterLogout',\r",
								"            description: 'Triggers when a logout process finishes successfully.',\r",
								"            param: '',\r",
								"            sort: 52,\r",
								"            group: 'Common'\r",
								"        },\r",
								"        {\r",
								"            title: 'Set User Info',\r",
								"            name: 'setUserInfo',\r",
								"            description: 'Triggers when we set username in the launchpad',\r",
								"            param: '',\r",
								"            sort: 32,\r",
								"            group: 'Common'\r",
								"        },\r",
								"        {\r",
								"            title: 'After Update',\r",
								"            name: 'AfterUpdate',\r",
								"            description: 'Triggers after AppCache.Update is done',\r",
								"            param: '',\r",
								"            sort: 31,\r",
								"            group: 'Common'\r",
								"        },\r",
								"        {\r",
								"            title: 'Before Update',\r",
								"            name: 'BeforeUpdate',\r",
								"            description: 'Triggers before AppCache.Update is started and tiles/tile groups is rendered for the first time. Supports Promise',\r",
								"            param: '',\r",
								"            sort: 30,\r",
								"            group: 'Common'\r",
								"        },\r",
								"        {\r",
								"            title: 'Restricted Enable',\r",
								"            name: 'RestrictedEnable',\r",
								"            description: 'Triggers after user lock/logout',\r",
								"            param: '',\r",
								"            sort: 220,\r",
								"            group: 'Mobile/PWA'\r",
								"        },\r",
								"        {\r",
								"            title: 'Restricted Disable',\r",
								"            name: 'RestrictedDisable',\r",
								"            description: 'Triggers after unlock/login before AppCache.Update',\r",
								"            param: '',\r",
								"            sort: 210,\r",
								"            group: 'Mobile/PWA'\r",
								"        },\r",
								"        {\r",
								"            title: 'Before Lock',\r",
								"            name: 'BeforeLock',\r",
								"            description: 'Triggers before user is logged out when locking the user. Can be used to logoff user in other systems',\r",
								"            param: '',\r",
								"            sort: 201,\r",
								"            group: 'Mobile/PWA'\r",
								"        },\r",
								"        {\r",
								"            title: 'Before Set Settings',\r",
								"            name: 'BeforeSetSettingsMobile',\r",
								"            description: 'Triggers before applying settings from server or cache',\r",
								"            param: 'settings',\r",
								"            sort: 200,\r",
								"            group: 'Mobile/PWA'\r",
								"        },\r",
								"        {\r",
								"            title: 'Clear Cookies',\r",
								"            name: 'ClearCookies',\r",
								"            description: 'Add your own logic when clearing cookies',\r",
								"            param: '',\r",
								"            sort: 290,\r",
								"            group: 'Mobile/PWA'\r",
								"        },\r",
								"        {\r",
								"            title: 'Push Notification',\r",
								"            name: 'PushNotification',\r",
								"            description: 'Triggers when receiving push notification when the launchpad is started and in foreground',\r",
								"            param: 'notification',\r",
								"            sort: 110,\r",
								"            group: 'Push Notifications'\r",
								"        },\r",
								"        {\r",
								"            title: 'Push Registration',\r",
								"            name: 'PushRegistration',\r",
								"            description: 'Triggers when browser/device register for push notification',\r",
								"            param: 'dataDevice',\r",
								"            sort: 100,\r",
								"            group: 'Push Notifications'\r",
								"        },\r",
								"        {\r",
								"            title: 'Hash Navigation',\r",
								"            name: 'HashNavigation',\r",
								"            description: 'Intercept and add you logic when the Launchpad detects hash navigation',\r",
								"            param: 'hash',\r",
								"            sort: 900,\r",
								"            group: 'Events'\r",
								"        },\r",
								"        {\r",
								"            title: 'Tile Click',\r",
								"            name: 'TileClick',\r",
								"            description: 'Event when tile is clicked, use for custom analytics or other',\r",
								"            param: 'dataTile',\r",
								"            sort: 910,\r",
								"            group: 'Events'\r",
								"        },\r",
								"        {\r",
								"            title: 'Remote System Authentication',\r",
								"            name: 'RemoteSystemAuth',\r",
								"            description: 'When using tile from remote system you can add custom header fields',\r",
								"            param: 'headers',\r",
								"            sort: 800,\r",
								"            group: 'Authentication'\r",
								"        },\r",
								"        {\r",
								"            title: 'Pin Code Validation',\r",
								"            name: 'PinCodeValidation',\r",
								"            description: 'Called when validating the pin code that the user is attempting to set',\r",
								"            param: 'pincode, validity',\r",
								"            sort: 1000,\r",
								"            group: 'Mobile/PWA'\r",
								"        }\r",
								"    ],\r",
								"\r",
								"    getSpots: function () {\r",
								"        window.parent.postMessage({ spots: sap.n.Enhancement.spots }, location.href);\r",
								"    }\r",
								"};"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "09951d87-4238-45a3-cfc7-7e64e42d19e2",
							"fieldName": "sap.n.Fingerprint",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"function isBasicAuthSetupInvalid() {",
								"    return (",
								"        typeof cordova === 'undefined' ||",
								"        typeof cordova.plugins === 'undefined' ||",
								"        typeof cordova.plugins.SecureKeyStore === 'undefined' ||",
								"        window.navigator.simulator ||",
								"        !AppCache.biometricAuthentication",
								"    )",
								"}",
								"",
								"function isFaceIDAvailableOnIPhone() {",
								"    return (",
								"        sap.ui.Device.os.ios &&",
								"        sap.ui.Device.os.version >= 11 &&",
								"        device && device.model && device.model.indexOf('iPhone10') > 0",
								"    );",
								"}",
								"",
								"function loginUserWithInfo(userInfo) {",
								"    AppCache_inUsername.setValue(userInfo.username);",
								"    AppCache_inPassword.setValue(userInfo.password);",
								"    AppCache_loginTypes.setSelectedKey(userInfo.loginid);",
								"    AppCache_butLogon.firePress();",
								"}",
								"",
								"function setBiometricAuthToFalse() {",
								"    AppCache.biometricAuthentication = false;",
								"}",
								"",
								"function setKeypadBtnIcon(name) {",
								"    butNumpadLogin.setIcon(`sap-icon://${name}`);",
								"}",
								"",
								"function setKeypadBtn(iconName, enabled) {",
								"    setKeypadBtnIcon(iconName);",
								"    butNumpadLogin.setEnabled(enabled);",
								"}",
								"",
								"function setKeypadValueAndAttemptLogin(value) {",
								"    NumPad.numValue = value;",
								"    NumPad.Logon();",
								"}",
								"",
								"function isErrorFingerprintCancelled(err) {",
								"    return err === FingerprintAuth.ERRORS.FINGERPRINT_CANCELLED;",
								"}",
								"",
								"sap.n.Fingerprint = {",
								"    android: {",
								"        onSupported: function (res) {",
								"            // Check hardware, enrollment and AppCacheUsers",
								"            if (res.isAvailable && res.hasEnrolledFingerprints) {",
								"                if (AppCache.userInfo.biometric) {",
								"                    setKeypadBtn('mri-scan', true);",
								"",
								"                    // Get user language",
								"                    const pluginLanguage = sap.n.Fingerprint.android.getLanguage(AppCache.userInfo.language);",
								"",
								"                    // Biometric authentication config",
								"                    const decryptConfig = {",
								"                        clientId: AppCache.AppID,",
								"                        username: AppCache.userInfo.username,",
								"                        token: AppCache.userInfo.token,",
								"                        disableBackup: true,",
								"                        maxAttempts: 5,",
								"                        locale: pluginLanguage,",
								"                        userAuthRequired: true,",
								"                        dialogMessage: AppCache_Fingerprint.getText()",
								"                    };",
								"                    FingerprintAuth.decrypt(decryptConfig, sap.n.Fingerprint.android.onSuccess, sap.n.Fingerprint.android.onError);",
								"                }",
								"            }",
								"        },",
								"",
								"        notSupported: function (_err) {",
								"            setKeypadBtnIcon('accept');",
								"            setBiometricAuthToFalse();",
								"        },",
								"",
								"        onSuccess: function (res) {",
								"            if ((res.withFingerprint || res.withPassword) && res.password) {",
								"                setKeypadValueAndAttemptLogin(res.password);",
								"            } else { }",
								"        },",
								"",
								"        onError: function (err) {",
								"            if (isErrorFingerprintCancelled(err)) { } else { }",
								"        },",
								"",
								"        getLanguage: function (lang) {",
								"            const m = {",
								"                'NO': 'no',",
								"                'FR': 'fr',",
								"                'ES': 'es',",
								"                'PT': 'pt',",
								"                'DE': 'de',",
								"                'IT': 'it',",
								"                'EN': 'en_US',",
								"                'ZH': 'zh',",
								"            };",
								"",
								"            if (m[lang] === undefined) {",
								"                return 'en_US';",
								"            }",
								"",
								"            return m[lang];",
								"        }",
								"    },",
								"",
								"    ios: {",
								"        checkSupport: function () {",
								"            if (AppCache.userInfo.biometric) {",
								"                setKeypadBtnIcon('mri-scan');",
								"                butNumpadLogin.setEnabled(true);",
								"",
								"                // Authenticate using iOS SAMKeychain library",
								"                let dialogText = AppCache_Fingerprint.getText();",
								"                if (isFaceIDAvailableOnIPhone()) {",
								"                    dialogText = AppCache_tEnableFaceId.getText();",
								"                }",
								"",
								"                CID.checkAuth(dialogText, function (res) {",
								"                    if (res == 'success') {",
								"                        cordova.plugins.SecureKeyStore.get(setKeypadValueAndAttemptLogin, function (err) {",
								"                            console.log(err);",
								"                        }, AppCache.userInfo.username);",
								"                    } else {",
								"                        console.log(res);",
								"                    }",
								"                }, function (err) {",
								"                    console.log(err);",
								"                });",
								"            } else {",
								"                setKeypadBtn('accept', false);",
								"            }",
								"        }",
								"    },",
								"",
								"    saveBasicAuth: function () {",
								"        if (isBasicAuthSetupInvalid()) {",
								"            return;",
								"        }",
								"",
								"        // Save userinfo",
								"        cordova.plugins.SecureKeyStore.set(function (_res) { }, function (_err) {",
								"            setBiometricAuthToFalse();",
								"        }, AppCache.deviceID, AppCache.Auth);",
								"    },",
								"",
								"    getBasicAuth: function () {",
								"        if (isBasicAuthSetupInvalid()) {",
								"            return;",
								"        }",
								"",
								"        let dialogText = AppCache_Fingerprint.getText();",
								"        if (isFaceIDAvailableOnIPhone()) {",
								"            dialogText = AppCache_tEnableFaceId.getText();",
								"        }",
								"",
								"        // Any stored userinfo ? ",
								"        cordova.plugins.SecureKeyStore.get(function (res) {",
								"            let userInfo;",
								"            try {",
								"                userInfo = JSON.parse(Base64.decode(res));",
								"            } catch (e) { }",
								"",
								"            if (!userInfo) return;",
								"",
								"            if (sap.ui.Device.os.android && window.FingerprintAuth) {",
								"                try {",
								"                    FingerprintAuth.isAvailable(function (res) {",
								"                        if (res.isAvailable && res.hasEnrolledFingerprints) {",
								"                            // Biometric authentication config",
								"                            const encryptConfig = {",
								"                                clientId: AppCache.AppID,",
								"                                username: AppCache.deviceID,",
								"                                password: AppCache.deviceID,",
								"                                disableBackup: true,",
								"                                maxAttempts: 5,",
								"                                locale: 'en_US',",
								"                                userAuthRequired: true,",
								"                            };",
								"",
								"                            // Encrypt",
								"                            FingerprintAuth.encrypt(encryptConfig, function (result) {",
								"                                // Encryption success",
								"                                if (result.withFingerprint || result.withBackup) loginUserWithInfo(userInfo);",
								"                                else setBiometricAuthToFalse();",
								"                            }, function (err) {",
								"                                if (!isErrorFingerprintCancelled(err)) setBiometricAuthToFalse();",
								"                            });",
								"                        } else {",
								"                            setBiometricAuthToFalse();",
								"                        }",
								"                    }, function (_err) {",
								"                        setBiometricAuthToFalse();",
								"                    });",
								"                } catch (err) {",
								"                    setBiometricAuthToFalse();",
								"                }",
								"            } else if (sap.ui.Device.os.ios && typeof CID !== 'undefined') {",
								"                CID.checkAuth(dialogText, function (res) {",
								"                    if (res === 'success') loginUserWithInfo(userInfo);",
								"                    else console.log(res);",
								"                }, function (err) {",
								"                    console.log('CID.checkAuth', err);",
								"                    setBiometricAuthToFalse();",
								"                });",
								"            } else {",
								"                setBiometricAuthToFalse();",
								"            }",
								"",
								"        }, function (_err) { }, AppCache.deviceID);",
								"    }",
								"};"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "973204c2-36cc-46ee-bb04-e729f30056af",
							"fieldName": "sap.n.HashNavigation",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"sap.n.HashNavigation = {",
								"    lateNav: null,",
								"",
								"    _handler: function () {",
								"        if (location.hash === '#') location.hash === '';",
								"",
								"        // Any content ?",
								"        if (location.hash === '') return;",
								"",
								"        // Sections ",
								"        if (isSection(location.hash)) return;",
								"",
								"        // AppCache Home",
								"        if (location.hash === '#Home') {",
								"            AppCache._Home();",
								"            return;",
								"        }",
								"",
								"        // AppCache Back",
								"        if (location.hash === '#Back') {",
								"            AppCache._Back();",
								"            return;",
								"        }",
								"",
								"        // Parse Hash",
								"        let parts = location.hash.substring(1).split('&');",
								"",
								"        // Top Menu Navigation",
								"        if (parts[0].indexOf('neptopmenu') > -1) {",
								"            let dataCat = ModelData.FindFirst(AppCacheCategory, 'id', parts[1]);",
								"            if (dataCat) sap.n.Launchpad.BuildTiles(dataCat);",
								"            return;",
								"        }",
								"",
								"        // Enhancement",
								"        if (sap.n.Enhancement.HashNavigation) {",
								"            try {",
								"                let preventDefault = sap.n.Enhancement.HashNavigation(location.hash);",
								"                if (preventDefault) return;",
								"            } catch (e) {",
								"                appCacheError('Enhancement HashNavigation ' + e);",
								"            }",
								"        }",
								"",
								"        // Object",
								"        if (parts[0].indexOf('-') > -1) {",
								"            sap.n.HashNavigation.object = parts[0].split('-')[0];",
								"            sap.n.HashNavigation.action = parts[0].split('-')[1];",
								"        }",
								"",
								"        // Data",
								"        if (typeof parts[1] !== 'undefined') {",
								"            sap.n.HashNavigation.data = decodeURIComponent(parts[1]);",
								"        } else {",
								"            sap.n.HashNavigation.data = '';",
								"        }",
								"",
								"        // Tile",
								"        if (typeof sap.n.HashNavigation.object !== 'undefined' && typeof sap.n.HashNavigation.action !== 'undefined') {",
								"            if (typeof modelAppCacheTiles === 'undefined') {",
								"                sap.n.HashNavigation.initialLoad(sap.n.HashNavigation.guid);",
								"                return;",
								"            }",
								"",
								"            let tileData = sap.n.HashNavigation.findTile();",
								"            if (tileData.id) {",
								"                let dataCat = sap.n.HashNavigation.findCategory(tileData.id);",
								"                if (sap.n.Launchpad.currentTile && sap.n.Launchpad.currentTile.id === tileData.id) {",
								"                    if (!sap.n.Apps[tileData.id]) {",
								"                        sap.n.Launchpad._HandleTilePress(tileData, dataCat);",
								"                        return;",
								"                    }",
								"",
								"                    if (sap.n.Apps[tileData.id].onNavigation) {",
								"                        sap.n.Apps[tileData.id].onNavigation.forEach(function (data) {",
								"                            if (sap.n.HashNavigation.data) {",
								"                                sap.n.HashNavigation.data = JSON.parse(sap.n.HashNavigation.data);",
								"                            }",
								"                            data(sap.n.HashNavigation.data);",
								"                            sap.n.HashNavigation.data = '';",
								"                        });",
								"                    } else {",
								"                        sap.n.Launchpad._HandleTilePress(tileData, dataCat);",
								"                    }",
								"                } else {",
								"                    sap.n.Launchpad._HandleTilePress(tileData, dataCat);",
								"                }",
								"            } else {",
								"                sap.n.HashNavigation.lateNav = location.hash;",
								"                location.hash = '';",
								"            }",
								"",
								"        } else {",
								"            location.hash = '';",
								"            sap.n.Launchpad.SelectHomeMenu();",
								"        }",
								"    },",
								"",
								"    findTile: function () {",
								"        return ModelData.FindFirst(AppCacheTiles, ['navObject', 'navAction'], [sap.n.HashNavigation.object, sap.n.HashNavigation.action]) || {};",
								"    },",
								"",
								"    findCategory: function (tileId) {",
								"        let dataCat = {};",
								"",
								"        // TileGroups",
								"        modelAppCacheCategory.oData.forEach(function (category) {",
								"            let tileFound = ModelData.FindFirst(category.tiles, 'id', tileId)",
								"            if (tileFound) dataCat = category;",
								"        });",
								"",
								"        // TileGroupsChild",
								"        modelAppCacheCategoryChild.oData.forEach(function (category) {",
								"            let tileFound = ModelData.FindFirst(category.tiles, 'id', tileId)",
								"            if (tileFound) dataCat = category;",
								"        });",
								"",
								"        return dataCat;",
								"    },",
								"",
								"    toExternal: function (data) {",
								"        if (data.params) {",
								"            if (data.params === '{}') {",
								"                location.hash = data.target.semanticObject + '-' + data.target.action;",
								"            } else {",
								"                location.hash = data.target.semanticObject + '-' + data.target.action + '&' + encodeURIComponent(JSON.stringify(data.params));",
								"            }",
								"        } else {",
								"            location.hash = data.target.semanticObject + '-' + data.target.action",
								"        }",
								"    },",
								"}",
								"",
								"// Register Event",
								"window.onhashchange = function () {",
								"    sap.n.HashNavigation._handler();",
								"}"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "12a6ce8a-4a08-44cf-9e02-3b810bc0c702",
							"fieldName": "sap.n.Launchpad",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"sap.n.Launchpad = {\r",
								"    initSideBar: false,\r",
								"    Timers: [],\r",
								"    menuArray: [],\r",
								"    menuIndex: 0,\r",
								"    useMenuList: false,\r",
								"    setShellBackground: true,\r",
								"    backgroundShade: null,\r",
								"    currLayout: '',\r",
								"    currLayoutContent: '',\r",
								"    searchBackgroundType: 'cards',\r",
								"    searchBackgroundColor: 'ColorSet6',\r",
								"    searchBackgroundShade: 'ShadeA',\r",
								"    searchEnableShadeCalc: true,\r",
								"    usedBackgroundType: 'cards',\r",
								"    usedBackgroundColor: 'ColorSet5',\r",
								"    usedBackgroundShade: 'ShadeA',\r",
								"    usedEnableShadeCalc: false,\r",
								"    favInProcess: false,\r",
								"    hideBackIcon: false,\r",
								"    enableFav: false,\r",
								"    openAppExpanded: false,\r",
								"    openAppsSideMenuSize: '68px',\r",
								"    verticalMenuLimit: 1024,\r",
								"    openAppPops: {},\r",
								"\r",
								"    sidepanelWidth: {\r",
								"        xsmall: '300px',\r",
								"        small: '400px',\r",
								"        medium: '500px',\r",
								"        large: '600px',\r",
								"        xlarge: '700px',\r",
								"        xxlarge: '800px',\r",
								"        xxxlarge: '900px',\r",
								"        widescreen: '1024px',\r",
								"        xwidescreen: '1280px',\r",
								"        xxwidescreen: '1980px',\r",
								"    },\r",
								"\r",
								"    cardsAvailable: false,\r",
								"    tileContent: {},\r",
								"    tileGroupsInPage: {},\r",
								"\r",
								"    device: {\r",
								"        DESKTOP: 'D',\r",
								"        TABLET: 'T',\r",
								"        PHONE: 'P'\r",
								"    },\r",
								"\r",
								"    UpdateTileInfo: function (data) {\r",
								"        // P8 Compability\r",
								"    },\r",
								"\r",
								"    sidepanelOpen: function (options) {\r",
								"        if (!options) options = {};\r",
								"        if (launchpadContentSideApp.getWidth() === '0px') {\r",
								"            let sidepanelWidth = sap.n.Launchpad.sidepanelWidth[modelAppCacheDiaSettings.oData.sidepanelWidth || 'large'];\r",
								"            if (options.width) sidepanelWidth = options.width;\r",
								"            applyCSSToElmId('launchpadContentSideApp', { display: 'flex' });\r",
								"            launchpadContentSideApp.setWidth(sidepanelWidth);\r",
								"            sap.n.Launchpad.setLaunchpadContentWidth();\r",
								"            AppCacheUserActionSidepanel.setIcon('sap-icon://navigation-right-arrow');\r",
								"        }\r",
								"    },\r",
								"\r",
								"    sidepanelClose: function () {\r",
								"        if (launchpadContentSideApp.getWidth() !== '0px') {\r",
								"            applyCSSToElmId('launchpadContentSideApp', { display: 'none' });\r",
								"            launchpadContentSideApp.setWidth('0px');\r",
								"            sap.n.Launchpad.setLaunchpadContentWidth();\r",
								"            AppCacheUserActionSidepanel.setIcon('sap-icon://navigation-left-arrow');\r",
								"        }\r",
								"    },\r",
								"\r",
								"    settingsMenuOpen: function () {\r",
								"        applyCSSToElmId('launchpadSettings', { display: 'flex' });\r",
								"        applyCSSToElmId('launchpadSettingsContainer', { width: '100%' });\r",
								"        applyCSSToElmId('launchpadSettingsClickArea', { display: 'block' });\r",
								"        setTimeout(function () {\r",
								"            addClass(launchpadSettings.getDomRef(), ['nepLaunchpadMenuSettingsOpen']);\r",
								"            launchpadSettingsBtn.focus();\r",
								"        }, 10);\r",
								"    },\r",
								"\r",
								"    settingsMenuClose: function () {\r",
								"        removeClass(launchpadSettings.getDomRef(), ['nepLaunchpadMenuSettingsOpen']);\r",
								"        applyCSSToElmId('launchpadSettingsContainer', { width: '0' });\r",
								"        applyCSSToElmId('launchpadSettingsClickArea', { display: 'none' });\r",
								"        applyCSSToElmId('launchpadSettings', { display: 'none' });\r",
								"    },\r",
								"\r",
								"    setOpenAppsExpanded: function () {\r",
								"        openApps.setVisible(sap.n.Launchpad.openAppExpanded);\r",
								"        openAppMaster.setIcon(`sap-icon://fa-solid/${sap.n.Launchpad.openAppExpanded ? 'caret-down' : 'caret-right'}`);\r",
								"    },\r",
								"\r",
								"    setMenuActiveState: function () {\r",
								"        ContentMenu.getItems().forEach(function (menu) {\r",
								"            if (menu.getIcon()) {\r",
								"                menu.addStyleClass('nepTreeItemAction');\r",
								"            } else {\r",
								"                menu.removeStyleClass('nepTreeItemAction');\r",
								"            }\r",
								"        });\r",
								"    },\r",
								"\r",
								"    handleTreeNavigation: function (selectedItem) {\r",
								"        const context = selectedItem.getBindingContext();\r",
								"        const data = context.getObject();\r",
								"\r",
								"        let dataTile, dataCat, pageCatId;\r",
								"\r",
								"        switch (data.type) {\r",
								"            case 'tile':\r",
								"                dataTile = ModelData.FindFirst(AppCacheTiles, 'id', data.id);\r",
								"                dataCat = ModelData.FindFirst(AppCacheCategory, 'id', data.parent);\r",
								"                if (!dataCat) dataCat = ModelData.FindFirst(AppCacheCategoryChild, 'id', data.parent);\r",
								"                sap.n.Launchpad.HandleTilePress(dataTile, dataCat);\r",
								"                break;\r",
								"\r",
								"            case 'cat':\r",
								"                dataCat = ModelData.FindFirst(AppCacheCategory, 'id', data.id);\r",
								"                if (!dataCat) dataCat = ModelData.FindFirst(AppCacheCategoryChild, 'id', data.id);\r",
								"                sap.n.Launchpad.handleAppTitle(AppCache.launchpadTitle);\r",
								"                location.hash = 'neptopmenu&' + dataCat.id;\r",
								"                sap.n.currentView = '';\r",
								"                break;\r",
								"\r",
								"            case 'subcat':\r",
								"                sap.n.Launchpad.handleAppTitle();\r",
								"                dataCat = ModelData.FindFirst(AppCacheCategory, 'id', data.parent);\r",
								"                if (!dataCat) dataCat = ModelData.FindFirst(AppCacheCategoryChild, 'id', data.parent);\r",
								"                sap.n.Launchpad.handleAppTitle(dataCat.title);\r",
								"\r",
								"                sap.n.currentView = '';\r",
								"\r",
								"                if (sap.n.Launchpad.currentTileGroupPage !== `page${dataCat.id}`) {\r",
								"                    sap.n.Launchpad.BuildTiles(dataCat, data.id);\r",
								"                } else {\r",
								"                    if (sap.n.Launchpad.currentTile) AppCache.Back();\r",
								"                    sap.n.Launchpad.scrollToTileGroup(data.id);\r",
								"                }\r",
								"                break;\r",
								"        }\r",
								"\r",
								"        sap.n.Launchpad.overflowMenuClose();\r",
								"    },\r",
								"\r",
								"    overflowMenuClose: function () {\r",
								"        launchpadOverflow.removeStyleClass('nepLaunchpadMenuOverflowOpen');\r",
								"        applyCSSToElmId('launchpadOverflowContainer', { width: '0' });\r",
								"        applyCSSToElmId('launchpadOverflowClickArea', { display: 'none' });\r",
								"    },\r",
								"\r",
								"    overflowMenuOpen: function () {\r",
								"        const size = (launchpadContentMenu.getWidth() === '0px') ? '300px' : '0px';\r",
								"        launchpadContentMenu.addItem(pageVerticalMenu);\r",
								"        launchpadContentMenu.setWidth(size);\r",
								"        openAppMaster.setVisible((openApps.getItems().length > 0));\r",
								"\r",
								"        setTimeout(function () {\r",
								"            sap.n.Launchpad.setLaunchpadContentWidth();\r",
								"            sap.n.Layout.setHeaderPadding();\r",
								"        }, 300);\r",
								"\r",
								"    },\r",
								"\r",
								"    setLaunchpadContentWidth: function () {\r",
								"        const menuWidth = getWidth(elById('launchpadContentMenu'));\r",
								"        const navWidth = getWidth(elById('launchpadContentNavigator'));\r",
								"\r",
								"        const left = (menuWidth + navWidth) + 'px';\r",
								"        const right = launchpadContentSideApp.getWidth();\r",
								"\r",
								"        const dir = querySelector('html').getAttribute('dir').toLowerCase();\r",
								"        if (dir === 'rtl') {\r",
								"            let l = left;\r",
								"            left = right;\r",
								"            right = l;\r",
								"        }\r",
								"\r",
								"        applyCSSToElmId('launchpadContentMain', {\r",
								"            'left': left,\r",
								"            'right': right,\r",
								"            'width': 'auto'\r",
								"        });\r",
								"    },\r",
								"\r",
								"    setShellWidth: function () {\r",
								"        if (!sap.n.Launchpad.currLayout) return;\r",
								"\r",
								"        // Launchpad Width\r",
								"        ['nepShellFull', 'nepShellXXXLarge', 'nepShellXXLarge', 'nepShellXLarge', 'nepShellLarge', 'nepShellMedium', 'nepShellSmall', 'nepShellXSmall'].forEach(function (c) {\r",
								"            AppCacheShellUI.removeStyleClass(c);\r",
								"        });\r",
								"\r",
								"        let shellContentWidth = sap.n.Launchpad.currLayoutContent.shellContentWidth || 'Large';\r",
								"        AppCacheShellUI.addStyleClass('nepShell' + shellContentWidth);\r",
								"\r",
								"        if (shellContentWidth === 'Full') {\r",
								"            AppCacheShellUI.setAppWidthLimited(false);\r",
								"        } else {\r",
								"            AppCacheShellUI.setAppWidthLimited(true);\r",
								"        }\r",
								"\r",
								"        // Header Width\r",
								"        ['nepHeaderFull', 'nepHeaderXXXLarge', 'nepHeaderXXLarge', 'nepHeaderXLarge', 'nepHeaderLarge', 'nepHeaderMedium', 'nepHeaderSmall', 'nepHeaderXSmall'].forEach(function (c) {\r",
								"            toolTopMenu.removeStyleClass(c);\r",
								"        });\r",
								"\r",
								"        let headerContentWidth = sap.n.Launchpad.currLayoutContent.headerContentWidth || 'Full';\r",
								"        toolTopMenu.addStyleClass('nepHeader' + headerContentWidth);\r",
								"    },\r",
								"\r",
								"    BuildCardContent: function (config) {\r",
								"        let tiles = [];\r",
								"        let rowId = `${nepPrefix()}Cat${config.dataCat.id}`;\r",
								"\r",
								"        // Favorites \r",
								"        if (config.isFav) {\r",
								"            tiles = modelAppCacheTilesFav.oData;\r",
								"            rowId = `${nepPrefix()}CatFav${config.dataCat.id}`;\r",
								"        } else {\r",
								"            tiles = config.dataCat.tiles;\r",
								"        }\r",
								"\r",
								"        // Card Group\r",
								"        if (config.parentCat && config.parentCat.cardPerRow && !config.dataCat.cardPerRow) config.dataCat.cardPerRow = config.parentCat.cardPerRow;\r",
								"        let cardPerRow = config.dataCat.cardPerRow || sap.n.Layout.row.MORE;\r",
								"        config.cardParent.addStyleClass('nepBlockLayoutTileRow ' + rowId + ' nepGrid' + cardPerRow);\r",
								"\r",
								"        sap.n.Launchpad.backgroundShade = '';\r",
								"\r",
								"        tiles.forEach(function (tile) {\r",
								"            let dataTile = ModelData.FindFirst(AppCacheTiles, 'id', tile.id);\r",
								"            if (!dataTile) return;\r",
								"            if (dataTile.disabled) return;\r",
								"\r",
								"            // Fav settings override\r",
								"            if (config.isFav) {\r",
								"                dataTile = JSON.parse(JSON.stringify(dataTile));\r",
								"                if (tile.frameType) dataTile.frameType = tile.frameType;\r",
								"                if (tile.forceRow) dataTile.forceRow = tile.forceRow;\r",
								"            }\r",
								"\r",
								"            if (sap.n.Launchpad.isDesktop() && dataTile.hideTileDesktop) return;\r",
								"            if (sap.n.Launchpad.isTablet() && dataTile.hideTileTablet) return;\r",
								"            if (sap.n.Launchpad.isPhone() && dataTile.hideTileMobile) return;\r",
								"            if (dataTile.type === 'storeitem' && isCordova()) return;\r",
								"\r",
								"            // Tile Content\r",
								"            config.cardParent.addItem(sap.n.Card.buildCardDefault({\r",
								"                pageID: config.pageID,\r",
								"                dataTile: dataTile,\r",
								"                dataCat: config.dataCat,\r",
								"                isFav: config.isFav\r",
								"            }));\r",
								"        });\r",
								"    },\r",
								"\r",
								"    setInitialGridWidth: function (grid) {\r",
								"        let navWidth = getWidth('#AppCacheNav');\r",
								"\r",
								"        let c = '';\r",
								"        if (navWidth < 380) c = 'nepGridXSmall';\r",
								"        else if (navWidth < 680) c = 'nepGridSmall';\r",
								"        else if (navWidth < 980) c = 'nepGridMedium';\r",
								"        else if (navWidth < 1280) c = 'nepGridLarge';\r",
								"        else if (navWidth < 1580) c = 'nepGridXLarge';\r",
								"        else if (navWidth < 1880) c = 'nepGridXXLarge';\r",
								"        else if (navWidth < 2360) c = 'nepGridXXXLarge';\r",
								"\r",
								"        grid.addStyleClass(c);\r",
								"    },\r",
								"\r",
								"    applyLanguages: function (languages) {\r",
								"        inAppCacheFormSettingsLang.setVisible(true);\r",
								"        inAppCacheFormSettingsLang.destroyItems();\r",
								"\r",
								"        inAppCacheFormSettingsLang.addItem(new sap.ui.core.ListItem({ key: '', text: '' }));\r",
								"        masterLanguages.forEach(function ({ ISOCODE: key, NAME: text }) {\r",
								"            if (languages.includes(key)) {\r",
								"                inAppCacheFormSettingsLang.addItem(new sap.ui.core.ListItem({ key, text }));\r",
								"            }\r",
								"        });\r",
								"    },\r",
								"\r",
								"    applyLayout: function (layout) {\r",
								"        if (!layout) return;\r",
								"        if (sap.n.Launchpad.currLayout === layout.id) return;\r",
								"\r",
								"        ModelData.Delete(AppCache.layout, 'active', false);\r",
								"\r",
								"        if (AppCache.layout.length > 1) {\r",
								"            inAppCacheFormSettingsTHEME.setVisible(true);\r",
								"            inAppCacheFormSettingsTHEME.destroyItems();\r",
								"            AppCache.layout.forEach(function (data) {\r",
								"                inAppCacheFormSettingsTHEME.addItem(new sap.ui.core.Item(nepId(), {\r",
								"                    key: data.id,\r",
								"                    text: data.name\r",
								"                }));\r",
								"            });\r",
								"        }\r",
								"\r",
								"        if (layout.style) {\r",
								"            const cssText = layout.style.replace('<style>', '').replace('</style>', '');\r",
								"            const s = createStyle(cssText);\r",
								"            appendStyle(\r",
								"                elById('NeptuneStyleDiv'),\r",
								"                s\r",
								"            );\r",
								"        }\r",
								"\r",
								"        [\r",
								"            'searchBackgroundType', 'searchBackgroundColor', 'searchBackgroundShade', 'searchEnableShadeCalc',\r",
								"            'usedBackgroundType', 'usedBackgroundColor', 'usedBackgroundShade', 'usedEnableShadeCalc',\r",
								"        ].forEach(function (k) {\r",
								"            if (layout[k]) sap.n.Launchpad[k] = layout[k];\r",
								"        });\r",
								"\r",
								"        sap.n.Launchpad.hideBackIcon = !!layout.topBackIconHide;\r",
								"\r",
								"        if (typeof StatusBar !== 'undefined') {\r",
								"            switch (layout.mobileStatusbarText) {\r",
								"                case 'styleLightContent':\r",
								"                    StatusBar.styleLightContent();\r",
								"                    break;\r",
								"\r",
								"                case 'styleBlackTranslucent':\r",
								"                    StatusBar.styleBlackTranslucent();\r",
								"                    break;\r",
								"\r",
								"                case 'styleBlackOpaque':\r",
								"                    StatusBar.styleBlackOpaque();\r",
								"                    break;\r",
								"\r",
								"                default:\r",
								"                    StatusBar.styleDefault();\r",
								"                    break;\r",
								"            }\r",
								"\r",
								"            const c = layout.mobileStatusbarColor;\r",
								"            if (c) {\r",
								"                if (c.includes('#')) StatusBar.backgroundColorByHexString(c);\r",
								"                else StatusBar.backgroundColorByName(c);\r",
								"            } else {\r",
								"                StatusBar.backgroundColorByHexString('#000000');\r",
								"                StatusBar.styleDefault();\r",
								"            }\r",
								"        }\r",
								"\r",
								"        sap.n.Launchpad.currLayout = layout.id;\r",
								"        sap.n.Launchpad.currLayoutContent = layout;\r",
								"        sap.n.Launchpad.setShellWidth();\r",
								"        sap.n.Layout.setHeaderPadding();\r",
								"    },\r",
								"\r",
								"    applyThemeMode: function () {\r",
								"        let theme = sap.ui.getCore().getConfiguration().getTheme();\r",
								"        const el = document.querySelector('html');\r",
								"        removeClass(el, ['nepLayout', 'nepThemeLight', 'nepThemeDark']);\r",
								"\r",
								"        if (theme === 'sap_fiori_3_dark' || theme === 'sap_horizon_dark' || theme === 'neptune_horizon_dark') addClass(el, ['nepLayout', 'nepThemeDark']);\r",
								"        else addClass(el, ['nepLayout', 'nepThemeLight']);\r",
								"    },\r",
								"\r",
								"    applyUserTheme: function () {\r",
								"        if (modelAppCacheDiaSettings.oData.userTheme) {\r",
								"            AppCache.layout.forEach(function (data) {\r",
								"                if (data.id === modelAppCacheDiaSettings.oData.userTheme) {\r",
								"                    let layout = JSON.parse(JSON.stringify(data));\r",
								"\r",
								"                    // UI5 Theme \r",
								"                    if (layout.ui5Theme) {\r",
								"                        if (layout.ui5Theme.indexOf('sap_') === -1) sap.ui.getCore().setThemeRoot(layout.ui5Theme, '/public/ui5theme/' + layout.ui5Theme);\r",
								"                        sap.ui.getCore().applyTheme(layout.ui5Theme);\r",
								"                    } else {\r",
								"                        sap.ui.getCore().applyTheme(AppCache.defaultTheme);\r",
								"                    }\r",
								"\r",
								"                    if (modelAppCacheDiaSettings.oData.userBackImage) {\r",
								"                        layout.style = layout.style.replace('</style>', `.nepShell {\r",
								"                                background-image: url('${modelAppCacheDiaSettings.oData.userBackImage}') !important;\r",
								"                                background-repeat:no-repeat;\r",
								"                                background-size:cover;\r",
								"                            }\r",
								"                            .nepPage {\r",
								"                                background:transparent;\r",
								"                            }\r",
								"                            </style>\r",
								"                        `);\r",
								"                    }\r",
								"                    sap.n.Launchpad.currLayout = '';\r",
								"                    sap.n.Launchpad.applyLayout(layout);\r",
								"                }\r",
								"            });\r",
								"        }\r",
								"    },\r",
								"\r",
								"    BuildMenu: function () {\r",
								"        // Enable Fav Buttons\r",
								"        let cat = ModelData.FindFirst(AppCacheCategory, 'inclFav', true);\r",
								"        if (cat && cat.inclFav) {\r",
								"            sap.n.Launchpad.enableFav = cat.inclFav;\r",
								"        } else {\r",
								"            cat = ModelData.FindFirst(AppCacheCategoryChild, 'inclFav', true);\r",
								"            if (cat && cat.inclFav) sap.n.Launchpad.enableFav = cat.inclFav;\r",
								"        }\r",
								"\r",
								"        // Add Tile Group/Tile CSS\r",
								"        appendStyle(\r",
								"            elById('NeptuneStyleDivDynamic'),\r",
								"            createStyle(sap.n.Launchpad.buildContentCss())\r",
								"        );\r",
								"\r",
								"        if (AppCache.config.enableTopMenu) sap.n.Launchpad.BuildMenuTop();\r",
								"        sap.n.Launchpad.BuildTreeMenu();\r",
								"        sap.n.Launchpad.BuildTags();\r",
								"        sap.n.Launchpad.SelectHomeMenu();\r",
								"\r",
								"        // Fallback, no startApp or Tiles -> Build empty page \r",
								"        if (!AppCache.StartApp && !AppCache.StartWebApp && !modelAppCacheCategory.oData.length) {\r",
								"\r",
								"            let pageCat = new sap.m.Page(nepId(), {\r",
								"                showHeader: false,\r",
								"                showFooter: false,\r",
								"                backgroundDesign: 'Transparent',\r",
								"            });\r",
								"\r",
								"            pageCat.addStyleClass('nepPage');\r",
								"            AppCacheNav.addPage(pageCat);\r",
								"            AppCacheNav.to(pageCat);\r",
								"\r",
								"        }\r",
								"\r",
								"    },\r",
								"\r",
								"    BuildMenuTop: function () {\r",
								"        AppCacheAppButton.removeAllItems();\r",
								"        modelAppCacheCategory.oData.forEach(function (dataCat) {\r",
								"            if (dataCat.hideFromMenu) return;\r",
								"\r",
								"            let popSubMenu;\r",
								"            let menuItem = new sap.m.Button(`${nepPrefix()}${dataCat.id}`, {\r",
								"                text: sap.n.Launchpad.translateTile('title', dataCat),\r",
								"                type: 'Transparent',\r",
								"                press: function (oEvent) {\r",
								"                    location.hash = `neptopmenu&${dataCat.id}`;\r",
								"                    if (popSubMenu) popSubMenu.close();\r",
								"                }\r",
								"            }).addStyleClass('nepTopMenuBtn');\r",
								"\r",
								"            // Navigation Panel\r",
								"            if (dataCat.tilegroups.length) {\r",
								"                let listSubMenu = new sap.m.List(nepId(), {\r",
								"                    showSeparators: 'None'\r",
								"                });\r",
								"\r",
								"                let menuFn = {\r",
								"                    popOverEntered: false,\r",
								"                    btnEntered: false\r",
								"                };\r",
								"\r",
								"                let buildSubMenu = false;\r",
								"                dataCat.tilegroups.forEach(function (data) {\r",
								"                    let dataCatChild = ModelData.FindFirst(AppCacheCategory, 'id', data.id);\r",
								"                    if (!dataCatChild) dataCatChild = ModelData.FindFirst(AppCacheCategoryChild, 'id', data.id);\r",
								"                    if (!dataCatChild) return;\r",
								"                    if (dataCatChild.hideFromMenu) return;\r",
								"\r",
								"                    const navBtn = new sap.m.StandardListItem(nepId(), {\r",
								"                        title: sap.n.Launchpad.translateTile('title', dataCatChild),\r",
								"                        type: 'Active',\r",
								"                        press: function (e) {\r",
								"                            const pageCatID = `page${dataCat.id}`;\r",
								"\r",
								"                            if (sap.n.Launchpad.currentTileGroupPage === pageCatID) {\r",
								"                                sap.n.Launchpad.scrollToTileGroup(dataCatChild.id);\r",
								"                            } else if (sap.n.Launchpad.currentTileGroupPage !== pageCatID) {\r",
								"                                menuItem.fireEvent('press');\r",
								"                                sap.n.Launchpad.BuildTiles(dataCat, dataCatChild.id);\r",
								"                            } else {\r",
								"                                if (sap.n.Launchpad.currentTile) AppCache.Back();\r",
								"                                sap.n.Launchpad.scrollToTileGroup(dataCatChild.id);\r",
								"                            }\r",
								"\r",
								"                            menuFn.popOverEntered = false;\r",
								"                            menuFn.btnEntered = false;\r",
								"                            if (popSubMenu) popSubMenu.close();\r",
								"\r",
								"                            AppCacheAppButton.getItems().forEach(function (item) {\r",
								"                                if (item.removeStyleClass) item.removeStyleClass('nepTopMenuActive');\r",
								"                            });\r",
								"                            menuItem.addStyleClass('nepTopMenuActive');\r",
								"                        }\r",
								"                    });\r",
								"\r",
								"                    listSubMenu.addItem(navBtn);\r",
								"                    buildSubMenu = true;\r",
								"                });\r",
								"\r",
								"                if (buildSubMenu) {\r",
								"                    popSubMenu = new sap.m.Popover(`${nepPrefix()}SubMenu${ModelData.genID()}`, {\r",
								"                        placement: 'Bottom',\r",
								"                        resizable: false,\r",
								"                        showArrow: false,\r",
								"                        showHeader: false,\r",
								"                        contentWidth: '300px',\r",
								"                        offsetY: 5\r",
								"                    }).addStyleClass('nepSubMenu nepOverflowMenu');\r",
								"\r",
								"                    popSubMenu.attachBrowserEvent('mouseenter', function (e) {\r",
								"                        menuFn.popOverEntered = true;\r",
								"                        menuItem.addStyleClass('nepTopMenuActiveHover');\r",
								"                    });\r",
								"\r",
								"                    popSubMenu.attachBrowserEvent('mouseleave', function (e) {\r",
								"                        menuFn.popOverEntered = false;\r",
								"                        menuItem.removeStyleClass('nepTopMenuActiveHover');\r",
								"\r",
								"                        setTimeout(function () {\r",
								"                            if (!menuFn.btnEntered) popSubMenu.close();\r",
								"                        }, 100);\r",
								"                    });\r",
								"\r",
								"                    // Open SubMenu\r",
								"                    menuItem.attachBrowserEvent('mouseenter', function (e) {\r",
								"                        popSubMenu.openBy(menuItem);\r",
								"                        menuFn.btnEntered = true;\r",
								"                    });\r",
								"\r",
								"                    menuItem.attachBrowserEvent('mouseleave', function (e) {\r",
								"                        menuFn.btnEntered = false;\r",
								"                        setTimeout(function () {\r",
								"                            if (!menuFn.popOverEntered) popSubMenu.close();\r",
								"                        }, 100);\r",
								"                    });\r",
								"\r",
								"                    popSubMenu.addContent(listSubMenu);\r",
								"                }\r",
								"            }\r",
								"\r",
								"            AppCacheAppButton.addItem(menuItem);\r",
								"        });\r",
								"    },\r",
								"\r",
								"    BuildTags: function () {\r",
								"        AppCacheShellSearchTags.destroyItems();\r",
								"\r",
								"        let tags = {};\r",
								"        Array.isArray(modelAppCacheTiles.oData) && modelAppCacheTiles.oData.forEach(function (tile) {\r",
								"            if (!tile.tags) return;\r",
								"            let tileTags = tile.tags.split(',');\r",
								"            tileTags.forEach(function (tag) {\r",
								"                tag = tag.toUpperCase();\r",
								"                if (tags[tag]) return;\r",
								"                tags[tag] = tag\r",
								"            });\r",
								"        });\r",
								"\r",
								"        let tagsArr = [];\r",
								"        Object.entries(tags).forEach(function ([_, elem]) {\r",
								"            tagsArr.push({ tag: elem });\r",
								"        });\r",
								"\r",
								"        toolVerticalMenuTags.setVisible(tagsArr.length > 0);\r",
								"        tagsArr.sort(sort_by('tag'));\r",
								"\r",
								"        tagsArr.forEach(function (tag) {\r",
								"            AppCacheShellSearchTags.addItem(new sap.ui.core.ListItem({\r",
								"                key: tag.tag,\r",
								"                text: tag.tag\r",
								"            }));\r",
								"        });\r",
								"    },\r",
								"\r",
								"    BuildTreeMenu: function () {\r",
								"        let treeData = [];\r",
								"        let _buildMenuTile = function (dataTileID, dataCat, treeData, parent) {\r",
								"            let dataTile = ModelData.FindFirst(AppCacheTiles, 'id', dataTileID.id);\r",
								"\r",
								"            if (sap.n.Launchpad.isDesktop() && dataTile.hideTileDesktop) return;\r",
								"            if (sap.n.Launchpad.isTablet() && dataTile.hideTileTablet) return;\r",
								"            if (sap.n.Launchpad.isPhone() && dataTile.hideTileMobile) return;\r",
								"\r",
								"            let title = sap.n.Launchpad.translateTile('title', dataTile);\r",
								"\r",
								"            if (title && (dataTile.actionApplication || dataTile.actionWebApp || dataTile.actionURL || dataTile.actiongroup || dataTile.actionType === 'F' || dataTile.type === 'storeitem')) {\r",
								"                let icon = dataTile.icon || 'sap-icon://less';\r",
								"                let type = 'tile';\r",
								"\r",
								"                if (dataTile.actiongroup) {\r",
								"                    icon = ''; //'sap-icon://fa-solid/layer-group';\r",
								"                    type = 'subcat';\r",
								"                }\r",
								"\r",
								"                treeData.push({\r",
								"                    id: dataTile.id,\r",
								"                    parent: parent || dataCat.id,\r",
								"                    title: title,\r",
								"                    type: type,\r",
								"                    filter: sap.n.Launchpad.translateTile('title', dataCat),\r",
								"                    tags: dataTile.tags,\r",
								"                    icon: icon\r",
								"                });\r",
								"            }\r",
								"\r",
								"            // Tile with Tile Group\r",
								"            if (dataTile.actiongroup) {\r",
								"                let dataCat = ModelData.FindFirst(AppCacheCategoryChild, 'id', dataTile.actiongroup);\r",
								"                if (!dataCat) return;\r",
								"\r",
								"                // Tiles\r",
								"                Array.isArray(dataCat.tiles) && dataCat.tiles.forEach(function (dataSubTile) {\r",
								"                    _buildMenuTile(dataSubTile, dataCat, treeData, dataTile.id);\r",
								"                });\r",
								"\r",
								"                // Tile Groups\r",
								"                Array.isArray(dataCat.tilegroups) && dataCat.tilegroups.forEach(function (dataCatID) {\r",
								"                    let dataCatChild = ModelData.FindFirst(AppCacheCategory, 'id', dataCatID.id);\r",
								"                    if (!dataCatChild) dataCatChild = ModelData.FindFirst(AppCacheCategoryChild, 'id', dataCatID.id);\r",
								"                    if (!dataCatChild) return;\r",
								"                    if (dataCatChild.hideFromMenu) return;\r",
								"\r",
								"                    treeData.push({\r",
								"                        id: dataCatChild.id,\r",
								"                        parent: dataTile.id,\r",
								"                        title: sap.n.Launchpad.translateTile('title', dataCatChild),\r",
								"                        type: 'childcat',\r",
								"                        icon: '',\r",
								"                        filter: sap.n.Launchpad.translateTile('title', dataCatChild),\r",
								"                    });\r",
								"\r",
								"                    // Favorites \r",
								"                    if (dataCatChild.inclFav) {\r",
								"                        modelAppCacheTilesFav.oData.forEach(function (dataTile) {\r",
								"                            _buildMenuTile(dataTile, dataCatChild, treeData, dataCatID.id);\r",
								"                        });\r",
								"                    }\r",
								"\r",
								"                    // Tiles\r",
								"                    dataCatChild.tiles.forEach(function (dataTile) {\r",
								"                        _buildMenuTile(dataTile, dataCatChild, treeData, dataCatID.id);\r",
								"                    });\r",
								"                });\r",
								"            }\r",
								"        }\r",
								"\r",
								"        modelAppCacheCategory.oData.forEach(function (dataCat) {\r",
								"            if (dataCat.hideFromMenu) return;\r",
								"\r",
								"            treeData.push({\r",
								"                id: dataCat.id,\r",
								"                parent: '',\r",
								"                title: sap.n.Launchpad.translateTile('title', dataCat),\r",
								"                type: 'cat',\r",
								"            });\r",
								"\r",
								"            // Favorites \r",
								"            if (dataCat.inclFav) {\r",
								"                modelAppCacheTilesFav.oData.forEach(function (dataTileID) {\r",
								"                    _buildMenuTile(dataTileID, dataCat, treeData);\r",
								"                });\r",
								"            }\r",
								"\r",
								"            // Tiles\r",
								"            dataCat.tiles.forEach(function (dataTile) {\r",
								"                _buildMenuTile(dataTile, dataCat, treeData);\r",
								"            });\r",
								"\r",
								"            dataCat.tilegroups.forEach(function (dataCatID) {\r",
								"                let dataCatChild = ModelData.FindFirst(AppCacheCategory, 'id', dataCatID.id);\r",
								"                if (!dataCatChild) dataCatChild = ModelData.FindFirst(AppCacheCategoryChild, 'id', dataCatID.id);\r",
								"                if (!dataCatChild) return;\r",
								"                if (dataCatChild.hideFromMenu) return;\r",
								"\r",
								"                treeData.push({\r",
								"                    id: dataCatChild.id,\r",
								"                    parent: dataCat.id,\r",
								"                    title: sap.n.Launchpad.translateTile('title', dataCatChild),\r",
								"                    type: 'subcat',\r",
								"                    icon: '', //'sap-icon://fa-solid/layer-group',\r",
								"                    filter: sap.n.Launchpad.translateTile('title', dataCatChild),\r",
								"                });\r",
								"\r",
								"                // Favorites \r",
								"                if (dataCatChild.inclFav) {\r",
								"                    modelAppCacheTilesFav.oData.forEach(function (dataTile) {\r",
								"                        _buildMenuTile(dataTile, dataCatChild, treeData);\r",
								"                    });\r",
								"                }\r",
								"\r",
								"                // Tiles\r",
								"                dataCatChild.tiles.forEach(function (dataTile) {\r",
								"                    _buildMenuTile(dataTile, dataCatChild, treeData);\r",
								"                });\r",
								"            });\r",
								"        });\r",
								"\r",
								"        modelContentMenu.setData({\r",
								"            'children': _convertFlatToNested(treeData, 'id', 'parent')\r",
								"        });\r",
								"    },\r",
								"\r",
								"    scrollToTileGroup: function (tileGroupId) {\r",
								"        setTimeout(function () {\r",
								"            const elm = querySelector(`#${sectionPrefix()}${tileGroupId}`);\r",
								"            if (elm && elm.scrollIntoView) {\r",
								"                elm.scrollIntoView();\r",
								"            }\r",
								"        }, 500);\r",
								"    },\r",
								"\r",
								"    RebuildTiles: function () {\r",
								"        let currentPage = AppCacheNav.getCurrentPage();\r",
								"        AppCacheNav.getPages().forEach(function (page) {\r",
								"            // Only for Tile Group + Childs \r",
								"            if (page.sId.indexOf('page') > -1) {\r",
								"                // Delete page content, rebuild later when navigatin to it. \r",
								"                page.destroyContent();\r",
								"\r",
								"                // Rebuild current page \r",
								"                if (currentPage.sId === page.sId) {\r",
								"                    let cat = currentPage.sId;\r",
								"                    cat = cat.split('page')[1];\r",
								"\r",
								"                    let dataCat = ModelData.FindFirst(AppCacheCategory, 'id', cat);\r",
								"                    if (!dataCat) dataCat = ModelData.FindFirst(AppCacheCategoryChild, 'id', cat);\r",
								"\r",
								"                    if (!dataCat) AppCache.Home();\r",
								"                    else sap.n.Launchpad.BuildTiles(dataCat, dataCat.id);\r",
								"                }\r",
								"            }\r",
								"        });\r",
								"    },\r",
								"\r",
								"    SelectHomeMenu: function () {\r",
								"        // Start with hash \r",
								"        if (location.hash) {\r",
								"            sap.n.HashNavigation._handler();\r",
								"        } else {\r",
								"            let dataCat = modelAppCacheCategory.oData[0];\r",
								"            if (dataCat) location.hash = 'neptopmenu&' + dataCat.id;\r",
								"        }\r",
								"    },\r",
								"\r",
								"    SetHeader: function () {\r",
								"        if (sap.n.Launchpad.currentTile) {\r",
								"            sap.n.Launchpad.setActiveIcon(sap.n.Launchpad.currentTile.id);\r",
								"        } else {\r",
								"            sap.n.Launchpad.setActiveIcon();\r",
								"        }\r",
								"    },\r",
								"\r",
								"    MarkTopMenu: function (menuID) {\r",
								"        AppCacheAppButton.getItems().forEach(function (item) {\r",
								"            if (item.removeStyleClass) item.removeStyleClass('nepTopMenuActive');\r",
								"            if (item.sId === `${nepPrefix()}${menuID}`) item.addStyleClass('nepTopMenuActive');\r",
								"        });\r",
								"    },\r",
								"\r",
								"    BuildTiles: function (dataCat, subCat) {\r",
								"        if (!modelAppCacheTiles.oData.length) return;\r",
								"\r",
								"        let pageCatID = `page${dataCat.id}`;\r",
								"        let isFav = dataCat.inclFav;\r",
								"\r",
								"        sap.n.Launchpad.currentTileGroupPage = pageCatID;\r",
								"        sap.n.currentView = '';\r",
								"\r",
								"        // Mark Menu \r",
								"        sap.n.Launchpad.MarkTopMenu(dataCat.id);\r",
								"\r",
								"        // UI Handling\r",
								"        sap.n.Launchpad.setShellWidth();\r",
								"        sap.n.Launchpad.setHideHeader(false);\r",
								"\r",
								"        // Back Button         \r",
								"        if (!subCat && !sap.n.Launchpad.hideBackIcon) AppCacheShellBack.setVisible(false);\r",
								"\r",
								"        // Create Page Per Tile Group \r",
								"        let pageCat = sap.ui.getCore().byId(pageCatID);\r",
								"\r",
								"        // Pages with Fav, always create \r",
								"        dataCat.tilegroups.forEach(function (data) {\r",
								"            let dataCatChild = ModelData.FindFirst(AppCacheCategory, 'id', data.id);\r",
								"            if (!dataCatChild) dataCatChild = ModelData.FindFirst(AppCacheCategoryChild, 'id', data.id);\r",
								"            if (dataCatChild && dataCatChild.inclFav) isFav = true;\r",
								"        });\r",
								"\r",
								"        if (pageCat && isFav) {\r",
								"            AppCacheNav.removePage(pageCat);\r",
								"            pageCat.destroy();\r",
								"            pageCat = null;\r",
								"        }\r",
								"\r",
								"        if (!pageCat) {\r",
								"            pageCat = new sap.m.Page(pageCatID, {\r",
								"                showHeader: false,\r",
								"                showFooter: false,\r",
								"                backgroundDesign: 'Transparent',\r",
								"            });\r",
								"            pageCat.addStyleClass('nepPage');\r",
								"            AppCacheNav.addPage(pageCat);\r",
								"        }\r",
								"\r",
								"        if (!pageCat.getContent().length) {\r",
								"\r",
								"            let versionParts = sap.ui.version.split(\".\");\r",
								"\r",
								"            // BlockLayout vs Cards\r",
								"            if (versionParts[0] >= 1 && versionParts[1] >= 64) {\r",
								"\r",
								"                sap.n.Launchpad.cardsAvailable = true;\r",
								"\r",
								"                //Grid containerOpenApp\r",
								"                let gridContainer = new sap.m.FlexBox(`${sectionPrefix()}${dataCat.id}`, {\r",
								"                    direction: 'Column',\r",
								"                    alignItems: 'Start'\r",
								"                }).addStyleClass('nepGridContainer nepCridCards');\r",
								"\r",
								"                // Header\r",
								"                let AppCacheObjectHeader = new sap.m.FlexBox(nepId()).addStyleClass('nepGrid');\r",
								"\r",
								"                // Content\r",
								"                let AppCacheObjectCards = new sap.m.FlexBox(nepId()).addStyleClass('nepGrid');\r",
								"                if (dataCat.styleClass) AppCacheObjectCards.addStyleClass(dataCat.styleClass);\r",
								"\r",
								"                // Content Width\r",
								"                if (dataCat.cardContentWidth) {\r",
								"                    AppCacheObjectHeader.addStyleClass('nepGroup' + dataCat.cardContentWidth);\r",
								"                    AppCacheObjectCards.addStyleClass('nepGroup' + dataCat.cardContentWidth);\r",
								"                }\r",
								"\r",
								"                // Content Alignment\r",
								"                let cardContentAlign = sap.n.Launchpad.currLayoutContent.cardContentAlign || 'Center'\r",
								"                if (dataCat.cardContentAlign) cardContentAlign = dataCat.cardContentAlign\r",
								"                if (cardContentAlign) {\r",
								"                    AppCacheObjectHeader.addStyleClass('nepGridAlign' + cardContentAlign);\r",
								"                    AppCacheObjectCards.addStyleClass('nepGridAlign' + cardContentAlign);\r",
								"                }\r",
								"\r",
								"                sap.n.Launchpad.setInitialGridWidth(AppCacheObjectHeader);\r",
								"                sap.n.Launchpad.setInitialGridWidth(AppCacheObjectCards);\r",
								"\r",
								"                // use Neptune Element Query to determine dynamic page width\r",
								"                neptune.ElementQuery.register(AppCacheObjectCards, {\r",
								"                    prefix: 'nepGrid',\r",
								"                    isolate: true,\r",
								"                    width: AppCache.cssGridBreakpoints\r",
								"                });\r",
								"\r",
								"                gridContainer.addItem(AppCacheObjectHeader);\r",
								"                gridContainer.addItem(AppCacheObjectCards);\r",
								"\r",
								"                let oHeaderCell = new sap.m.VBox(nepId(), {});\r",
								"\r",
								"                // Build Group Header\r",
								"                if (!dataCat.hideHeader) {\r",
								"                    let groupHeader = sap.n.Launchpad.buildGroupHeader(dataCat);\r",
								"                    oHeaderCell.addStyleClass('nepTileMax');\r",
								"                    oHeaderCell.addItem(groupHeader);\r",
								"                    AppCacheObjectHeader.addItem(oHeaderCell);\r",
								"                }\r",
								"\r",
								"                // Message \r",
								"                if (dataCat.enableMessage) {\r",
								"                    let message = sap.n.Launchpad.buildGroupMessage(dataCat);\r",
								"                    oHeaderCell.addStyleClass('nepTileMax');\r",
								"                    oHeaderCell.addItem(message);\r",
								"                    AppCacheObjectHeader.addItem(oHeaderCell);\r",
								"                }\r",
								"\r",
								"                // Favorites                 \r",
								"                if (dataCat.inclFav) {\r",
								"                    sap.n.Launchpad.BuildCardContent({\r",
								"                        pageID: pageCatID,\r",
								"                        dataCat: dataCat,\r",
								"                        cardParent: AppCacheObjectCards,\r",
								"                        isFav: true\r",
								"                    });\r",
								"\r",
								"                    AppCacheObjectCards.onAfterRendering = function () {\r",
								"                        sap.n.Card.applyDragDrop(AppCacheObjectCards);\r",
								"                    }\r",
								"                }\r",
								"\r",
								"                AppCacheObjectCards.onAfterRendering = function () {\r",
								"                    if (sap.n.Enhancement.AfterTileGroupRenderer) {\r",
								"                        try {\r",
								"                            sap.n.Enhancement.AfterTileGroupRenderer(this, dataCat);\r",
								"                        } catch (e) {\r",
								"                            appCacheError('Enhancement AfterTileGroupRenderer ' + e);\r",
								"                        }\r",
								"                    }\r",
								"                }\r",
								"\r",
								"                // Cards \r",
								"                sap.n.Launchpad.BuildCardContent({\r",
								"                    pageID: pageCatID,\r",
								"                    dataCat: dataCat,\r",
								"                    cardParent: AppCacheObjectCards,\r",
								"                    isFav: false\r",
								"                });\r",
								"\r",
								"                // Number of Tiles Check \r",
								"                if (dataCat.tiles && dataCat.tiles.length && AppCacheObjectCards.getItems().length === 1) AppCacheObjectCards.removeItem(oHeaderCell);\r",
								"\r",
								"                // Add Grid to Page\r",
								"                pageCat.addContent(gridContainer);\r",
								"\r",
								"                // Child Tile Groups\r",
								"                dataCat.tilegroups.forEach(function (data) {\r",
								"                    let dataCatChild = ModelData.FindFirst(AppCacheCategory, 'id', data.id);\r",
								"\r",
								"                    if (!dataCatChild) dataCatChild = ModelData.FindFirst(AppCacheCategoryChild, 'id', data.id);\r",
								"                    if (!dataCatChild) return;\r",
								"\r",
								"                    // Grid Parent\r",
								"                    let gridId = nepId();\r",
								"\r",
								"                    //Grid containerOpenApp\r",
								"                    let gridContainer = new sap.m.FlexBox(`${sectionPrefix()}${dataCat.id}${dataCatChild.id}`, {\r",
								"                        direction: 'Column',\r",
								"                        alignItems: 'Start'\r",
								"                    }).addStyleClass('nepGridContainer');\r",
								"\r",
								"                    // Header\r",
								"                    let AppCacheObjectHeader = new sap.m.FlexBox(gridId).addStyleClass('nepGrid');\r",
								"\r",
								"                    // Content\r",
								"                    let AppCacheObjectCards = new sap.m.FlexBox(gridId).addStyleClass('nepGrid');\r",
								"                    if (dataCatChild.styleClass) AppCacheObjectCards.addStyleClass(dataCatChild.styleClass);\r",
								"\r",
								"                    // Content Width\r",
								"                    if (dataCatChild.cardContentWidth) {\r",
								"                        AppCacheObjectHeader.addStyleClass('nepGroup' + dataCatChild.cardContentWidth);\r",
								"                        AppCacheObjectCards.addStyleClass('nepGroup' + dataCatChild.cardContentWidth);\r",
								"                    }\r",
								"\r",
								"                    // Content Alignment\r",
								"                    let cardContentAlign = sap.n.Launchpad.currLayoutContent.cardContentAlign;\r",
								"                    if (dataCatChild.cardContentAlign) cardContentAlign = dataCatChild.cardContentAlign\r",
								"                    if (cardContentAlign) AppCacheObjectCards.addStyleClass('nepGridAlign' + cardContentAlign);\r",
								"\r",
								"                    sap.n.Launchpad.setInitialGridWidth(AppCacheObjectHeader);\r",
								"                    sap.n.Launchpad.setInitialGridWidth(AppCacheObjectCards);\r",
								"\r",
								"                    // use Neptune Element Query to determine dynamic page width\r",
								"                    neptune.ElementQuery.register(AppCacheObjectCards, {\r",
								"                        prefix: 'nepGrid',\r",
								"                        isolate: true,\r",
								"                        width: AppCache.cssGridBreakpoints\r",
								"                    });\r",
								"\r",
								"                    gridContainer.addItem(AppCacheObjectHeader);\r",
								"                    gridContainer.addItem(AppCacheObjectCards);\r",
								"\r",
								"                    // Build Group Header\r",
								"                    if (!dataCatChild.hideHeader) {\r",
								"                        let groupHeader = sap.n.Launchpad.buildGroupHeader(dataCatChild);\r",
								"                        let oHeaderCell = new sap.m.VBox(nepId(), {});\r",
								"                        oHeaderCell.addStyleClass('nepTileMax');\r",
								"                        oHeaderCell.addItem(groupHeader);\r",
								"                        AppCacheObjectCards.addItem(oHeaderCell);\r",
								"                    }\r",
								"\r",
								"                    // Message \r",
								"                    if (dataCatChild.enableMessage) {\r",
								"                        let message = sap.n.Launchpad.buildGroupMessage(dataCatChild);\r",
								"                        let oHeaderCell = new sap.m.VBox(nepId(), {});\r",
								"                        oHeaderCell.addStyleClass('nepTileMax');\r",
								"                        oHeaderCell.addItem(message);\r",
								"                        AppCacheObjectCards.addItem(oHeaderCell);\r",
								"                    }\r",
								"\r",
								"                    // Favorites \r",
								"                    if (dataCatChild.inclFav) {\r",
								"                        sap.n.Launchpad.BuildCardContent({\r",
								"                            pageID: pageCatID,\r",
								"                            dataCat: dataCatChild,\r",
								"                            cardParent: AppCacheObjectCards,\r",
								"                            parentCat: dataCat,\r",
								"                            isFav: true\r",
								"                        });\r",
								"\r",
								"                        AppCacheObjectCards.onAfterRendering = function () {\r",
								"                            sap.n.Card.applyDragDrop(AppCacheObjectCards);\r",
								"                        }\r",
								"                    }\r",
								"\r",
								"                    // Cards \r",
								"                    sap.n.Launchpad.BuildCardContent({\r",
								"                        pageID: pageCatID,\r",
								"                        dataCat: dataCatChild,\r",
								"                        cardParent: AppCacheObjectCards,\r",
								"                        parentCat: dataCat,\r",
								"                        isFav: false\r",
								"                    });\r",
								"\r",
								"                    // Number of Tiles Check \r",
								"                    if (dataCatChild.tiles && dataCatChild.tiles.length && AppCacheObjectCards.getItems().length === 1) AppCacheObjectCards.removeItem(oHeaderCell);\r",
								"\r",
								"                    // Add Block to Page\r",
								"                    pageCat.addContent(AppCacheObjectCards);\r",
								"                });\r",
								"\r",
								"                let boxEmpty = new sap.m.HBox(nepId(), {\r",
								"                    height: '50px'\r",
								"                });\r",
								"\r",
								"                pageCat.addContent(boxEmpty);\r",
								"            } else {\r",
								"                // Build Group Header\r",
								"                if (!dataCat.hideHeader) pageCat.addContent(sap.n.Launchpad.buildGroupHeader(dataCat));\r",
								"\r",
								"                // Message \r",
								"                if (dataCat.enableMessage) pageCat.addContent(sap.n.Launchpad.buildGroupMessage(dataCat));\r",
								"\r",
								"                if (!dataCat.backgroundType) dataCat.backgroundType = 'cards';\r",
								"\r",
								"                // Cards Type\r",
								"                if (dataCat.backgroundType === 'cards') {\r",
								"                    dataCat.backgroundType = 'Default';\r",
								"                    dataCat.enableCards = true;\r",
								"                }\r",
								"\r",
								"                // Block Parent\r",
								"                let AppCacheObjectTiles = new sap.ui.layout.BlockLayout(nepId(), {\r",
								"                    background: dataCat.backgroundType,\r",
								"                    keepFontSize: true\r",
								"                });\r",
								"\r",
								"                if (dataCat.styleClass) AppCacheObjectTiles.addStyleClass(dataCat.styleClass);\r",
								"\r",
								"                // Fav \r",
								"                if (dataCat.inclFav) sap.n.Launchpad.BuildTilesContent(dataCat, AppCacheObjectTiles, true);\r",
								"\r",
								"                // Tiles \r",
								"                sap.n.Launchpad.BuildTilesContent(dataCat, AppCacheObjectTiles);\r",
								"\r",
								"                // Add Block to Page\r",
								"                pageCat.addContent(AppCacheObjectTiles);\r",
								"\r",
								"                // Child Tile Groups\r",
								"                dataCat.tilegroups.forEach(function (data) {\r",
								"                    let dataCatChild = ModelData.FindFirst(AppCacheCategory, 'id', data.id);\r",
								"\r",
								"                    if (!dataCatChild) dataCatChild = ModelData.FindFirst(AppCacheCategoryChild, 'id', data.id);\r",
								"                    if (!dataCatChild) return;\r",
								"\r",
								"                    if (!dataCatChild.backgroundType) dataCatChild.backgroundType = 'cards';\r",
								"\r",
								"                    // Cards Type\r",
								"                    if (dataCatChild.backgroundType === 'cards') {\r",
								"                        dataCatChild.backgroundType = 'Default';\r",
								"                        dataCatChild.enableCards = true;\r",
								"                    }\r",
								"\r",
								"                    // Build Group Header\r",
								"                    if (!dataCatChild.hideHeader) pageCat.addContent(sap.n.Launchpad.buildGroupHeader(dataCatChild));\r",
								"\r",
								"                    // Block Parent\r",
								"                    let AppCacheObjectTiles = new sap.ui.layout.BlockLayout(nepId(), {\r",
								"                        background: dataCatChild.backgroundType,\r",
								"                        keepFontSize: true\r",
								"                    });\r",
								"\r",
								"                    if (dataCat.styleClass) AppCacheObjectTiles.addStyleClass(dataCat.styleClass);\r",
								"\r",
								"                    // Fav \r",
								"                    if (dataCatChild.inclFav) sap.n.Launchpad.BuildTilesContent(dataCatChild, AppCacheObjectTiles, true);\r",
								"\r",
								"                    // Tiles \r",
								"                    sap.n.Launchpad.BuildTilesContent(dataCatChild, AppCacheObjectTiles);\r",
								"\r",
								"                    // Add Block to Page\r",
								"                    pageCat.addContent(AppCacheObjectTiles);\r",
								"                });\r",
								"\r",
								"                if (dataCat.tilegroups.length) {\r",
								"                    let boxEmpty = new sap.m.HBox(nepId(), {\r",
								"                        height: (window.innerHeight - 270) + 'px'\r",
								"                    });\r",
								"\r",
								"                    pageCat.addContent(boxEmpty);\r",
								"                }\r",
								"\r",
								"                if (subCat) {\r",
								"                    setTimeout(function () {\r",
								"                        pageCat.scrollTo(0);\r",
								"                    }, 100);\r",
								"                }\r",
								"            }\r",
								"        }\r",
								"\r",
								"        sap.n.Launchpad.backApp = pageCat;\r",
								"        sap.n.Launchpad.setMenuPage(dataCat);\r",
								"\r",
								"        // Navigate\r",
								"        setTimeout(function () {\r",
								"            AppCacheNav.to(pageCat, modelAppCacheDiaSettings.oData.TRANSITION || 'show');\r",
								"        }, 100);\r",
								"\r",
								"        // Scrolling to SubMenu\r",
								"        if (subCat) {\r",
								"            setTimeout(function () {\r",
								"                sap.n.Launchpad.scrollToTileGroup(subCat);\r",
								"            }, 300);\r",
								"        }\r",
								"    },\r",
								"\r",
								"    BuildTilesContent: function (dataCat, AppCacheObjectTiles, isFav) {\r",
								"        let oBlockCell;\r",
								"\r",
								"        // Create First Row\r",
								"        let numSections = 0;\r",
								"        let maxTiles = dataCat.numTiles || 4;\r",
								"        let defaultSize = Math.ceil(100 / maxTiles);\r",
								"        let oBlockRowTiles = '';\r",
								"        let tiles = isFav ? modelAppCacheTilesFav.oData : dataCat.tiles;\r",
								"\r",
								"        sap.n.Launchpad.backgroundShade = '';\r",
								"\r",
								"        tiles.forEach(function (tile) {\r",
								"            let dataTile = ModelData.FindFirst(AppCacheTiles, 'id', tile.id);\r",
								"            if (!dataTile) return;\r",
								"            if (dataTile.disabled) return;\r",
								"\r",
								"            // Fav settings override\r",
								"            if (isFav) {\r",
								"                dataTile = JSON.parse(JSON.stringify(dataTile));\r",
								"                if (tile.frameType) dataTile.frameType = tile.frameType;\r",
								"                if (tile.forceRow) dataTile.forceRow = tile.forceRow;\r",
								"            }\r",
								"\r",
								"            if (sap.n.Launchpad.isDesktop() && dataTile.hideTileDesktop) return;\r",
								"            if (sap.n.Launchpad.isTablet() && dataTile.hideTileTablet) return;\r",
								"            if (sap.n.Launchpad.isPhone() && dataTile.hideTileMobile) return;\r",
								"            if (dataTile.type === 'storeitem' && isCordova()) return;\r",
								"\r",
								"            if (numSections === 0 || dataTile.forceRow) {\r",
								"\r",
								"                oBlockRowTiles = new sap.ui.layout.BlockLayoutRow(nepId(), {\r",
								"                    scrollable: dataCat.enableScroll\r",
								"                });\r",
								"\r",
								"                AppCacheObjectTiles.addContent(oBlockRowTiles);\r",
								"                numSections = 0;\r",
								"            }\r",
								"\r",
								"            // Tile Size\r",
								"            let tileWidth = parseInt(dataTile.frameType) || defaultSize;\r",
								"            numSections = numSections + (maxTiles / 100) * tileWidth;\r",
								"\r",
								"            // Tile Content\r",
								"            switch (dataTile.type) {\r",
								"\r",
								"                case 'intcard':\r",
								"                    oBlockCell = sap.n.Launchpad.buildTileIntegrationCard(dataTile, tileWidth, dataCat);\r",
								"                    oBlockRowTiles.addContent(oBlockCell);\r",
								"                    break;\r",
								"\r",
								"                case 'application':\r",
								"                    oBlockCell = sap.n.Launchpad.buildTileApplication(dataTile, tileWidth, dataCat);\r",
								"                    oBlockRowTiles.addContent(oBlockCell);\r",
								"                    break;\r",
								"\r",
								"                case 'highchart':\r",
								"                    oBlockCell = sap.n.Launchpad.buildTileHighchart(dataTile, tileWidth, dataCat);\r",
								"                    oBlockRowTiles.addContent(oBlockCell);\r",
								"                    break;\r",
								"\r",
								"                case 'highstock':\r",
								"                    oBlockCell = sap.n.Launchpad.buildTileHighstock(dataTile, tileWidth, dataCat);\r",
								"                    oBlockRowTiles.addContent(oBlockCell);\r",
								"                    break;\r",
								"\r",
								"                case 'sub':\r",
								"                    const oBlockRowSub = new sap.ui.layout.BlockLayoutRow(nepId(), {\r",
								"                        scrollable: false\r",
								"                    });\r",
								"                    AppCacheObjectTiles.addContent(oBlockRowSub);\r",
								"                    oBlockRowSub.addContent(sap.n.Launchpad.buildTileSubHeader(dataTile, tileWidth, dataCat));\r",
								"                    break;\r",
								"\r",
								"                default:\r",
								"                    oBlockCell = sap.n.Launchpad.buildTileDefault(dataTile, tileWidth, dataCat);\r",
								"                    oBlockRowTiles.addContent(oBlockCell);\r",
								"                    break;\r",
								"            }\r",
								"\r",
								"            if (!dataCat.enableScroll) {\r",
								"                if (numSections >= maxTiles) numSections = 0;\r",
								"            }\r",
								"\r",
								"            if (dataTile.frameType && !sap.n.Launchpad.isPhone()) oBlockCell.addStyleClass('nepTileCardsFixed' + dataTile.frameType);\r",
								"\r",
								"        });\r",
								"    },\r",
								"\r",
								"    HandleTilePress: function (dataTile, dataCat) {\r",
								"        if (dataTile.navObject && dataTile.navAction) {\r",
								"            location.hash = dataTile.navObject + '-' + dataTile.navAction;\r",
								"        } else {\r",
								"            location.hash = '';\r",
								"            sap.n.Launchpad._HandleTilePress(dataTile, dataCat);\r",
								"        }\r",
								"    },\r",
								"\r",
								"    _HandleTilePress: function (dataTile, dataCat) {\r",
								"        let appTitle;\r",
								"\r",
								"        // Any tile ?\r",
								"        if (!dataTile) return;\r",
								"\r",
								"        // Clear Hash if no semantic navigation\r",
								"        if (!dataTile.navObject && !dataTile.navAction) location.hash = '';\r",
								"\r",
								"        // Avoid double start\r",
								"        if (sap.n.Launchpad.currentTile && !sap.n.Launchpad.currentTile.actionURL) {\r",
								"            if (sap.n.Launchpad.currentTile.id === dataTile.id) return;\r",
								"        }\r",
								"\r",
								"        AppCacheShellHelp.setVisible(false);\r",
								"        sap.n.Launchpad.contextType = 'Menu';\r",
								"\r",
								"        // Start SidePanel\r",
								"        if (dataTile.sidepanelApp && !sap.n.Launchpad.isPhone()) {\r",
								"            sap.n.Shell.loadSidepanel(dataTile.sidepanelApp, dataTile.sidepanelTitle);\r",
								"        } else {\r",
								"            sap.n.Shell.closeSidepanel();\r",
								"        }\r",
								"\r",
								"        // Set App Title\r",
								"        if (sap.n.Launchpad.isPhone() || dataTile.subTitle === '' || dataTile.subTitle === null) {\r",
								"            appTitle = dataTile.title;\r",
								"        } else {\r",
								"            appTitle = dataTile.title + ' - ' + dataTile.subTitle;\r",
								"        }\r",
								"\r",
								"        // Header Handling \r",
								"        let hideHeader = false;\r",
								"        if (sap.n.Launchpad.isDesktop() && dataTile.hideHeaderL) hideHeader = true;\r",
								"        if (sap.n.Launchpad.isTablet() && dataTile.hideHeaderM) hideHeader = true;\r",
								"        if (sap.n.Launchpad.isPhone() && dataTile.hideHeaderS) hideHeader = true;\r",
								"\r",
								"        sap.n.Launchpad.setHideHeader(hideHeader);\r",
								"\r",
								"        if (dataTile.urlApplication === null) dataTile.urlApplication = \"\";\r",
								"\r",
								"        // Show back Button \r",
								"        if (!dataTile.openDialog && !dataTile.openWindow) {\r",
								"            if (dataTile.actionApplication || dataTile.actionURL || dataTile.actionWebApp || dataTile.actionType === 'F') {\r",
								"                sap.n.Launchpad.currentTile = dataTile;\r",
								"            }\r",
								"\r",
								"            if (!sap.n.Launchpad.hideBackIcon) AppCacheShellBack.setVisible(true);\r",
								"        }\r",
								"\r",
								"        // Trace\r",
								"        if (AppCache.enableTrace && !AppCache.isOffline) sap.n.Launchpad.traceTile(dataTile);\r",
								"\r",
								"        // Enhancement\r",
								"        if (sap.n.Enhancement.TileClick) {\r",
								"            try {\r",
								"                sap.n.Enhancement.TileClick(dataTile);\r",
								"            } catch (e) {\r",
								"                appCacheError('Enhancement TileClick ' + e);\r",
								"            }\r",
								"        }\r",
								"\r",
								"\r",
								"        // Adaptive Framework\r",
								"        if (dataTile.actionType === 'F') {\r",
								"\r",
								"            sap.n.Adaptive.getConfig(dataTile.settings.adaptive.id).then(function (config) {\r",
								"\r",
								"                // Exists ? \r",
								"                if (!config) {\r",
								"                    sap.m.MessageToast.show(AppCache_tAdaptiveNotFound.getText());\r",
								"                    return;\r",
								"                }\r",
								"\r",
								"                if (dataTile.openDialog) {\r",
								"\r",
								"                    AppCache.Load(config.application, {\r",
								"                        appGUID: dataTile.id,\r",
								"                        dialogShow: true,\r",
								"                        dialogTitle: appTitle,\r",
								"                        dialogHeight: dataTile.dialogHeight || '90%',\r",
								"                        dialogWidth: dataTile.dialogWidth || '1200px',\r",
								"                        startParams: config\r",
								"                    });\r",
								"\r",
								"                    sap.n.Launchpad.contextType = 'Tile';\r",
								"                    sap.n.Launchpad.contextTile = dataTile;\r",
								"                    location.hash = '';\r",
								"\r",
								"                } else {\r",
								"\r",
								"                    // Start App\r",
								"                    sap.n.Launchpad.handleAppTitle(appTitle);\r",
								"                    sap.n.Launchpad.handleNavButton(dataTile, dataCat);\r",
								"                    sap.n.Launchpad.handleRunListApp(dataTile);\r",
								"\r",
								"                    AppCache.Load(config.application, {\r",
								"                        appGUID: dataTile.id,\r",
								"                        startParams: config,\r",
								"                        openFullscreen: dataTile.openFullscreen\r",
								"                    });\r",
								"\r",
								"                    // Sidepanel User Assistance\r",
								"                    if (dataTile.enableDocumentation && !AppCache.isPublic) AppCacheShellHelp.setVisible(true);\r",
								"\r",
								"                    // Mark Open From \r",
								"                    if (sap.n.Shell.openSidePanelApps[dataTile.actionApplication]) sap.n.Shell.openSidepanel();\r",
								"\r",
								"                }\r",
								"\r",
								"            });\r",
								"\r",
								"            return;\r",
								"\r",
								"        }\r",
								"\r",
								"        // Store Item\r",
								"        if (dataTile.type === 'storeitem') {\r",
								"            // Get Mobile Client\r",
								"            request({\r",
								"                type: 'GET',\r",
								"                contentType: 'application/json; charset=utf-8',\r",
								"                url: AppCache.Url + '/mobileClients/' + dataTile.storeItem.mobileClient,\r",
								"                dataType: 'json',\r",
								"                success: function (data) {\r",
								"                    // Get Active Version \r",
								"                    data.activeBuild = {};\r",
								"                    data.builds.forEach(function (build) {\r",
								"                        if (data.activeVersion === build.version) data.activeBuild = build;\r",
								"                    });\r",
								"\r",
								"                    // Hide image on phone\r",
								"                    if (sap.n.Launchpad.isPhone()) {\r",
								"                        oTileImageCell.setVisible(false);\r",
								"                    } else {\r",
								"                        oTileImage.setSrc(AppCache.Url + '/media/' + data.iconId);\r",
								"                    }\r",
								"\r",
								"                    // Install button \r",
								"                    AppCachePageStoreInstall.setEnabled(false);\r",
								"                    switch (sap.ui.Device.os.name) {\r",
								"\r",
								"                        case 'win':\r",
								"                            if (data.buildWindows && data.activeBuild.dataWindows) AppCachePageStoreInstall.setEnabled(true);\r",
								"                            break;\r",
								"\r",
								"                        case 'Android':\r",
								"                            if (data.buildAndroid && data.activeBuild.dataAndroid) AppCachePageStoreInstall.setEnabled(true);\r",
								"                            break;\r",
								"\r",
								"                        case 'iOS':\r",
								"                            if (data.buildIOS && data.activeBuild.dataIos) AppCachePageStoreInstall.setEnabled(true);\r",
								"                            break;\r",
								"\r",
								"                    }\r",
								"\r",
								"                    modelAppCachePageStore.setData(data);\r",
								"                    AppCacheNav.to(AppCachePageStore);\r",
								"                },\r",
								"                error: function (data) {\r",
								"                    sap.m.MessageToast.show(data.status);\r",
								"                }\r",
								"            });\r",
								"\r",
								"            return;\r",
								"        }\r",
								"\r",
								"        // Tile Group \r",
								"        if (dataTile.actiongroup) {\r",
								"            let dataCat = ModelData.FindFirst(AppCacheCategory, 'id', dataTile.actiongroup);\r",
								"            if (!dataCat) dataCat = ModelData.FindFirst(AppCacheCategoryChild, 'id', dataTile.actiongroup);\r",
								"            if (dataCat) {\r",
								"                if (!sap.n.Launchpad.hideBackIcon) AppCacheShellBack.setVisible(true);\r",
								"                sap.n.Launchpad.handleAppTitle(dataTile.title);\r",
								"                sap.n.Launchpad.BuildTiles(dataCat, true);\r",
								"            }\r",
								"            return;\r",
								"        }\r",
								"\r",
								"        // External URL\r",
								"        if (dataTile.actionURL) {\r",
								"            sap.n.Launchpad.handleRunListApp(dataTile);\r",
								"\r",
								"            if (dataTile.openWindow) {\r",
								"                if (AppCache.isMobile) {\r",
								"                    window.open(dataTile.actionURL, '_blank', 'location=0,status=0');\r",
								"                } else {\r",
								"                    sap.m.URLHelper.redirect(dataTile.actionURL, dataTile.openWindow);\r",
								"                }\r",
								"\r",
								"                location.hash = '';\r",
								"                AppCacheShellBack.setVisible(false);\r",
								"            } else if (dataTile.openDialog) {\r",
								"                sap.n.Launchpad.contextType = 'Tile';\r",
								"                sap.n.Launchpad.contextTile = dataTile;\r",
								"\r",
								"                sap.n.Shell.openUrl(dataTile.actionURL, {\r",
								"                    dialogTitle: appTitle,\r",
								"                    dialogHeight: dataTile.dialogHeight || '90%',\r",
								"                    dialogWidth: dataTile.dialogWidth || '1200px',\r",
								"                });\r",
								"\r",
								"                location.hash = '';\r",
								"                AppCacheShellBack.setVisible(false);\r",
								"            } else {\r",
								"                sap.n.Launchpad.handleAppTitle(appTitle);\r",
								"                sap.n.Launchpad.handleNavButton(dataTile, dataCat);\r",
								"\r",
								"                AppCacheNav.to(AppCache_boxURL, modelAppCacheDiaSettings.oData.TRANSITION || 'show');\r",
								"\r",
								"                if (dataTile.openFullscreen) {\r",
								"                    AppCacheShellUI.setAppWidthLimited(false);\r",
								"                } else {\r",
								"                    AppCacheShellUI.setAppWidthLimited(true);\r",
								"                }\r",
								"\r",
								"                // Hide All\r",
								"                hideChildren('#AppCache_URLDiv');\r",
								"\r",
								"                // Check If element exist > Display or Create\r",
								"                let el = elById(`iFrame${dataTile.id}`);\r",
								"\r",
								"                if (el) {\r",
								"                    el.style.display = 'block';\r",
								"                } else {\r",
								"                    appendIFrame(\r",
								"                        querySelector('#AppCache_URLDiv'),\r",
								"                        {\r",
								"                            'id': `iFrame${dataTile.id}`,\r",
								"                            'frameborder': '0',\r",
								"                            'style': 'border: 0;',\r",
								"                            'width': '100%',\r",
								"                            'height': '100%',\r",
								"                            'src': dataTile.actionURL\r",
								"                        }\r",
								"                    )\r",
								"                }\r",
								"            }\r",
								"\r",
								"            return;\r",
								"        }\r",
								"\r",
								"        // Web App\r",
								"        if (dataTile.actionWebApp) {\r",
								"            if (dataTile.openWindow) {\r",
								"                let url = '/webapp/' + dataTile.actionWebApp;\r",
								"                if (dataTile.urlApplication) {\r",
								"                    url = dataTile.urlApplication + url;\r",
								"                } else {\r",
								"                    url = AppCache.Url + url;\r",
								"                }\r",
								"\r",
								"                if (AppCache.isMobile) {\r",
								"                    window.open(url, '_blank', 'location=0,status=0');\r",
								"                } else {\r",
								"                    sap.m.URLHelper.redirect(url, dataTile.openWindow);\r",
								"                }\r",
								"\r",
								"                location.hash = '';\r",
								"                AppCacheShellBack.setVisible(false);\r",
								"            } else {\r",
								"                sap.n.Launchpad.handleAppTitle(appTitle);\r",
								"\r",
								"                let viewName = 'webapp:' + dataTile.actionWebApp + ':' + dataTile.urlApplication;\r",
								"                let webApp = ModelData.FindFirst(AppCacheData, ['application', 'appPath'], [dataTile.actionWebApp, dataTile.urlApplication]);\r",
								"\r",
								"                if (webApp) {\r",
								"\r",
								"                    // Get App from Memory\r",
								"                    if (AppCache.View[viewName]) {\r",
								"                        AppCache.buildWebApp(dataTile, null, dataCat);\r",
								"                        return;\r",
								"                    }\r",
								"\r",
								"                    // Get App from Cache\r",
								"                    if (typeof p9Database !== 'undefined' && p9Database !== null) {\r",
								"                        p9GetView(viewName).then(function (viewData) {\r",
								"                            if (viewData.length > 10 && !webApp.invalid) {\r",
								"                                AppCache.buildWebApp(dataTile, viewData, dataCat);\r",
								"                            } else {\r",
								"                                AppCache.getWebApp(dataTile, dataCat);\r",
								"                            }\r",
								"                        });\r",
								"                    } else {\r",
								"                        let data = sapStorageGet(viewName);\r",
								"                        if (data && !webApp.invalid) {\r",
								"                            AppCache.buildWebApp(dataTile, data, dataCat);\r",
								"                        } else {\r",
								"                            AppCache.getWebApp(dataTile, dataCat);\r",
								"                        }\r",
								"                    }\r",
								"                } else {\r",
								"                    AppCache.getWebApp(dataTile, dataCat);\r",
								"                }\r",
								"            }\r",
								"\r",
								"            return;\r",
								"        }\r",
								"\r",
								"        // Application\r",
								"        if (dataTile.actionApplication) {\r",
								"\r",
								"            if (dataTile.openDialog) {\r",
								"\r",
								"                AppCache.Load(dataTile.actionApplication, {\r",
								"                    appGUID: dataTile.id,\r",
								"                    appPath: dataTile.urlApplication,\r",
								"                    appAuth: dataTile.urlAuth,\r",
								"                    appType: dataTile.urlType,\r",
								"                    dialogShow: true,\r",
								"                    dialogTitle: appTitle,\r",
								"                    sapICFNode: dataTile.sapICFNode || '',\r",
								"                    dialogHeight: dataTile.dialogHeight || '90%',\r",
								"                    dialogWidth: dataTile.dialogWidth || '1200px',\r",
								"                    startParams: dataTile.actionParameters\r",
								"                });\r",
								"\r",
								"                sap.n.Launchpad.contextType = 'Tile';\r",
								"                sap.n.Launchpad.contextTile = dataTile;\r",
								"                location.hash = '';\r",
								"\r",
								"            } else if (dataTile.openWindow) {\r",
								"                let url = `/app/${dataTile.actionApplication}`;\r",
								"                if (dataTile.isPublic) url = `/public/app/${dataTile.actionApplication}`;\r",
								"\r",
								"                if (dataTile.urlApplication) url = `${dataTile.urlApplication}${url}`;\r",
								"                else url = `${AppCache.Url}${url}`;\r",
								"\r",
								"                if (AppCache.isMobile) {\r",
								"                    window.open(url, '_blank', 'location=0,status=0');\r",
								"                } else {\r",
								"                    sap.m.URLHelper.redirect(url, dataTile.openWindow);\r",
								"                }\r",
								"            } else {\r",
								"                // Start App\r",
								"                sap.n.Launchpad.handleAppTitle(appTitle);\r",
								"                sap.n.Launchpad.handleNavButton(dataTile, dataCat);\r",
								"                sap.n.Launchpad.handleRunListApp(dataTile);\r",
								"\r",
								"                AppCache.Load(dataTile.actionApplication, {\r",
								"                    appGUID: dataTile.id,\r",
								"                    appPath: dataTile.urlApplication,\r",
								"                    appAuth: dataTile.urlAuth,\r",
								"                    appType: dataTile.urlType,\r",
								"                    sapICFNode: dataTile.sapICFNode,\r",
								"                    startParams: dataTile.actionParameters,\r",
								"                    openFullscreen: dataTile.openFullscreen\r",
								"                });\r",
								"\r",
								"                // Sidepanel User Assistance\r",
								"                if (dataTile.enableDocumentation && !AppCache.isPublic) AppCacheShellHelp.setVisible(true);\r",
								"\r",
								"                // Mark Open From \r",
								"                if (sap.n.Shell.openSidePanelApps[dataTile.actionApplication]) sap.n.Shell.openSidepanel();\r",
								"\r",
								"            }\r",
								"            return;\r",
								"        }\r",
								"\r",
								"    },\r",
								"\r",
								"    handleAppTitle: function (appTitle) {\r",
								"        if (AppCache.config.showAppTitle && !AppCache.config.enableTopMenu) AppCacheShellAppTitle.setText(appTitle || '');\r",
								"    },\r",
								"\r",
								"    handleRunListApp: function (dataTile) {\r",
								"        // Get Data from Fav List\r",
								"        let rec = ModelData.FindFirst(AppCacheTilesRun, 'id', dataTile.id);\r",
								"\r",
								"        // Update counter\r",
								"        if (rec) {\r",
								"            rec.sort = parseInt(rec.sort) + 1;\r",
								"        } else {\r",
								"            rec = dataTile;\r",
								"            rec.sort = 1;\r",
								"        }\r",
								"\r",
								"        // Update Fav List\r",
								"        ModelData.Update(AppCacheTilesRun, 'id', dataTile.id, rec);\r",
								"\r",
								"        // Fix\r",
								"        if (!modelAppCacheTilesRun.oData.length) modelAppCacheTilesRun.setData([]);\r",
								"\r",
								"        // Only Last 10\r",
								"        let sorted = modelAppCacheTilesRun.oData.sort(function (a, b) {\r",
								"            if (a.sort > b.sort)\r",
								"                return -1;\r",
								"            if (a.sort < b.sort)\r",
								"                return 1;\r",
								"            return 0;\r",
								"        });\r",
								"\r",
								"        modelAppCacheTilesRun.setData(sorted.splice(0, 10));\r",
								"        setCacheAppCacheTilesRun();\r",
								"    },\r",
								"\r",
								"    getIconUrl: function (dataTile) {\r",
								"        if (dataTile.icon) return dataTile.icon;\r",
								"\r",
								"        if (dataTile.actionType === 'F') return 'sap-icon://chart-table-view';\r",
								"        else if (dataTile.actionApplication) return 'sap-icon://sys-monitor';\r",
								"\r",
								"        return 'sap-icon://chain-link';\r",
								"    },\r",
								"\r",
								"    handleNavButton: function (dataTile, dataCat) {\r",
								"        // Tree Menu - Active Apps\r",
								"        const containerAppId = `${nepPrefix()}OpenAppContainer${dataTile.id}`;\r",
								"        containerOpenApp = sap.ui.getCore().byId(containerAppId);\r",
								"\r",
								"        if (!containerOpenApp) {\r",
								"            containerOpenApp = new sap.m.HBox(containerAppId, {\r",
								"                width: '100%',\r",
								"                justifyContent: 'SpaceBetween',\r",
								"                alignItems: 'Center'\r",
								"            }).addStyleClass('nepOpenAppsContainer');\r",
								"\r",
								"            let butOpenApp = new sap.m.Button(`${nepPrefix()}OpenApp${dataTile.id}`, {\r",
								"                text: sap.n.Launchpad.translateTile('title', dataTile),\r",
								"                icon: sap.n.Launchpad.getIconUrl(dataTile),\r",
								"                iconFirst: true,\r",
								"                press: function (oEvent) {\r",
								"                    sap.n.Launchpad.HandleTilePress(dataTile, dataCat);\r",
								"                    if (!AppCache.config.verticalMenu) sap.n.Launchpad.overflowMenuClose();\r",
								"                }\r",
								"            }).addStyleClass('nepOpenAppsBtn nepOpenAppsBtnItem');\r",
								"\r",
								"            let butOpenAppClose = new sap.ui.core.Icon(nepId(), {\r",
								"                size: '1.375rem',\r",
								"                src: 'sap-icon://sys-cancel',\r",
								"                press: function (oEvent) {\r",
								"                    sap.n.Shell.closeTile(dataTile);\r",
								"                }\r",
								"            }).addStyleClass('nepOpenAppsClose');\r",
								"\r",
								"            openApps.addItem(containerOpenApp);\r",
								"            containerOpenApp.addItem(butOpenApp);\r",
								"            containerOpenApp.addItem(butOpenAppClose);\r",
								"            openAppMaster.setVisible(true);\r",
								"        }\r",
								"\r",
								"        // Do not have action buttons for phones\r",
								"        if (sap.n.Launchpad.isPhone() && !isWidthGTE(1000)) return;\r",
								"\r",
								"        // New Button - Side\r",
								"        if (AppCache.config.activeAppsSide) {\r",
								"            const blockCellId = `but${dataTile.id}`;\r",
								"            let oBlockCell = sap.ui.getCore().byId(blockCellId);\r",
								"            if (!oBlockCell) {\r",
								"                // Top\r",
								"                let oBlockCell = new sap.ui.layout.BlockLayoutCell(blockCellId).addStyleClass('tileEmpty');\r",
								"                sap.n.Launchpad.setBackgroundShade(dataTile, dataCat, oBlockCell, true);\r",
								"                oBlockCell.addStyleClass('nepTileCardsRunning nepNavBarTile');\r",
								"\r",
								"                let boxTop = new sap.m.FlexBox(nepId(), {\r",
								"                    justifyContent: 'Start',\r",
								"                    alignContent: 'Center',\r",
								"                    height: '35px'\r",
								"                });\r",
								"\r",
								"                let boxIcon = new sap.m.VBox(nepId(), {\r",
								"                    width: '38px'\r",
								"                }).addStyleClass('nepNavBarBoxIcon');\r",
								"\r",
								"                if (dataTile.cardImage) {\r",
								"                    boxIcon.addItem(\r",
								"                        new sap.m.Image(nepId(), {\r",
								"                            src: dataTile.cardImage,\r",
								"                            height: '37px',\r",
								"                            densityAware: false,\r",
								"                        })\r",
								"                    );\r",
								"                } else {\r",
								"                    boxIcon.addItem(\r",
								"                        new sap.ui.core.Icon(nepId(), {\r",
								"                            src: sap.n.Launchpad.getIconUrl(dataTile),\r",
								"                            size: '2rem',\r",
								"                            useIconTooltip: false\r",
								"                        })\r",
								"                    );\r",
								"                }\r",
								"\r",
								"                let boxTitle = new sap.m.VBox(nepId(), {\r",
								"                    width: '190px'\r",
								"                }).addStyleClass('nepNavBarBoxTitle');\r",
								"\r",
								"                let textTitle = new sap.m.Text(nepId(), {\r",
								"                    wrapping: false,\r",
								"                    text: sap.n.Launchpad.translateTile('title', dataTile),\r",
								"                }).addStyleClass('nepNavBarTitle');\r",
								"\r",
								"                let textSubTitle = new sap.m.Text(nepId(), {\r",
								"                    wrapping: false,\r",
								"                    text: sap.n.Launchpad.translateTile('subTitle', dataTile),\r",
								"                }).addStyleClass('nepNavBarSubTitle');\r",
								"\r",
								"                let boxActions = new sap.m.VBox(nepId(), {\r",
								"                    justifyContent: 'Start',\r",
								"                    width: '40px'\r",
								"                });\r",
								"\r",
								"                let butClose = new sap.m.Button(nepId(), {\r",
								"                    type: 'Transparent',\r",
								"                    icon: 'sap-icon://sys-cancel',\r",
								"                    press: function (oEvent) {\r",
								"                        sap.n.Shell.closeTile(dataTile);\r",
								"                    }\r",
								"                });\r",
								"\r",
								"                let buttonStyle = sap.n.Launchpad.buildTileActionStyle(oBlockCell);\r",
								"                butClose.addStyleClass('nepTileAction nepNavBarAction ' + buttonStyle);\r",
								"\r",
								"                // Event - Click\r",
								"                boxIcon.attachBrowserEvent('click', function (oEvent) {\r",
								"                    sap.n.Launchpad.setActiveIcon(dataTile.id);\r",
								"                    sap.n.Launchpad.HandleTilePress(dataTile, dataCat);\r",
								"                    popNavBar.close();\r",
								"                });\r",
								"\r",
								"                // Placement\r",
								"                oBlockCell.addContent(boxTop);\r",
								"                boxTop.addItem(boxIcon);\r",
								"                boxTop.addItem(boxTitle);\r",
								"                boxTop.addItem(boxActions);\r",
								"                boxTitle.addItem(textTitle);\r",
								"                boxTitle.addItem(textSubTitle);\r",
								"                boxActions.addItem(butClose);\r",
								"\r",
								"                blockRunningRow.addContent(oBlockCell);\r",
								"\r",
								"                if (!isTouchScreen() || isWidthGTE(1000)) {\r",
								"                    oBlockCell.attachBrowserEvent('mouseenter', function (oEvent) {\r",
								"                        blockPopoverRow.removeAllContent();\r",
								"                        blockPopoverRow.addContent(sap.n.Launchpad.handlePopButton(dataTile, dataCat));\r",
								"\r",
								"                        popNavBar.setPlacement('Right');\r",
								"                        popNavBar.setOffsetX(-63);\r",
								"                        popNavBar.setOffsetY(0);\r",
								"\r",
								"                        setTimeout(function () {\r",
								"                            popNavBar.openBy(oBlockCell);\r",
								"                        }, 100);\r",
								"                    });\r",
								"                }\r",
								"\r",
								"                if (launchpadContentNavigator.getWidth() === '0px') {\r",
								"                    launchpadContentNavigator.setWidth('70px');\r",
								"                    sap.n.Layout.setHeaderPadding();\r",
								"                }\r",
								"            }\r",
								"        }\r",
								"\r",
								"        // Nav Button - Top\r",
								"        if (AppCache.config.activeAppsTop) {\r",
								"            // New Button\r",
								"            let tileButton = sap.ui.getCore().byId(`butTop${dataTile.id}`);\r",
								"            if (!tileButton) {\r",
								"                tileButton = new sap.m.Button(`butTop${dataTile.id}`, {\r",
								"                    type: 'Transparent',\r",
								"                    icon: sap.n.Launchpad.getIconUrl(dataTile),\r",
								"                    press: function (oEvent) { sap.n.Launchpad.HandleTilePress(dataTile); }\r",
								"                }).addStyleClass('nepTopMenuBtn nepTopMenuActive');\r",
								"\r",
								"                AppCacheShellOpenApps.addItem(tileButton);\r",
								"\r",
								"                if (!isTouchScreen() || isWidthGTE(1000)) {\r",
								"                    tileButton.attachBrowserEvent('mouseenter', function (e) {\r",
								"                        blockPopoverRow.removeAllContent();\r",
								"                        blockPopoverRow.addContent(sap.n.Launchpad.handlePopButton(dataTile, dataCat));\r",
								"                        popNavBar.setPlacement('Bottom');\r",
								"                        popNavBar.setOffsetX(-150);\r",
								"                        popNavBar.setOffsetY(4);\r",
								"\r",
								"                        setTimeout(function () {\r",
								"                            popNavBar.openBy(tileButton);\r",
								"                        }, 100);\r",
								"                    });\r",
								"                }\r",
								"            }\r",
								"        }\r",
								"\r",
								"        // Set Active \r",
								"        sap.n.Launchpad.setActiveIcon(dataTile.id);\r",
								"    },\r",
								"\r",
								"    handlePopButton: function (dataTile, dataCat) {\r",
								"        // Top \r",
								"        let oBlockCell = new sap.ui.layout.BlockLayoutCell(nepId()).addStyleClass('nepIconActive nepTileCardsPop nepNavBarTile');\r",
								"\r",
								"        sap.n.Launchpad.setBackgroundShade(dataTile, dataCat, oBlockCell, true);\r",
								"\r",
								"        // oBlockCell.addStyleClass('nepTileCardsPop nepNavBarTile');\r",
								"\r",
								"        let boxTop = new sap.m.FlexBox(nepId(), {\r",
								"            justifyContent: 'Start',\r",
								"            alignContent: 'Center',\r",
								"            height: '35px'\r",
								"        });\r",
								"\r",
								"        let boxIcon = new sap.m.VBox(nepId(), {\r",
								"            width: '38px'\r",
								"        }).addStyleClass('nepNavBarBoxIcon');\r",
								"\r",
								"        if (dataTile.cardImage) {\r",
								"            let oBlockImage = new sap.m.Image(nepId(), {\r",
								"                src: dataTile.cardImage,\r",
								"                height: '37px',\r",
								"                densityAware: false,\r",
								"            });\r",
								"            boxIcon.addItem(oBlockImage);\r",
								"        } else {\r",
								"            let oBlockIcon = new sap.ui.core.Icon(nepId(), {\r",
								"                src: sap.n.Launchpad.getIconUrl(dataTile),\r",
								"                size: '2rem',\r",
								"                useIconTooltip: false\r",
								"            });\r",
								"            boxIcon.addItem(oBlockIcon);\r",
								"        }\r",
								"\r",
								"        let boxTitle = new sap.m.VBox(nepId(), {\r",
								"            width: '190px'\r",
								"        }).addStyleClass('nepNavBarBoxTitle');\r",
								"\r",
								"        let textTitle = new sap.m.Text(nepId(), {\r",
								"            wrapping: false,\r",
								"            text: sap.n.Launchpad.translateTile('title', dataTile),\r",
								"        }).addStyleClass('nepNavBarTitle');\r",
								"\r",
								"        let textSubTitle = new sap.m.Text(nepId(), {\r",
								"            wrapping: false,\r",
								"            text: sap.n.Launchpad.translateTile('subTitle', dataTile),\r",
								"        }).addStyleClass('nepNavBarSubTitle');\r",
								"\r",
								"        let boxActions = new sap.m.VBox(nepId(), {\r",
								"            justifyContent: 'Start',\r",
								"            width: '40px'\r",
								"        });\r",
								"\r",
								"        let butClose = new sap.m.Button(nepId(), {\r",
								"            type: 'Transparent',\r",
								"            icon: 'sap-icon://sys-cancel',\r",
								"            press: function (oEvent) {\r",
								"                sap.n.Shell.closeTile(dataTile);\r",
								"                popNavBar.close();\r",
								"            }\r",
								"        });\r",
								"\r",
								"        let buttonStyle = sap.n.Launchpad.buildTileActionStyle(oBlockCell);\r",
								"        butClose.addStyleClass('nepTileAction nepNavBarAction ' + buttonStyle);\r",
								"\r",
								"        // Event - Click\r",
								"        oBlockCell.attachBrowserEvent('click', function (oEvent) {\r",
								"            sap.n.Launchpad.setActiveIcon(dataTile.id);\r",
								"            sap.n.Launchpad.HandleTilePress(dataTile, dataCat);\r",
								"            popNavBar.close();\r",
								"        });\r",
								"\r",
								"        // Placement\r",
								"        oBlockCell.addContent(boxTop);\r",
								"        boxTop.addItem(boxIcon);\r",
								"        boxTop.addItem(boxTitle);\r",
								"        boxTitle.addItem(textTitle);\r",
								"        boxTitle.addItem(textSubTitle);\r",
								"        boxTop.addItem(boxActions);\r",
								"        boxActions.addItem(butClose);\r",
								"\r",
								"        return oBlockCell;\r",
								"    },\r",
								"\r",
								"    isMenuPage: function () {\r",
								"        let id = AppCacheNav.getCurrentPage().sId;\r",
								"        id = id.split('page')[1];\r",
								"\r",
								"        if (id) {\r",
								"            const dataCatChild = ModelData.FindFirst(AppCacheCategoryChild, 'id', id);\r",
								"            return dataCatChild ? false : true;\r",
								"        }\r",
								"\r",
								"        return false;\r",
								"    },\r",
								"\r",
								"    setMenuPage: function (dataCat) {\r",
								"        // AppCacheShellUI.setAppWidthLimited(!dataCat.enableFullScreen);\r",
								"\r",
								"        // Close Help\r",
								"        AppCacheShellHelp.setVisible(false);\r",
								"        sap.n.Shell.closeSidepanel();\r",
								"\r",
								"        // Clear currentTile\r",
								"        sap.n.Launchpad.currentTile = {};\r",
								"\r",
								"        // Title\r",
								"        sap.n.Launchpad.SetHeader();\r",
								"    },\r",
								"\r",
								"    handleFavRedraw: function () {\r",
								"        // Rebuild Page if on Fav Tile Group\r",
								"        let cat = AppCacheNav.getCurrentPage().sId;\r",
								"        cat = cat.split('page')[1];\r",
								"\r",
								"        let dataCat = ModelData.FindFirst(AppCacheCategory, 'id', cat);\r",
								"        if (!dataCat) dataCat = ModelData.FindFirst(AppCacheCategoryChild, 'id', cat);\r",
								"\r",
								"        // Check tilegroups on page \r",
								"        let favFound = false;\r",
								"\r",
								"        dataCat.tilegroups.forEach(function (tilegroup) {\r",
								"            let dataCatSub = ModelData.FindFirst(AppCacheCategory, 'id', tilegroup.id);\r",
								"            if (!dataCatSub) dataCatSub = ModelData.FindFirst(AppCacheCategoryChild, 'id', tilegroup.id);\r",
								"            if (dataCatSub && dataCatSub.inclFav) favFound = true;\r",
								"        });\r",
								"\r",
								"\r",
								"        if (dataCat && dataCat.inclFav) favFound = true;\r",
								"\r",
								"\r",
								"        if (favFound) {\r",
								"            let page = AppCacheNav.getCurrentPage();\r",
								"            AppCacheNav.removePage(page);\r",
								"            page.destroy();\r",
								"            page = null;\r",
								"            sap.n.Launchpad.BuildTiles(dataCat);\r",
								"        }\r",
								"\r",
								"        sap.n.Launchpad.saveFav();\r",
								"    },\r",
								"\r",
								"    saveFav: function () {\r",
								"        if (!modelAppCacheTilesFav.oData.length) modelAppCacheTilesFav.oData = [];\r",
								"\r",
								"        let favList = modelAppCacheTilesFav.oData.map(function (fav) {\r",
								"            return {\r",
								"                id: fav.id,\r",
								"                cardWidth: fav.cardWidth,\r",
								"                cardHeight: fav.cardHeight\r",
								"            };\r",
								"        });\r",
								"\r",
								"        // Update P9 DB with data \r",
								"        sap.n.Planet9.function({\r",
								"            id: dataSet,\r",
								"            method: 'SaveFav',\r",
								"            data: {\r",
								"                tiles: favList,\r",
								"                launchpad: AppCache.launchpadID,\r",
								"            }\r",
								"        });\r",
								"    },\r",
								"\r",
								"    setHideHeader: function (hideHeader) {\r",
								"        if (AppCache.config && AppCache.config.hideTopHeader) return;\r",
								"        topMenu.setHeight(hideHeader ? '0px' : '48px');\r",
								"    },\r",
								"\r",
								"    setHideTopButtons: function (hide) {\r",
								"        if (hide) {\r",
								"            if (!AppCache.StartApp && !AppCache.StartWebApp) AppCacheShellMenu.setVisible(!hide);\r",
								"            if (!sap.n.Launchpad.hideBackIcon) AppCacheShellBack.setVisible(!hide);\r",
								"        } else {\r",
								"            if (!AppCache.StartApp && !AppCache.StartWebApp) AppCacheShellMenu.setVisible(hide);\r",
								"            if (!sap.n.Launchpad.hideBackIcon) AppCacheShellBack.setVisible(hide);\r",
								"        }\r",
								"    },\r",
								"\r",
								"    setActiveIcon: function (id) {\r",
								"        // Sidebar\r",
								"        blockRunningRow.getContent().forEach(function (data) {\r",
								"            if (data.sId === `but${id}`) {\r",
								"                data.addStyleClass('nepIconActive');\r",
								"            } else {\r",
								"                data.removeStyleClass('nepIconActive');\r",
								"            }\r",
								"        });\r",
								"\r",
								"        // Header Icons\r",
								"        AppCacheShellOpenApps.getItems().forEach(function (data) {\r",
								"            if (data.sId === `butTop${id}`) {\r",
								"                data.addStyleClass('nepTopMenuActive');\r",
								"            } else {\r",
								"                data.removeStyleClass('nepTopMenuActive');\r",
								"            }\r",
								"        });\r",
								"    },\r",
								"\r",
								"    buildGroupHeader: function (dataCat) {\r",
								"        // unique CSS class for this header\r",
								"        let id = `${nepPrefix()}CatHeader${dataCat.id}`;\r",
								"\r",
								"        let panel = new sap.m.Panel(`${sectionPrefix()}${dataCat.id}`, {\r",
								"            backgroundDesign: 'Transparent',\r",
								"            width: '100%'\r",
								"        }).addStyleClass('nepCatPanel ' + id + ' sapUiNoContentPadding');\r",
								"\r",
								"        if (dataCat.styleClass) panel.addStyleClass(dataCat.styleClass);\r",
								"\r",
								"        // fixes aria-labelledby\r",
								"        let headerToolbar = new sap.m.Toolbar('navBarToolbar' + dataCat.id, {\r",
								"            visible: false\r",
								"        });\r",
								"        panel.setHeaderToolbar(headerToolbar);\r",
								"\r",
								"        let vbox = new sap.m.VBox(nepId(), {\r",
								"            alignItems: 'Start', //dataCat.titleAlignment || 'Start',\r",
								"        }).addStyleClass('nepCatTitleLayout');\r",
								"        panel.addContent(vbox);\r",
								"\r",
								"        vbox.addItem(new sap.m.Title(nepId(), {\r",
								"            level: 'H1',\r",
								"            text: sap.n.Launchpad.translateTile('title', dataCat)\r",
								"        }).addStyleClass('nepCatTitle'));\r",
								"        panel.addStyleClass('nepCatTitleLayoutTitle');\r",
								"\r",
								"        if (dataCat.subTitle) {\r",
								"            vbox.addItem(new sap.m.Title(nepId(), {\r",
								"                level: 'H3',\r",
								"                text: sap.n.Launchpad.translateTile('subTitle', dataCat)\r",
								"            }).addStyleClass('nepCatSubTitle'));\r",
								"            panel.addStyleClass('nepCatTitleLayoutSubTitle');\r",
								"        }\r",
								"\r",
								"        return panel;\r",
								"    },\r",
								"\r",
								"    buildGroupMessage: function (dataCat) {\r",
								"        let message = new sap.m.MessageStrip(nepId(), {\r",
								"            type: dataCat.configMessage.type || 'None',\r",
								"            text: dataCat.configMessage.text || '',\r",
								"            showIcon: dataCat.configMessage.showIcon || false,\r",
								"            customIcon: dataCat.configMessage.icon || '',\r",
								"            showCloseButton: dataCat.configMessage.showCloseButton || false,\r",
								"            enableFormattedText: true,\r",
								"        });\r",
								"\r",
								"        message.addStyleClass('nepTileCards');\r",
								"        return message;\r",
								"    },\r",
								"\r",
								"    // TILES\r",
								"    buildTileApplication: function (dataTile, tileWidth, dataCat) {\r",
								"        let oBlockIcon;\r",
								"\r",
								"        let oBlockCell = new sap.ui.layout.BlockLayoutCell(nepId(), {\r",
								"            width: tileWidth,\r",
								"            title: sap.n.Launchpad.translateTile('title', dataTile),\r",
								"            titleAlignment: dataTile.titleAlignment || 'Begin',\r",
								"            titleLevel: dataTile.titleLevel || 'Auto',\r",
								"        }).addStyleClass('nepTileApplication');\r",
								"\r",
								"        sap.n.Launchpad.setBackgroundShade(dataTile, dataCat, oBlockCell);\r",
								"\r",
								"        let oBlockContentParent = new sap.m.VBox(nepId(), {\r",
								"            justifyContent: 'SpaceBetween',\r",
								"            height: 'calc(100% - 25px)'\r",
								"        });\r",
								"\r",
								"        let oBlockContentTop = new sap.m.VBox(nepId());\r",
								"\r",
								"        oBlockCell.addContent(oBlockContentParent);\r",
								"        oBlockContentParent.addItem(oBlockContentTop);\r",
								"\r",
								"        // SubTitle - Box\r",
								"        let oBlockContent = new sap.m.HBox(nepId(), {\r",
								"            width: '100%',\r",
								"            justifyContent: 'SpaceBetween'\r",
								"        });\r",
								"\r",
								"        // Reverse if title at End\r",
								"        if (dataTile.titleAlignment === 'End') oBlockContent.setDirection('RowReverse');\r",
								"\r",
								"        oBlockContent.addStyleClass('sapUiSmallMarginBottom');\r",
								"        oBlockContentTop.addItem(oBlockContent);\r",
								"\r",
								"        // SubTitle\r",
								"        if (dataTile.subTitle) {\r",
								"            let oBlockInfo = new sap.m.Text(nepId(), {\r",
								"                text: sap.n.Launchpad.translateTile('subTitle', dataTile)\r",
								"            });\r",
								"\r",
								"            oBlockContent.addItem(oBlockInfo);\r",
								"            oBlockInfo.addStyleClass('nepTileSubTitle');\r",
								"        }\r",
								"\r",
								"        if (dataTile.icon) {\r",
								"\r",
								"            if (dataTile.icon.indexOf('sap-icon') > -1) {\r",
								"                oBlockIcon = new sap.ui.core.Icon(nepId(), {\r",
								"                    src: dataTile.icon,\r",
								"                    size: '1.5rem',\r",
								"                    useIconTooltip: false\r",
								"                });\r",
								"            } else {\r",
								"                oBlockIcon = new sap.m.Image(nepId(), {\r",
								"                    src: dataTile.icon,\r",
								"                    width: '38px',\r",
								"                    densityAware: false,\r",
								"                });\r",
								"            }\r",
								"\r",
								"            if (dataTile.titleAlignment === 'End') {\r",
								"                oBlockIcon.addStyleClass('nepTileIconLeft');\r",
								"            } else {\r",
								"                oBlockIcon.addStyleClass('nepTileIconRight');\r",
								"            }\r",
								"\r",
								"            oBlockContent.addItem(oBlockIcon);\r",
								"        }\r",
								"\r",
								"        let oBlockContentApp = new sap.m.Panel(nepId(), {\r",
								"            backgroundDesign: 'Transparent'\r",
								"        });\r",
								"        oBlockContentApp.addStyleClass('sapUiNoContentPadding');\r",
								"\r",
								"        oBlockContentTop.addItem(oBlockContentApp);\r",
								"\r",
								"        // Load Application\r",
								"        if (dataTile.tileApplication) {\r",
								"            AppCache.Load(dataTile.tileApplication, {\r",
								"                parentObject: oBlockContentApp,\r",
								"                startParams: dataTile.actionParameters,\r",
								"                sapICFNode: dataTile.sapICFNode\r",
								"            });\r",
								"        }\r",
								"\r",
								"        // Actions \r",
								"        sap.n.Launchpad.buildTileAction(dataTile, oBlockContentParent, oBlockCell, dataCat);\r",
								"\r",
								"        return oBlockCell;\r",
								"    },\r",
								"\r",
								"    buildTileSubHeader: function (dataTile, tileWidth, dataCat) {\r",
								"        let oBlockCell = new sap.ui.layout.BlockLayoutCell(nepId(), {\r",
								"            width: tileWidth,\r",
								"            title: sap.n.Launchpad.translateTile('title', dataTile),\r",
								"            titleAlignment: dataTile.titleAlignment || 'Begin',\r",
								"        });\r",
								"\r",
								"        sap.n.Launchpad.setBackgroundShade(dataTile, dataCat, oBlockCell);\r",
								"\r",
								"        if (dataTile.image) {\r",
								"            let imageUrl;\r",
								"            let inlineStyle = new sap.ui.core.HTML(nepId());\r",
								"\r",
								"            if (AppCache.isMobile) {\r",
								"                imageUrl = dataTile.imageData;\r",
								"            } else {\r",
								"                imageUrl = AppCache.Url + dataTile.image;\r",
								"            }\r",
								"\r",
								"            inlineStyle.setDOMContent(`\r",
								"                <style>\r",
								"                .tileImage${dataTile.id} {\r",
								"                    background-image: url('${imageUrl}');\r",
								"                    background-size: 100% auto;\r",
								"                    background-position: 0 80%;\r",
								"                }\r",
								"                </style>\r",
								"            `);\r",
								"\r",
								"            oBlockCell.addStyleClass('tileImage' + dataTile.id);\r",
								"            oBlockCell.addContent(inlineStyle);\r",
								"        }\r",
								"\r",
								"        let oHeaderInfoText = new sap.m.Text(nepId(), {\r",
								"            textAlign: 'Begin',\r",
								"            width: '100%',\r",
								"            text: sap.n.Launchpad.translateTile('subTitle', dataTile),\r",
								"        });\r",
								"        oBlockCell.addContent(oHeaderInfoText);\r",
								"\r",
								"        return oBlockCell;\r",
								"    },\r",
								"\r",
								"    buildHeaderCss: function (dataCat) {\r",
								"        let css = '';\r",
								"        let imageUrl;\r",
								"        let id = `${nepPrefix()}CatHeader${dataCat.id}`;\r",
								"        let borderWidth = dataCat.headBorderWidth || '3px';\r",
								"        let backroundPosition, backroundSize, backgroundHeight;\r",
								"\r",
								"        const idClass = `.${id}`;\r",
								"        if (dataCat.headColor) css += `${idClass} { background-color: ${dataCat.headColor}; }`;\r",
								"        if (dataCat.headTxtClr) css += `${idClass} .nepCatTitle.sapMTitle { color: ${dataCat.headTxtClr} !important; }`;\r",
								"        if (dataCat.subheadTxtClr) css += `${idClass} .nepCatSubTitle.sapMTitle { color: ${dataCat.subheadTxtClr} !important; }`;\r",
								"        if (dataCat.headBorderClr) css += `${idClass} { border-bottom: ${borderWidth} solid ${dataCat.headBorderClr}; }`;\r",
								"\r",
								"        if (dataCat.imageMobile) {\r",
								"            imageUrl = AppCache.Url + dataCat.imageMobile;\r",
								"\r",
								"            backroundPosition = dataCat.imageMobilePlacement || 'center center';\r",
								"            backroundSize = dataCat.imageMobileSize || 'cover';\r",
								"            backgroundRepeat = dataCat.imageMobileRepeat || 'no-repeat';\r",
								"            backgroundHeight = dataCat.imageMobileHeight || '82px';\r",
								"\r",
								"            css += `\r",
								"                .nepGridSmall .${id} .sapMPanelContent,\r",
								"                .nepGridXSmall .${id} .sapMPanelContent {\r",
								"                    background: url('${imageUrl}');\r",
								"                    background-repeat: no-repeat;';\r",
								"                    background-position: ${backroundPosition};\r",
								"                    background-size: ${backroundSize};\r",
								"                    height: ${backgroundHeight};\r",
								"                }\r",
								"            `;\r",
								"        }\r",
								"\r",
								"        if (dataCat.imageTablet) {\r",
								"            imageUrl = AppCache.Url + dataCat.imageTablet;\r",
								"\r",
								"            backroundPosition = dataCat.imageTabletPlacement || 'center center';\r",
								"            backroundSize = dataCat.imageTabletSize || 'cover';\r",
								"            backgroundRepeat = dataCat.imageTabletRepeat || 'no-repeat';\r",
								"            backgroundHeight = dataCat.imageTabletHeight || '82px';\r",
								"\r",
								"            css += `\r",
								"                .nepGridMedium .${id} .sapMPanelContent {\r",
								"                    background: url('${imageUrl}');\r",
								"                    background-position: ${backroundPosition};\r",
								"                    background-size: ${backroundSize};\r",
								"                    height: ${backgroundHeight};\r",
								"                }\r",
								"            `;\r",
								"        }\r",
								"\r",
								"        if (dataCat.image) {\r",
								"            // TODO - Offline images\r",
								"            imageUrl = AppCache.Url + dataCat.image;\r",
								"\r",
								"            backroundPosition = dataCat.imagePlacement || 'center center';\r",
								"            backroundSize = dataCat.imageSize || 'cover';\r",
								"            backgroundRepeat = dataCat.imageRepeat || 'no-repeat';\r",
								"            backgroundHeight = dataCat.imageHeight || '82px';\r",
								"\r",
								"            css += `\r",
								"                .${id} .sapMPanelContent {\r",
								"                    background: url('${imageUrl}');\r",
								"                    background-position: ${backroundPosition};\r",
								"                    background-size: ${backroundSize};\r",
								"                    height: ${backgroundHeight} !important;\r",
								"                }\r",
								"            `;\r",
								"        }\r",
								"\r",
								"        return css;\r",
								"    },\r",
								"\r",
								"    buildContentCss: function () {\r",
								"        let css = '';\r",
								"\r",
								"        // CSS - Tile Groups\r",
								"        modelAppCacheCategory.oData.forEach(function (dataCat) {\r",
								"            css += sap.n.Launchpad.buildHeaderCss(dataCat);\r",
								"            dataCat.tilegroups.forEach(function (data) {\r",
								"                let dataCatChild = ModelData.FindFirst(AppCacheCategory, 'id', data.id);\r",
								"                if (!dataCatChild) dataCatChild = ModelData.FindFirst(AppCacheCategoryChild, 'id', data.id);\r",
								"                if (dataCatChild) css += sap.n.Launchpad.buildHeaderCss(dataCatChild);\r",
								"            });\r",
								"        });\r",
								"\r",
								"        // CSS - Tiles\r",
								"        css += sap.n.Launchpad.buildTileCss();\r",
								"        return css;\r",
								"    },\r",
								"\r",
								"    buildTileCss: function () {\r",
								"        let css = '';\r",
								"        Array.isArray(modelAppCacheTiles.oData) && modelAppCacheTiles.oData.forEach(function (dataTile) {\r",
								"            // Background Image\r",
								"            if (dataTile.image) {\r",
								"                let imageUrl = AppCache.Url + dataTile.image;\r",
								"                if (AppCache.isMobile) imageUrl = dataTile.imageData || imageUrl;\r",
								"\r",
								"                let repeat = (!!dataTile.imageRepeat) ? dataTile.imageRepeat : 'no-repeat';\r",
								"                let size = (!!dataTile.imageSize) ? dataTile.imageSize : 'cover';\r",
								"                let position = (!!dataTile.imagePlacement) ? dataTile.imagePlacement : 'center';\r",
								"\r",
								"                if (dataTile.imagePosition === 'cover') {\r",
								"                    css += `\r",
								"                        .tile${dataTile.id} {\r",
								"                            background-image: url('${imageUrl}');\r",
								"                            background-repeat: ${repeat};\r",
								"                            background-size: ${size};\r",
								"                            background-position: ${position};\r",
								"                        }\r",
								"                    `;\r",
								"                } else {\r",
								"                    const sel = (dataTile.imagePosition === 'top') ? 'Top' : 'Inline';\r",
								"                    css += `\r",
								"                        .tile${sel}Image${dataTile.id} {\r",
								"                            max-height: 100%;\r",
								"                            object-fit: ${size};\r",
								"                            object-position: ${position};\r",
								"                        }\r",
								"                    `;\r",
								"                }\r",
								"            }\r",
								"        });\r",
								"\r",
								"        return css;\r",
								"    },\r",
								"\r",
								"    setBackgroundShade: function (dataTile, dataCat, oBlockCell, isIcon) {\r",
								"        // Cards Handling\r",
								"        if (sap.n.Launchpad.cardsAvailable) {\r",
								"            sap.n.Card.setBackgroundShade(dataTile, dataCat, oBlockCell, isIcon);\r",
								"            return;\r",
								"        }\r",
								"\r",
								"        let backgroundColor, backgroundShade;\r",
								"\r",
								"        if (typeof dataCat === 'undefined') dataCat = {};\r",
								"\r",
								"        // Styleclasses \r",
								"        if (!isIcon) oBlockCell.addStyleClass('nepTile');\r",
								"        if (dataCat.styleClass) oBlockCell.addStyleClass(dataCat.styleClass);\r",
								"        if (dataTile.styleClass) oBlockCell.addStyleClass(dataTile.styleClass);\r",
								"        if (dataCat.enableCards && !isIcon) oBlockCell.addStyleClass('nepTileCards');\r",
								"\r",
								"        if (dataCat.backgroundType === 'Default' || dataCat.backgroundType === 'cards') {\r",
								"            if (dataCat.enableShadeCalc) {\r",
								"                switch (sap.n.Launchpad.backgroundShade) {\r",
								"                    case 'ShadeA':\r",
								"                        sap.n.Launchpad.backgroundShade = 'ShadeB';\r",
								"                        break;\r",
								"\r",
								"                    case 'ShadeB':\r",
								"                        sap.n.Launchpad.backgroundShade = 'ShadeC';\r",
								"                        break;\r",
								"\r",
								"                    case 'ShadeC':\r",
								"                        sap.n.Launchpad.backgroundShade = 'ShadeD';\r",
								"                        break;\r",
								"\r",
								"                    default:\r",
								"                        sap.n.Launchpad.backgroundShade = 'ShadeA';\r",
								"                        break;\r",
								"                }\r",
								"            } else {\r",
								"                sap.n.Launchpad.backgroundShade = dataCat.backgroundShade;\r",
								"            }\r",
								"\r",
								"            backgroundColor = dataTile.backgroundColor || dataCat.backgroundColor || '';\r",
								"            backgroundShade = dataTile.backgroundShade || sap.n.Launchpad.backgroundShade || 'ShadeA';\r",
								"\r",
								"        } else if (dataCat.backgroundType === 'Dashboard' && isIcon) {\r",
								"            backgroundColor = '';\r",
								"            backgroundShade = sap.n.Launchpad.backgroundShade;\r",
								"        }\r",
								"\r",
								"        if (backgroundColor) oBlockCell.setBackgroundColorSet(backgroundColor);\r",
								"        if (backgroundShade) oBlockCell.setBackgroundColorShade(backgroundShade);\r",
								"\r",
								"    },\r",
								"\r",
								"    buildTileDefault: function (dataTile, tileWidth, dataCat, isMosedUsed) {\r",
								"        // Top \r",
								"        let oBlockCell = new sap.ui.layout.BlockLayoutCell(nepId(), {\r",
								"            title: sap.n.Launchpad.translateTile('title', dataTile),\r",
								"            titleAlignment: dataTile.titleAlignment || 'Begin',\r",
								"            titleLevel: dataTile.titleLevel || 'Auto',\r",
								"            width: tileWidth,\r",
								"        }).addStyleClass('nepTile');\r",
								"\r",
								"        sap.n.Launchpad.setBackgroundShade(dataTile, dataCat, oBlockCell);\r",
								"\r",
								"        let oBlockContentParent = new sap.m.VBox(nepId(), {\r",
								"            justifyContent: 'SpaceBetween',\r",
								"            height: 'calc(100% - 25px)'\r",
								"        });\r",
								"\r",
								"        let oBlockContentTop = new sap.m.VBox(nepId());\r",
								"\r",
								"        oBlockCell.addContent(oBlockContentParent);\r",
								"        oBlockContentParent.addItem(oBlockContentTop);\r",
								"\r",
								"        // SubTitle - Box\r",
								"        let oBlockContent = new sap.m.HBox(nepId(), {\r",
								"            width: '100%',\r",
								"            justifyContent: 'SpaceBetween'\r",
								"        });\r",
								"\r",
								"        // Reverse if title at End\r",
								"        if (dataTile.titleAlignment === 'End') oBlockContent.setDirection('RowReverse');\r",
								"\r",
								"        oBlockContent.addStyleClass('sapUiSmallMarginBottom');\r",
								"        oBlockContentTop.addItem(oBlockContent);\r",
								"\r",
								"        // SubTitle\r",
								"        if (dataTile.subTitle) {\r",
								"            let oBlockInfo = new sap.m.Text(nepId(), {\r",
								"                text: sap.n.Launchpad.translateTile('subTitle', dataTile)\r",
								"            });\r",
								"\r",
								"            oBlockContent.addItem(oBlockInfo);\r",
								"            oBlockInfo.addStyleClass('nepTileSubTitle');\r",
								"        }\r",
								"\r",
								"        if (dataTile.icon) {\r",
								"            let oBlockIcon;\r",
								"            if (dataTile.icon.indexOf('sap-icon') > -1) {\r",
								"                oBlockIcon = new sap.ui.core.Icon(nepId(), {\r",
								"                    src: dataTile.icon,\r",
								"                    size: '1.5rem',\r",
								"                    useIconTooltip: false\r",
								"                });\r",
								"            } else {\r",
								"                oBlockIcon = new sap.m.Image(nepId(), {\r",
								"                    src: dataTile.icon,\r",
								"                    width: '38px',\r",
								"                    densityAware: false,\r",
								"                });\r",
								"            }\r",
								"\r",
								"            if (dataTile.titleAlignment === 'End') {\r",
								"                oBlockIcon.addStyleClass('nepTileIconLeft');\r",
								"            } else {\r",
								"                oBlockIcon.addStyleClass('nepTileIconRight');\r",
								"            }\r",
								"\r",
								"            oBlockContent.addItem(oBlockIcon);\r",
								"        }\r",
								"\r",
								"        // With Description\r",
								"        if (dataTile.type === 'carddesc') {\r",
								"            let textDescription = new sap.m.Text(nepId(), {\r",
								"                text: sap.n.Launchpad.translateTile('description', dataTile)\r",
								"            });\r",
								"            textDescription.addStyleClass('nepTileDescription');\r",
								"            oBlockContentTop.addItem(textDescription);\r",
								"        }\r",
								"\r",
								"        if (!isMosedUsed) {\r",
								"            // Image - background or image card\r",
								"            if (dataTile.image) {\r",
								"                let imageUrl;\r",
								"                let inlineStyle = new sap.ui.core.HTML(nepId());\r",
								"\r",
								"                if (AppCache.isMobile) {\r",
								"                    imageUrl = dataTile.imageData;\r",
								"                } else {\r",
								"                    imageUrl = AppCache.Url + dataTile.image;\r",
								"                }\r",
								"\r",
								"                inlineStyle.setDOMContent(`\r",
								"                    <style>\r",
								"                    .tileImage${dataTile.id} {\r",
								"                        background-image: url('${imageUrl}');\r",
								"                        background-size: cover;\r",
								"                        background-position: 0 80%;\r",
								"                    }\r",
								"                    </style>\r",
								"                `);\r",
								"\r",
								"                oBlockCell.addStyleClass('tileImage' + dataTile.id);\r",
								"                oBlockCell.addContent(inlineStyle);\r",
								"            }\r",
								"        }\r",
								"\r",
								"        // Actions\r",
								"        sap.n.Launchpad.buildTileAction(dataTile, oBlockContentParent, oBlockCell, dataCat);\r",
								"        return oBlockCell\r",
								"    },\r",
								"\r",
								"    translateTile: function (field, dataTile) {\r",
								"        if (!dataTile) return;\r",
								"        if (dataTile[field] === null || dataTile[field] === 'null' || typeof dataTile[field] === 'undefined') return '';\r",
								"\r",
								"        let text = dataTile[field];\r",
								"\r",
								"        if (!dataTile.translation || dataTile.translation === '[]' || dataTile.translation.length === 0) return text;\r",
								"\r",
								"        dataTile.translation.forEach(function (data) {\r",
								"            if (data.language === AppCache.userInfo.language) text = data[field];\r",
								"        });\r",
								"\r",
								"        return text;\r",
								"    },\r",
								"\r",
								"    buildTileAction: function (dataTile, parent, oBlockCell, dataCat) {\r",
								"        let buttonStyle = sap.n.Launchpad.buildTileActionStyle(oBlockCell);\r",
								"        let supportedBrowser = true;\r",
								"        let openEnabled = true;\r",
								"\r",
								"        let oBlockContent = new sap.m.HBox(nepId());\r",
								"        oBlockContent.addStyleClass('nepTileAction sapUiSizeCompact');\r",
								"\r",
								"        // Check Offline Mode -> Disable Open button \r",
								"        if (AppCache.isOffline) {\r",
								"            if (dataTile.actionURL) openEnabled = false;\r",
								"            if (dataTile.type === 'storeitem') openEnabled = false;\r",
								"\r",
								"            if (dataTile.actionApplication) {\r",
								"                let app = ModelData.FindFirst(AppCacheData,\r",
								"                    ['application', 'language', 'appPath'],\r",
								"                    [dataTile.actionApplication.toUpperCase(),\r",
								"                    AppCache.userInfo.language,\r",
								"                    dataTile.urlApplication || '']);\r",
								"                if (!app) openEnabled = false;\r",
								"            }\r",
								"\r",
								"            if (dataTile.actionWebApp) {\r",
								"                if (dataTile.openWindow) {\r",
								"                    openEnabled = false;\r",
								"                } else {\r",
								"                    let viewName = 'webapp:' + dataTile.actionWebApp + ':' + dataTile.urlApplication;\r",
								"\r",
								"                    // Get App from Cache\r",
								"                    if (typeof p9Database !== 'undefined' && p9Database !== null) {\r",
								"                        p9GetView(viewName.toUpperCase()).then(function (viewData) {\r",
								"                            if (viewData.length < 10) openEnabled = false;\r",
								"                        });\r",
								"                    } else {\r",
								"                        if (!sapStorageGet(viewName.toUpperCase())) openEnabled = false;\r",
								"                    }\r",
								"                }\r",
								"            }\r",
								"        }\r",
								"\r",
								"        // Check usage of Remote Systems \r",
								"        if (dataTile.urlApplication && !AppCache.userInfo.azureToken) openEnabled = false;\r",
								"\r",
								"        // Supported Browsers\r",
								"        if (sap.ui.Device.os.name === 'win' && dataTile.browserBlockWin && dataTile.browserBlockWin !== '[]' && dataTile.browserBlockWin.indexOf(sap.ui.Device.browser.name) === -1) {\r",
								"            supportedBrowser = false;\r",
								"        }\r",
								"\r",
								"        if (sap.ui.Device.os.name === 'mac' && dataTile.browserBlockMac && dataTile.browserBlockWin !== '[]' && dataTile.browserBlockMac.indexOf(sap.ui.Device.browser.name) === -1) {\r",
								"            supportedBrowser = false;\r",
								"        }\r",
								"\r",
								"        if (dataTile.actionApplication || dataTile.actionWebApp || dataTile.actionURL || dataTile.actiongroup || dataTile.type === 'storeitem') {\r",
								"            if (supportedBrowser) {\r",
								"                if (dataTile.blackoutEnabled) {\r",
								"                    let butStart = new sap.m.Button(nepId(), {\r",
								"                        text: dataTile.blackoutText,\r",
								"                        type: 'Emphasized',\r",
								"                        press: function (oEvent) {\r",
								"                            descBlackout.editor.setData(dataTile.blackoutDescription);\r",
								"                            popBlackout.openBy(this);\r",
								"                        }\r",
								"                    });\r",
								"\r",
								"                    butStart.addStyleClass('nepTileAction sapUiTinyMarginEnd nepTileBlackout ' + buttonStyle);\r",
								"                } else {\r",
								"                    if (dataTile.openClickTile) {\r",
								"                        if (openEnabled) {\r",
								"                            oBlockCell.attachBrowserEvent('click', function (oEvent) {\r",
								"                                setTimeout(function () {\r",
								"                                    if (sap.n.Launchpad.favInProcess) {\r",
								"                                        sap.n.Launchpad.favInProcess = false;\r",
								"                                    } else {\r",
								"                                        sap.n.Launchpad.HandleTilePress(dataTile, dataCat);\r",
								"                                    }\r",
								"                                }, 50);\r",
								"                            });\r",
								"\r",
								"                            oBlockCell.addStyleClass('nepNavBarTile');\r",
								"                        }\r",
								"\r",
								"                    } else {\r",
								"                        let butStart = new sap.m.Button(nepId(), {\r",
								"                            text: AppCache_tOpen.getText(),\r",
								"                            type: 'Emphasized',\r",
								"                            enabled: openEnabled,\r",
								"                            press: function (oEvent) {\r",
								"                                sap.n.Launchpad.HandleTilePress(dataTile, dataCat);\r",
								"                            }\r",
								"                        });\r",
								"\r",
								"                        butStart.addStyleClass('nepTileAction sapUiTinyMarginEnd ' + buttonStyle);\r",
								"                    }\r",
								"                }\r",
								"            } else {\r",
								"                let butStart = new sap.m.Button(nepId(), {\r",
								"                    text: AppCache_tIncompatible.getText(),\r",
								"                    iconFirst: false,\r",
								"                    enabled: openEnabled,\r",
								"                    type: 'Emphasized',\r",
								"                    icon: 'sap-icon://sys-help',\r",
								"                    press: function (oEvent) {\r",
								"                        let browsers;\r",
								"\r",
								"                        if (sap.ui.Device.os.name === 'win') browsers = JSON.parse(dataTile.browserBlockWin);\r",
								"                        if (sap.ui.Device.os.name === 'mac') browsers = JSON.parse(dataTile.browserBlockMac);\r",
								"\r",
								"                        const m = {\r",
								"                            'cr': 'Chrome',\r",
								"                            'ed': 'Edge',\r",
								"                            'ff': 'Firefox',\r",
								"                            'ie': 'Internet Explorer',\r",
								"                            'op': 'Opera',\r",
								"                            'sf': 'Safari',\r",
								"                        };\r",
								"\r",
								"                        let array = browsers.map(function (k) {\r",
								"                            return { name: m[k] };\r",
								"                        });\r",
								"                        array.sort(sort_by('name'));\r",
								"                        modellistSupportedBrowsers.setData(array);\r",
								"                        popSupportedBrowsers.openBy(this);\r",
								"                    }\r",
								"                });\r",
								"\r",
								"                butStart.addStyleClass('nepTileAction nepTileBlocked sapUiTinyMarginEnd ' + buttonStyle);\r",
								"                oBlockContent.addItem(butStart);\r",
								"            }\r",
								"\r",
								"            let butFavAdd = new sap.m.Button(`${nepPrefix()}FavAdd${dataTile.id}`, {\r",
								"                tooltip: AppCache_tAddFav.getText(),\r",
								"                icon: 'sap-icon://unfavorite',\r",
								"                type: 'Emphasized',\r",
								"                press: function (oEvent) {\r",
								"                    sap.n.Launchpad.favInProcess = true;\r",
								"\r",
								"                    ModelData.Update(AppCacheTilesFav, 'id', dataTile.id, dataTile);\r",
								"                    setCacheAppCacheTilesFav();\r",
								"\r",
								"                    butFavDel.setVisible(true);\r",
								"                    butFavAdd.setVisible(false);\r",
								"\r",
								"                    sap.n.Launchpad.handleFavRedraw();\r",
								"                }\r",
								"            });\r",
								"\r",
								"            butFavAdd.addStyleClass('nepTileAction ' + buttonStyle);\r",
								"\r",
								"            let butFavDel = new sap.m.Button(`${nepPrefix()}FavDel${dataTile.id}`, {\r",
								"                tooltip: AppCache_tDelFav.getText(),\r",
								"                icon: 'sap-icon://favorite',\r",
								"                type: 'Emphasized',\r",
								"                press: function (oEvent) {\r",
								"                    sap.n.Launchpad.favInProcess = true;\r",
								"                    sap.n.Utils.message({\r",
								"                        title: AppCache_tFavTitle.getText(),\r",
								"                        intro: AppCache_tFavConfirm.getText(),\r",
								"                        text1: AppCache_tDelFavConfirm.getText(),\r",
								"                        state: 'Warning',\r",
								"                        acceptText: AppCache_tDelFavRemove.getText(),\r",
								"                        onAccept: function (oAction) {\r",
								"                            ModelData.Delete(AppCacheTilesFav, 'id', dataTile.id);\r",
								"                            setCacheAppCacheTilesFav();\r",
								"\r",
								"                            let butFavAdd = sap.ui.getCore().byId(`${nepPrefix()}FavAdd${dataTile.id}`);\r",
								"                            if (butFavAdd) butFavAdd.setVisible(true);\r",
								"\r",
								"                            sap.n.Launchpad.handleFavRedraw();\r",
								"                        }\r",
								"                    });\r",
								"                }\r",
								"            });\r",
								"\r",
								"            butFavDel.addStyleClass('nepTileAction ' + buttonStyle);\r",
								"\r",
								"            // Fav\r",
								"            let rec = ModelData.Find(AppCacheTilesFav, 'id', dataTile.id);\r",
								"\r",
								"            if (rec.length) {\r",
								"                butFavAdd.setVisible(false);\r",
								"                butFavDel.setVisible(true);\r",
								"            } else {\r",
								"                butFavAdd.setVisible(true);\r",
								"                butFavDel.setVisible(false);\r",
								"            }\r",
								"\r",
								"            if (!dataTile.openClickTile || dataTile.blackoutEnabled) oBlockContent.addItem(butStart);\r",
								"\r",
								"            if (!AppCache.isPublic && sap.n.Launchpad.enableFav && !AppCache.isOffline) {\r",
								"                oBlockContent.addItem(butFavAdd);\r",
								"                oBlockContent.addItem(butFavDel);\r",
								"            }\r",
								"\r",
								"        }\r",
								"\r",
								"        // Help \r",
								"        if (dataTile.helpEnabled) {\r",
								"            let butHelp = new sap.m.Button(nepId(), {\r",
								"                tooltip: AppCache_tHelp.getText(),\r",
								"                icon: 'sap-icon://sys-help',\r",
								"                type: 'Transparent',\r",
								"                press: function (oEvent) {\r",
								"                    descBlackout.editor.setData(dataTile.helpText);\r",
								"                    popBlackout.openBy(this);\r",
								"                }\r",
								"            });\r",
								"\r",
								"            oBlockContent.addItem(butHelp);\r",
								"        }\r",
								"\r",
								"\r",
								"        // Footer\r",
								"        if (dataTile.footer) {\r",
								"            let boxFooter = new sap.m.HBox(nepId(), {\r",
								"                width: '100%',\r",
								"                justifyContent: 'End',\r",
								"                alignContent: 'Center'\r",
								"            });\r",
								"            let footer = new sap.m.Text(nepId(), {\r",
								"                text: sap.n.Launchpad.translateTile('footer', dataTile)\r",
								"            });\r",
								"            footer.addStyleClass('nepTileFooter');\r",
								"            boxFooter.addItem(footer);\r",
								"            oBlockContent.addItem(boxFooter);\r",
								"\r",
								"        }\r",
								"\r",
								"        parent.addItem(oBlockContent);\r",
								"    },\r",
								"\r",
								"    buildTileActionStyle: function (oBlockCell) {\r",
								"        let color = oBlockCell.getBackgroundColorSet();\r",
								"\r",
								"        if (color) {\r",
								"            color = color.split('ColorSet')[1];\r",
								"        } else {\r",
								"            color = 5;\r",
								"        }\r",
								"        return 'nepTileAction' + color;\r",
								"    },\r",
								"\r",
								"    buildTileIntegrationCard: function (dataTile, tileWidth, dataCat) {\r",
								"        let oBlockCell = new sap.ui.layout.BlockLayoutCell(nepId(), {\r",
								"            width: tileWidth,\r",
								"        }).addStyleClass('nepTileIntegartionCard');\r",
								"\r",
								"        oBlockCell.addStyleClass('sapUiNoContentPadding');\r",
								"\r",
								"        sap.n.Launchpad.setBackgroundShade(dataTile, dataCat, oBlockCell);\r",
								"\r",
								"        let oBlockContentParent = new sap.m.VBox(nepId(), {\r",
								"            justifyContent: 'SpaceBetween',\r",
								"            height: 'calc(100% - 25px)'\r",
								"        });\r",
								"\r",
								"        let oBlockContentTop = new sap.m.VBox(nepId());\r",
								"        let oBlockContentAction = new sap.m.VBox(nepId());\r",
								"\r",
								"        oBlockContentAction.addStyleClass('sapUiContentPadding');\r",
								"\r",
								"        oBlockCell.addContent(oBlockContentParent);\r",
								"        oBlockContentParent.addItem(oBlockContentTop);\r",
								"        oBlockContentParent.addItem(oBlockContentAction);\r",
								"\r",
								"        let objectId = 'intcard' + ModelData.genID();\r",
								"        let pageId = 'page' + dataCat.id;\r",
								"\r",
								"        let intCard = new sap.ui.integration.widgets.Card(objectId, {\r",
								"            manifest: dataTile.dataUrl,\r",
								"        });\r",
								"\r",
								"        oBlockContentTop.addItem(intCard);\r",
								"\r",
								"        // Pull Interval\r",
								"        if (dataTile.dataInterval && dataTile.dataInterval !== '0' && !sap.n.Launchpad.Timers[objectId]) {\r",
								"\r",
								"            sap.n.Launchpad.Timers[objectId] = {\r",
								"                timer: setInterval(function () {\r",
								"                    if (sap.n.Launchpad.Timers[objectId].pageId !== AppCacheNav.getCurrentPage().sId) return;\r",
								"\r",
								"                    let card = sap.ui.getCore().byId(objectId);\r",
								"                    if (card) card.refresh();\r",
								"\r",
								"                }, dataTile.dataInterval * 1000),\r",
								"                pageId: pageId\r",
								"            };\r",
								"        }\r",
								"\r",
								"        // Actions\r",
								"        sap.n.Launchpad.buildTileAction(dataTile, oBlockContentAction, oBlockCell, dataCat);\r",
								"        return oBlockCell;\r",
								"    },\r",
								"\r",
								"    buildTileHighchart: function (dataTile, tileWidth, dataCat) {\r",
								"        let oBlockCell = new sap.ui.layout.BlockLayoutCell(nepId(), {\r",
								"            title: sap.n.Launchpad.translateTile('title', dataTile),\r",
								"            titleAlignment: dataTile.titleAlignment || 'Begin',\r",
								"            titleLevel: dataTile.titleLevel || 'Auto',\r",
								"            width: tileWidth,\r",
								"        }).addStyleClass('nepTileHighchart');\r",
								"\r",
								"        sap.n.Launchpad.setBackgroundShade(dataTile, dataCat, oBlockCell);\r",
								"\r",
								"        let oBlockContentParent = new sap.m.VBox(nepId(), {\r",
								"            justifyContent: 'SpaceBetween',\r",
								"            height: 'calc(100% - 25px)'\r",
								"        });\r",
								"\r",
								"        let oBlockContentTop = new sap.m.VBox(nepId());\r",
								"\r",
								"        oBlockCell.addContent(oBlockContentParent);\r",
								"        oBlockContentParent.addItem(oBlockContentTop);\r",
								"\r",
								"        // SubTitle - Box\r",
								"        let oBlockContent = new sap.m.HBox(nepId(), {\r",
								"            width: '100%',\r",
								"            justifyContent: 'SpaceBetween'\r",
								"        });\r",
								"\r",
								"        // Reverse if title at End\r",
								"        if (dataTile.titleAlignment === 'End') oBlockContent.setDirection('RowReverse');\r",
								"\r",
								"        oBlockContent.addStyleClass('sapUiSmallMarginBottom');\r",
								"        oBlockContentTop.addItem(oBlockContent);\r",
								"\r",
								"        // SubTitle\r",
								"        if (dataTile.subTitle) {\r",
								"            let oBlockInfo = new sap.m.Text(nepId(), {\r",
								"                text: sap.n.Launchpad.translateTile('subTitle', dataTile)\r",
								"            });\r",
								"\r",
								"            oBlockContent.addItem(oBlockInfo);\r",
								"            oBlockInfo.addStyleClass('nepTileSubTitle');\r",
								"        }\r",
								"\r",
								"        if (dataTile.icon) {\r",
								"            let oBlockIcon;\r",
								"            if (dataTile.icon.indexOf('sap-icon') > -1) {\r",
								"                oBlockIcon = new sap.ui.core.Icon(nepId(), {\r",
								"                    src: dataTile.icon,\r",
								"                    size: '1.4rem',\r",
								"                    useIconTooltip: false\r",
								"                });\r",
								"            } else {\r",
								"                oBlockIcon = new sap.m.Image(nepId(), {\r",
								"                    src: dataTile.icon,\r",
								"                    width: '32px',\r",
								"                    densityAware: false,\r",
								"                });\r",
								"            }\r",
								"            oBlockContent.addItem(oBlockIcon);\r",
								"        }\r",
								"\r",
								"        let chartId = `chart${ModelData.genID()}`;\r",
								"        let pageId = `page${dataCat.id}`;\r",
								"\r",
								"        let oHighchart;\r",
								"        let oHighchartHTML = new sap.ui.core.HTML(nepId(), {\r",
								"            content: `<div id='${chartId}' style='height: 100%; width: 100%'></div>`,\r",
								"            afterRendering: function (oEvent) {\r",
								"                let chartData = localStorage.getItem('p9TileChart' + dataTile.id);\r",
								"                if (chartData) {\r",
								"                    let chartData = JSON.parse(chartData);\r",
								"                    if (!chartData.chart) chartData.chart = {};\r",
								"                    chartData.chart.renderTo = chartId;\r",
								"                    oHighchart = Highcharts.chart(chartData);\r",
								"                } else {\r",
								"                    oHighchart = Highcharts.chart({\r",
								"                        chart: {\r",
								"                            height: 100,\r",
								"                            renderTo: chartId,\r",
								"                            style: { fontFamily: '72' }\r",
								"                        },\r",
								"                        credits: { enabled: false },\r",
								"                        title: { text: '' },\r",
								"                        subTitle: { text: '' },\r",
								"                        series: []\r",
								"                    });\r",
								"                }\r",
								"\r",
								"                // Fetch Data \r",
								"                if (dataTile.dataUrl) {\r",
								"                    // Trigger Pull 1. Time\r",
								"                    setTimeout(function () {\r",
								"                        sap.n.Launchpad.getHighchartData(dataTile, oHighchart, pageId, chartId, 'start');\r",
								"                    }, 100);\r",
								"\r",
								"                    // Pull Interval\r",
								"                    if (dataTile.dataInterval && dataTile.dataInterval !== '0' && !sap.n.Launchpad.Timers[chartId]) {\r",
								"                        sap.n.Launchpad.Timers[chartId] = {\r",
								"                            timer: setInterval(function () {\r",
								"                                if (sap.n.Launchpad.Timers[chartId].pageId !== AppCacheNav.getCurrentPage().sId) return;\r",
								"                                sap.n.Launchpad.getHighchartData(dataTile, oHighchart, pageId, chartId, 'continue');\r",
								"                            }, dataTile.dataInterval * 1000),\r",
								"                            pageId: pageId\r",
								"                        };\r",
								"                    }\r",
								"                }\r",
								"            }\r",
								"        });\r",
								"\r",
								"        oBlockContentTop.addItem(oHighchartHTML);\r",
								"\r",
								"        // Actions\r",
								"        sap.n.Launchpad.buildTileAction(dataTile, oBlockContentParent, oBlockCell, dataCat);\r",
								"\r",
								"        return oBlockCell;\r",
								"    },\r",
								"\r",
								"    buildTileHighstock: function (dataTile, tileWidth, dataCat) {\r",
								"        let oBlockCell = new sap.ui.layout.BlockLayoutCell(nepId(), {\r",
								"            title: sap.n.Launchpad.translateTile('title', dataTile),\r",
								"            titleAlignment: dataTile.titleAlignment || 'Begin',\r",
								"            titleLevel: dataTile.titleLevel || 'Auto',\r",
								"            width: tileWidth,\r",
								"        }).addStyleClass('nepTileHighstock');\r",
								"\r",
								"        sap.n.Launchpad.setBackgroundShade(dataTile, dataCat, oBlockCell);\r",
								"\r",
								"        let oBlockContentParent = new sap.m.VBox(nepId(), {\r",
								"            justifyContent: 'SpaceBetween',\r",
								"            height: 'calc(100% - 25px)'\r",
								"        });\r",
								"\r",
								"        let oBlockContentTop = new sap.m.VBox(nepId());\r",
								"\r",
								"        oBlockCell.addContent(oBlockContentParent);\r",
								"        oBlockContentParent.addItem(oBlockContentTop);\r",
								"\r",
								"        // SubTitle - Box\r",
								"        let oBlockContent = new sap.m.HBox(nepId(), {\r",
								"            width: '100%',\r",
								"            justifyContent: 'SpaceBetween'\r",
								"        });\r",
								"\r",
								"        // Reverse if title at End\r",
								"        if (dataTile.titleAlignment === 'End') oBlockContent.setDirection('RowReverse');\r",
								"\r",
								"        oBlockContent.addStyleClass('sapUiSmallMarginBottom');\r",
								"        oBlockContentTop.addItem(oBlockContent);\r",
								"\r",
								"        // SubTitle\r",
								"        if (dataTile.subTitle) {\r",
								"            let oBlockInfo = new sap.m.Text(nepId(), {\r",
								"                text: sap.n.Launchpad.translateTile('subTitle', dataTile)\r",
								"            });\r",
								"\r",
								"            oBlockContent.addItem(oBlockInfo);\r",
								"            oBlockInfo.addStyleClass('nepTileSubTitle');\r",
								"        }\r",
								"\r",
								"        if (dataTile.icon) {\r",
								"            let oBlockIcon;\r",
								"            if (dataTile.icon.indexOf('sap-icon') > -1) {\r",
								"                oBlockIcon = new sap.ui.core.Icon(nepId(), {\r",
								"                    src: dataTile.icon,\r",
								"                    size: '1.4rem',\r",
								"                    useIconTooltip: false\r",
								"                });\r",
								"            } else {\r",
								"                oBlockIcon = new sap.m.Image(nepId(), {\r",
								"                    src: dataTile.icon,\r",
								"                    width: '32px',\r",
								"                    densityAware: false,\r",
								"                });\r",
								"            }\r",
								"            oBlockContent.addItem(oBlockIcon);\r",
								"        }\r",
								"\r",
								"        const chartId = 'chart' + ModelData.genID();\r",
								"        const pageId = 'page' + dataCat.id;\r",
								"\r",
								"        let oHighchart;\r",
								"        let oHighchartHTML = new sap.ui.core.HTML(nepId(), {\r",
								"            content: `<div id=\"${chartId}\" style=\"height: 100%px; width: 100%\"></div>`,\r",
								"            afterRendering: function (oEvent) {\r",
								"                oHighchart = Highcharts.stockChart({\r",
								"                    chart: {\r",
								"                        height: 100,\r",
								"                        renderTo: chartId,\r",
								"                        style: { fontFamily: '72' }\r",
								"                    },\r",
								"                    credits: { enabled: false },\r",
								"                    title: { text: '' },\r",
								"                    subTitle: { text: '' },\r",
								"                    series: []\r",
								"                });\r",
								"\r",
								"                // Fetch Data \r",
								"                if (dataTile.dataUrl) {\r",
								"                    // Trigger Pull 1. Time\r",
								"                    setTimeout(function () {\r",
								"                        sap.n.Launchpad.getHighstockData(dataTile, oHighchart, pageId, chartId, 'start');\r",
								"                    }, 100);\r",
								"\r",
								"                    // Pull Interval\r",
								"                    if (dataTile.dataInterval && dataTile.dataInterval !== '0' && !sap.n.Launchpad.Timers[chartId]) {\r",
								"                        sap.n.Launchpad.Timers[chartId] = {\r",
								"                            timer: setInterval(function () {\r",
								"                                if (sap.n.Launchpad.Timers[chartId].pageId !== AppCacheNav.getCurrentPage().sId) return;\r",
								"                                sap.n.Launchpad.getHighstockData(dataTile, oHighchart, pageId, chartId, 'continue');\r",
								"                            }, dataTile.dataInterval * 1000),\r",
								"                            pageId: pageId\r",
								"                        };\r",
								"                    }\r",
								"                }\r",
								"            }\r",
								"        });\r",
								"\r",
								"        oBlockContentTop.addItem(oHighchartHTML);\r",
								"\r",
								"        // Actions\r",
								"        sap.n.Launchpad.buildTileAction(dataTile, oBlockContentParent, oBlockCell, dataCat);\r",
								"\r",
								"        return oBlockCell;\r",
								"    },\r",
								"\r",
								"\r",
								"    getHighchartData: function (dataTile, chart, pageId, chartId, init) {\r",
								"        let url = dataTile.dataUrl;\r",
								"        let querySep = '?';\r",
								"\r",
								"        if (url.indexOf('http') === -1) url = AppCache.Url + url;\r",
								"\r",
								"        // Add URL Query\r",
								"        if (url.indexOf('?') > -1) querySep = '&';\r",
								"        url = url + querySep + 'init=' + init;\r",
								"\r",
								"        request({\r",
								"            type: 'GET',\r",
								"            contentType: 'application/json',\r",
								"            url: url,\r",
								"            success: function (data) {\r",
								"                if (!chart) return;\r",
								"                if (!chart.series) return;\r",
								"\r",
								"                // Save to cache \r",
								"                localStorage.setItem('p9TileChart' + dataTile.id, JSON.stringify(data));\r",
								"\r",
								"                // Only redraw chart when number of series changes.\r",
								"                if (Array.isArray(data.series) && Array.isArray(chart.series) && chart.series.length !== data.series.length) {\r",
								"                    Array.isArray(data.series) && data.series.forEach(function (serie) {\r",
								"                        chart.addSeries(serie, false);\r",
								"                    });\r",
								"                    chart.update(data);\r",
								"                    chart.redraw();\r",
								"                } else {\r",
								"                    // Only update series values to get animation\r",
								"                    let seriesData = [];\r",
								"                    Array.isArray(data.series) && data.series.forEach(function (serie, i) {\r",
								"                        chart.series[i].setData(serie.data);\r",
								"                    });\r",
								"                }\r",
								"            },\r",
								"            error: function (result, status) {\r",
								"                if (sap.n.Launchpad.Timers[chartId]) clearInterval(sap.n.Launchpad.Timers[chartId].timer);\r",
								"            }\r",
								"        });\r",
								"\r",
								"    },\r",
								"\r",
								"    getHighstockData: function (dataTile, chart, pageId, chartId, init) {\r",
								"        let url = dataTile.dataUrl;\r",
								"        let querySep = '?';\r",
								"\r",
								"        if (url.indexOf('http') === -1) url = AppCache.Url + url;\r",
								"\r",
								"        // Add URL Query\r",
								"        if (url.indexOf('?') > -1) querySep = '&';\r",
								"        url = url + querySep + 'init=' + init;\r",
								"\r",
								"        request({\r",
								"            type: 'GET',\r",
								"            contentType: 'application/json',\r",
								"            url: url,\r",
								"            success: function (data) {\r",
								"                if (!chart) return;\r",
								"                if (!chart.series) return;\r",
								"\r",
								"                // Only redraw chart when number of series changes.\r",
								"                if (chart.series.length === 0) {\r",
								"                    data.series.forEach(function (serie) {\r",
								"                        chart.addSeries(serie, false);\r",
								"                    });\r",
								"                    chart.update(data);\r",
								"                    chart.redraw();\r",
								"                } else {\r",
								"                    // Only update series values to get animation\r",
								"                    let seriesData = [];\r",
								"                    data.series.forEach(function (serie, i) {\r",
								"                        chart.series[i].addPoint(serie.data, true, true);\r",
								"                    });\r",
								"                }\r",
								"            },\r",
								"            error: function (result, status) {\r",
								"                if (sap.n.Launchpad.Timers[chartId]) clearInterval(sap.n.Launchpad.Timers[chartId].timer);\r",
								"            }\r",
								"        });\r",
								"\r",
								"    },\r",
								"\r",
								"    traceTile: function (dataTile) {\r",
								"        if (!dataTile) return;\r",
								"        let system = sap.n.Launchpad.deviceType();\r",
								"\r",
								"        sap.n.Planet9.function({\r",
								"            id: dataSet,\r",
								"            method: 'TraceTile',\r",
								"            data: {\r",
								"                tile: dataTile.id,\r",
								"                launchpad: AppCache.launchpadID,\r",
								"                browserName: sap.ui.Device.browser.name,\r",
								"                browserVersion: sap.ui.Device.browser.version,\r",
								"                osName: sap.ui.Device.os.name,\r",
								"                osVersion: sap.ui.Device.os.version,\r",
								"                system: system\r",
								"            }\r",
								"        });\r",
								"\r",
								"    },\r",
								"\r",
								"    deviceType: function () {\r",
								"        const desktop = sap.ui.Device.system.desktop;\r",
								"        const tablet = sap.ui.Device.system.tablet;\r",
								"        const phone = sap.ui.Device.system.phone;\r",
								"\r",
								"        const deviceDesktop = sap.n.Launchpad.device.DESKTOP;\r",
								"        const deviceTablet = sap.n.Launchpad.device.TABLET;\r",
								"        const devicePhone = sap.n.Launchpad.device.PHONE;\r",
								"\r",
								"        if (desktop && tablet) {\r",
								"            if (isCordova()) return deviceTablet;\r",
								"            return deviceDesktop;\r",
								"        }\r",
								"\r",
								"        if (tablet && !isCordova()) return deviceDesktop;\r",
								"        if (desktop) return deviceDesktop;\r",
								"        if (tablet) return deviceTablet;\r",
								"        if (phone) return devicePhone;\r",
								"\r",
								"        return deviceDesktop;\r",
								"    },\r",
								"\r",
								"    isDesktop: function () { return sap.n.Launchpad.deviceType() === sap.n.Launchpad.device.DESKTOP; },\r",
								"    isTablet: function () { return sap.n.Launchpad.deviceType() === sap.n.Launchpad.device.TABLET; },\r",
								"    isPhone: function () { return sap.n.Launchpad.deviceType() === sap.n.Launchpad.device.PHONE; },\r",
								"}"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "2d041e7e-d3b4-43ea-b015-d58ee0cd22fa",
							"fieldName": "sap.n.Layout",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"sap.n.Layout = {\r",
								"    row: {\r",
								"        ONE: 'One',\r",
								"        FEW: 'Few',\r",
								"        MORE: 'More',\r",
								"        MANY: 'Many'\r",
								"    },\r",
								"    tileWidth: {\r",
								"        SMALL: 'Small',\r",
								"        MEDIUM: 'Medium',\r",
								"        WIDE: 'Wide',\r",
								"        WIDER: 'Wider',\r",
								"        MAX: 'Max'\r",
								"    },\r",
								"\r",
								"    tileHeight: {\r",
								"        DEFAULT: '',\r",
								"        TALL: 'Tall',\r",
								"        TOWER: 'Tower',\r",
								"        SKYSCRAPER: 'Skyscraper'\r",
								"    },\r",
								"\r",
								"    waitForLayout: 0,\r",
								"\r",
								"    setHeaderPadding: function (noRebuild) {\r",
								"        ['nepSideCollapsed', 'nepSideExpanded', 'nepSideMenu', 'nepSideMenuCollapsed', 'nepSideMenuExpanded'].forEach(function (c) {\r",
								"            topMenu.removeStyleClass(c);\r",
								"        });\r",
								"\r",
								"        sap.n.Launchpad.setLaunchpadContentWidth();\r",
								"\r",
								"        if (!noRebuild && sap.n.Launchpad.currLayoutContent.shellContentWidth !== 'Full' && sap.n.Launchpad.currLayoutContent.headerContentWidth) {\r",
								"            let menu = launchpadContentMenu.getWidth();\r",
								"            let navBar = launchpadContentNavigator.getWidth();\r",
								"\r",
								"            if (menu === '300px' && navBar === '68px') topMenu.addStyleClass('nepSideMenuCollapsed');\r",
								"            else if (menu === '300px' && navBar === '300px') topMenu.addStyleClass('nepSideMenuExpanded');\r",
								"            else if (menu === '300px') topMenu.addStyleClass('nepSideMenu');\r",
								"            else if (navBar === '68px') topMenu.addStyleClass('nepSideCollapsed');\r",
								"            else if (navBar === '300px') topMenu.addStyleClass('nepSideExpanded');\r",
								"        }\r",
								"    },\r",
								"};\r",
								""
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "702d07ac-8188-45b1-e273-0658e52a7212",
							"fieldName": "sap.n.Planet9",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"sap.n.Planet9 = {",
								"    function: function (opts) {",
								"        let { id, query, method } = opts;",
								"        let server = opts.url || AppCache.Url;",
								"",
								"        let q = '';",
								"        if (query) {",
								"            let params = AppCache.isMobile ? `${query}&isMobile=true` : query;",
								"            q = `?${encodeURIComponent(params)}`;",
								"        } else {",
								"            q = AppCache.isMobile ? '?isMobile=true' : '';",
								"        }",
								"",
								"        // Public",
								"        let basePath = '/api/functions/';",
								"        if (AppCache.isPublic) {",
								"            basePath = '/public/functions/launchpad';",
								"            id = '';",
								"        }",
								"",
								"        let url = `${server}${basePath}${id}${q}`;",
								"        if (method) {",
								"            url = `${server}${basePath}${id}/${method}${q}`;",
								"        }",
								"",
								"        jsonRequest({",
								"            url,",
								"            data: opts.data ? JSON.stringify(opts.data) : {},",
								"            headers: opts.headers || {},",
								"            xhrFields: {",
								"                withCredentials: true",
								"            },",
								"            success: function (data) {",
								"                if (opts.success) opts.success(data);",
								"            },",
								"            error: function (result, _status) {",
								"                if (opts.error) opts.error(result);",
								"            }",
								"        });",
								"    },",
								"",
								"    arrayMove: function (arr, fromPos, toPos) {",
								"        while (fromPos < 0) {",
								"            fromPos += arr.length;",
								"        }",
								"        while (toPos < 0) {",
								"            toPos += arr.length;",
								"        }",
								"        if (toPos >= arr.length) {",
								"            let k = toPos - arr.length + 1;",
								"            while (k--) {",
								"                arr.push(undefined);",
								"            }",
								"        }",
								"        arr.splice(toPos, 0, arr.splice(fromPos, 1)[0]);",
								"    }",
								"}"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "b1e33421-6ddf-4c51-d0a7-cc597d04a1e0",
							"fieldName": "sap.n.Push",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"sap.n.Push = {",
								"    messsaging: null,",
								"    firebaseSetup: function () {",
								"        cordova.plugins.firebase.messaging.requestPermission().then(function () {",
								"            appCacheLog('FireBase Messaging: Push messaging is allowed');",
								"",
								"            cordova.plugins.firebase.messaging.getToken().then(function (token) {",
								"                appCacheLog(`FireBase Messaging: Got token ${token}`);",
								"",
								"                let system = sap.n.Launchpad.deviceType();",
								"                let deviceData = {",
								"                    token: token,",
								"                    launchpadId: AppCache.launchpadID,",
								"                    browserName: sap.ui.Device.browser.name,",
								"                    browserVersion: sap.ui.Device.browser.version,",
								"                    osName: sap.ui.Device.os.name,",
								"                    osVersion: sap.ui.Device.os.version,",
								"                    system: system",
								"                };",
								"",
								"                // Enhancement",
								"                if (sap.n.Enhancement.PushRegistration) {",
								"                    try {",
								"                        sap.n.Enhancement.PushRegistration(deviceData);",
								"                    } catch (e) {",
								"                        appCacheError('Enhancement PushRegistration ' + e);",
								"                    }",
								"                }",
								"",
								"                jsonRequest({",
								"                    url: AppCache.Url + '/messaging/register',",
								"                    data: JSON.stringify(deviceData),",
								"                    success: function (data) {",
								"                        localStorage.setItem('pushRegistered', true);",
								"                    },",
								"                    error: function (result, status) {",
								"                        localStorage.setItem('pushRegistered', false);",
								"                        if (result.responseJSON && result.responseJSON.status) {",
								"                            sap.m.MessageToast.show(result.responseJSON.status);",
								"                        }",
								"                    }",
								"                });",
								"            });",
								"        });",
								"",
								"        cordova.plugins.firebase.messaging.onMessage(function (payload) {",
								"            // Enhancement",
								"            if (sap.n.Enhancement.PushNotification) {",
								"                try {",
								"                    sap.n.Enhancement.PushNotification(payload);",
								"                } catch (e) {",
								"                    appCacheError('Enhancement PushNotification ' + e);",
								"                }",
								"            }",
								"        });",
								"",
								"    },",
								"",
								"    setupPush: function () {",
								"        if (cordova.plugins.firebase && cordova.plugins.firebase.messaging) {",
								"            sap.n.Push.firebaseSetup();",
								"            return;",
								"        }",
								"",
								"        if (typeof PushNotification === 'undefined') {",
								"            console.log('PushNotification plugin not installed');",
								"            return;",
								"        }",
								"",
								"        let push = PushNotification.init({",
								"            'android': {",
								"                'senderID': AppCache.pushSenderId",
								"            },",
								"            'browser': {},",
								"            'ios': {",
								"                'sound': true,",
								"                'vibration': true,",
								"                'badge': true",
								"            },",
								"            'windows': {}",
								"        });",
								"",
								"        push.on('registration', function (data) {",
								"            let system = sap.n.Launchpad.deviceType();",
								"            let deviceData = {",
								"                token: data.registrationId,",
								"                launchpadId: AppCache.launchpadID,",
								"                browserName: sap.ui.Device.browser.name,",
								"                browserVersion: sap.ui.Device.browser.version,",
								"                osName: sap.ui.Device.os.name,",
								"                osVersion: sap.ui.Device.os.version,",
								"                system: system",
								"            };",
								"",
								"            // Enhancement",
								"            if (sap.n.Enhancement.PushRegistration) {",
								"                try {",
								"                    sap.n.Enhancement.PushRegistration(deviceData);",
								"                } catch (e) {",
								"                    appCacheError('Enhancement PushRegistration ' + e);",
								"                }",
								"            }",
								"",
								"            jsonRequest({",
								"                url: AppCache.Url + '/messaging/register',",
								"                data: JSON.stringify(deviceData),",
								"                success: function (data) {",
								"                    localStorage.setItem('pushRegistered', true);",
								"                },",
								"                error: function (result, status) {",
								"                    localStorage.setItem('pushRegistered', false);",
								"                    if (result.responseJSON && result.responseJSON.status) {",
								"                        sap.m.MessageToast.show(result.responseJSON.status);",
								"                    }",
								"                }",
								"            });",
								"        });",
								"",
								"        push.on('error', function (e) {",
								"            console.error('push error = ' + e.message);",
								"        });",
								"",
								"        push.on('notification', function (data) {",
								"            // Enhancement",
								"            if (sap.n.Enhancement.PushNotification) {",
								"                try {",
								"                    sap.n.Enhancement.PushNotification(data);",
								"                } catch (e) {",
								"                    appCacheError('Enhancement PushNotification ' + e);",
								"                }",
								"            }",
								"",
								"            if (sap.ui.Device.os.name === 'iOS') {",
								"                push.setApplicationIconBadgeNumber(function () {",
								"                    console.log('Badge: success');",
								"                }, function () {",
								"                    console.log('Badge: error');",
								"                }, data.count);",
								"            }",
								"        });",
								"    }",
								"};"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "2b9e0f95-8f49-4575-9186-c16c3b16b476",
							"fieldName": "sap.n.Shell",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"sap.n.getObjectByID = function (id) {",
								"    let object;",
								"    object = sap.ui.getCore().byId(sap.n.currentView.createId(id));",
								"    return object;",
								"}",
								"",
								"sap.n.Shell = {",
								"    openSidePanelApps: {},",
								"    sidepanelCloseEvents: {},",
								"    sidepanelHelpFunction: null,",
								"",
								"    // Event - attachInit",
								"    attachInit: function (func) {",
								"        let applid = AppCache.CurrentApp.replace(/\\//g, '').toUpperCase();",
								"",
								"        if (AppCache.LoadOptions.appGUID) applid = AppCache.LoadOptions.appGUID;",
								"        if (!applid) return;",
								"        if (!sap.n.Apps[applid]) sap.n.Apps[applid] = {};",
								"        if (!sap.n.Apps[applid].init) sap.n.Apps[applid].init = new Array();",
								"",
								"        sap.n.Apps[applid].init.push(func);",
								"    },",
								"",
								"    attachBeforeSuspend: function (func) {",
								"        let applid = AppCache.CurrentApp.replace(/\\//g, '').toUpperCase();",
								"",
								"        if (AppCache.LoadOptions.appGUID) applid = AppCache.LoadOptions.appGUID;",
								"        if (!applid) return;",
								"        if (!sap.n.Apps[applid]) sap.n.Apps[applid] = {};",
								"        if (!sap.n.Apps[applid].beforeSuspend) sap.n.Apps[applid].beforeSuspend = new Array();",
								"",
								"        sap.n.Apps[applid].beforeSuspend.push(func);",
								"    },",
								"",
								"    attachBeforeMenuNavigation: function (func) {",
								"        let applid = AppCache.CurrentApp.replace(/\\//g, '').toUpperCase();",
								"",
								"        if (AppCache.LoadOptions.appGUID) applid = AppCache.LoadOptions.appGUID;",
								"        if (!applid) return;",
								"        if (!sap.n.Apps[applid]) sap.n.Apps[applid] = {};",
								"        if (!sap.n.Apps[applid].beforeMenuNavigation) sap.n.Apps[applid].beforeMenuNavigation = new Array();",
								"",
								"        if (!sap.n.Apps[applid].beforeMenuNavigation.length) sap.n.Apps[applid].beforeMenuNavigation.push(func);",
								"    },",
								"",
								"    // Event - attachBeforeDisplay",
								"    attachBeforeDisplay: function (func) {",
								"        let applid = AppCache.CurrentApp.replace(/\\//g, '').toUpperCase();",
								"",
								"        if (AppCache.LoadOptions.appGUID) applid = AppCache.LoadOptions.appGUID;",
								"        if (!applid) return;",
								"        if (!sap.n.Apps[applid]) sap.n.Apps[applid] = {};",
								"        if (!sap.n.Apps[applid].beforeDisplay) sap.n.Apps[applid].beforeDisplay = new Array();",
								"",
								"        if (!sap.n.Apps[applid].beforeDisplay.length) sap.n.Apps[applid].beforeDisplay.push(func);",
								"    },",
								"",
								"    // Event - beforeClose",
								"    attachBeforeClose: function (func) {",
								"        let applid = AppCache.CurrentApp.replace(/\\//g, '').toUpperCase();",
								"",
								"        if (AppCache.LoadOptions.appGUID) applid = AppCache.LoadOptions.appGUID;",
								"        if (!applid) return;",
								"        if (!sap.n.Apps[applid]) sap.n.Apps[applid] = {};",
								"        if (!sap.n.Apps[applid].beforeClose) sap.n.Apps[applid].beforeClose = new Array();",
								"",
								"        if (!sap.n.Apps[applid].beforeClose.length) sap.n.Apps[applid].beforeClose.push(func);",
								"    },",
								"",
								"    // Event - attachOnNavigation",
								"    attachOnNavigation: function (func) {",
								"        let applid = AppCache.CurrentApp.replace(/\\//g, '').toUpperCase();",
								"",
								"        if (AppCache.LoadOptions.appGUID) applid = AppCache.LoadOptions.appGUID;",
								"        if (!applid) return;",
								"        if (!sap.n.Apps[applid]) sap.n.Apps[applid] = {};",
								"        if (!sap.n.Apps[applid].onNavigation) sap.n.Apps[applid].onNavigation = new Array();",
								"",
								"        if (!sap.n.Apps[applid].onNavigation.length) sap.n.Apps[applid].onNavigation.push(func);",
								"    },",
								"",
								"    // Event - beforeBack",
								"    attachBeforeBack: function (func) {",
								"        let applid = AppCache.CurrentApp.replace(/\\//g, '').toUpperCase();",
								"",
								"        if (AppCache.LoadOptions.appGUID) applid = AppCache.LoadOptions.appGUID;",
								"        if (!applid) return;",
								"        if (!sap.n.Apps[applid]) sap.n.Apps[applid] = {};",
								"        if (!sap.n.Apps[applid].beforeBack) sap.n.Apps[applid].beforeBack = new Array();",
								"",
								"        if (!sap.n.Apps[applid].beforeBack.length) sap.n.Apps[applid].beforeBack.push(func);",
								"    },",
								"",
								"    // Event - beforeHome",
								"    attachBeforeHome: function (func) {",
								"        let applid = AppCache.CurrentApp.replace(/\\//g, '').toUpperCase();",
								"",
								"        if (AppCache.LoadOptions.appGUID) applid = AppCache.LoadOptions.appGUID;",
								"        if (!applid) return;",
								"        if (!sap.n.Apps[applid]) sap.n.Apps[applid] = {};",
								"        if (!sap.n.Apps[applid].beforeHome) sap.n.Apps[applid].beforeHome = new Array();",
								"",
								"        if (!sap.n.Apps[applid].beforeHome.length) sap.n.Apps[applid].beforeHome.push(func);",
								"    },",
								"",
								"    getTabKey: function (tabApplid, tabTitle, options) {",
								"        if (tabApplid === 'cockpit_doc_reader') return 'cockpit_doc_reader';",
								"",
								"        if (",
								"            options && options.startParams && options.startParams.settings && ",
								"            options.startParams.settings.data && options.startParams.settings.data.id",
								"        ) {",
								"            return options.startParams.settings.data.id;",
								"        }",
								"",
								"        return tabApplid + '|' + tabTitle;",
								"    },",
								"",
								"    loadSidepanel: function (tabApplid, tabTitle, options) {",
								"        if (!options) options = {};",
								"",
								"        AppCacheUserActionSidepanel.setVisible(true);",
								"        AppCachePageSideTab.setVisible(true);",
								"",
								"        // Open Sidepanel",
								"        sap.n.Launchpad.sidepanelOpen(options);",
								"",
								"        // Check for existing",
								"        let tabCreated = false;",
								"        let tabKey = sap.n.Shell.getTabKey(tabApplid, tabTitle, options);",
								"",
								"        AppCachePageSideTab.getItems().forEach(function (tab) {",
								"            if (tab.getKey() === tabKey) {",
								"                AppCachePageSideTab.setSelectedItem(tab);",
								"                tabCreated = true;",
								"",
								"                if (tabKey === 'cockpit_doc_reader') {",
								"                    tab.setName(tabTitle);",
								"                    if (sap.n.Shell.sidepanelHelpFunction) sap.n.Shell.sidepanelHelpFunction();",
								"                }",
								"            }",
								"        });",
								"",
								"        // Add onClose Event ",
								"        if (options.onClose) sap.n.Shell.sidepanelCloseEvents[tabKey] = options.onClose;",
								"",
								"        // Stop if tab exits",
								"        if (tabCreated) return;",
								"",
								"        let oTabContainerItem = new sap.m.TabContainerItem({",
								"            key: tabKey,",
								"            modified: false,",
								"            name: tabTitle",
								"        });",
								"",
								"        if (options.icon && oTabContainerItem.setIcon) oTabContainerItem.setIcon(options.icon);",
								"        if (options.additionaltext && oTabContainerItem.setAdditionalText) oTabContainerItem.setAdditionalText(options.additionaltext);",
								"",
								"        AppCachePageSideTab.addItem(oTabContainerItem);",
								"        AppCachePageSideTab.setSelectedItem(oTabContainerItem);",
								"",
								"        // Mark Open From ",
								"        if (sap.n.Launchpad.currentTile && sap.n.Launchpad.currentTile.actionApplication) sap.n.Shell.openSidePanelApps[sap.n.Launchpad.currentTile.actionApplication] = true;",
								"",
								"        // Load Settings ",
								"        options.parentObject = oTabContainerItem;",
								"",
								"        AppCache.Load(tabApplid, options);",
								"",
								"        // Trigger scrollTo",
								"        setTimeout(function () {",
								"            AppCachePageSideTab.setSelectedItem(oTabContainerItem);",
								"        }, 200);",
								"    },",
								"",
								"    closeSidepanelTab: function (tabKey) {",
								"        if (!tabKey) return;",
								"",
								"        AppCachePageSideTab.getItems().forEach(function (tab) {",
								"            if (tab.getKey() === tabKey) tab.destroy();",
								"        });",
								"",
								"        if (AppCachePageSideTab.getItems().length === 0) {",
								"            sap.n.Launchpad.sidepanelClose();",
								"        }",
								"    },",
								"",
								"    closeAllSidepanelTabs: function () {",
								"        const tabs = AppCachePageSideTab.getItems();",
								"        if (tabs.length > 0) {",
								"            tabs.forEach(function (tab) {",
								"                tab.destroy();",
								"            });",
								"",
								"            sap.n.Launchpad.sidepanelClose();",
								"        }",
								"    },",
								"",
								"    setSidepanelText: function (name, additionalText) {",
								"        let tabId = AppCachePageSideTab.getSelectedItem();",
								"",
								"        AppCachePageSideTab.getItems().forEach(function (tab) {",
								"            if (tab.sId === tabId) {",
								"                if (name) tab.setName(name);",
								"                if (additionalText) tab.setAdditionalText(additionalText);",
								"",
								"                let app = tab.getKey().split('|')[0];",
								"                tab.setKey(app + '|' + name);",
								"            }",
								"        });",
								"    },",
								"",
								"    getSidepanelText: function () {",
								"        let tabId = AppCachePageSideTab.getSelectedItem();",
								"        let data = {};",
								"",
								"        AppCachePageSideTab.getItems().forEach(function (tab) {",
								"            if (tab.sId === tabId) {",
								"                data.name = tab.getName();",
								"                data.additionalText = tab.getAdditionalText();",
								"            }",
								"        });",
								"",
								"        return data;",
								"    },",
								"",
								"    closeSidepanel: function (tabKey) {",
								"        sap.n.Launchpad.sidepanelClose();",
								"",
								"        // Destroy when closing Tile ",
								"        if (tabKey) {",
								"            AppCachePageSideTab.getItems().forEach(function (tab) {",
								"                if (tab.getKey() === tabKey) tab.destroy();",
								"            });",
								"        }",
								"    },",
								"",
								"    openSidepanel: function (tabKey) {",
								"        sap.n.Launchpad.sidepanelOpen();",
								"    },",
								"",
								"    showGuided: function (data) {",
								"        let object = sap.ui.getCore().byId(sap.n.currentView.createId(data.FIELD_NAME));",
								"        popGuided.openBy(object)",
								"        popGuided.setTitle(data.STEP_TITLE);",
								"        docGuided.setText(data.STEP_DOC);",
								"    },",
								"",
								"    // Close Tile",
								"    closeTile: function (tileData) {",
								"        if (typeof tileData !== 'object' || !tileData.id) {",
								"            return;",
								"        }",
								"",
								"        location.hash = '';",
								"",
								"        // Destroy current App or URL",
								"        if (tileData.actionURL || tileData.actionWebApp) {",
								"            const iframe = querySelector(`#iFrame${tileData.id}`)",
								"            iframe.parentNode.removeChild(iframe);",
								"",
								"            // Navigate Back",
								"            if (sap.n.Launchpad.currentTile.id === tileData.id) {",
								"                AppCacheNav.back();",
								"                sap.n.Launchpad.currentTile = {};",
								"",
								"                if (tileData.sidepanelApp) sap.n.Shell.closeSidepanel(tileData.sidepanelApp);",
								"                if (sap.n.Launchpad.isMenuPage() && !sap.n.Launchpad.hideBackIcon) AppCacheShellBack.setVisible(false);",
								"",
								"                AppCacheShellHelp.setVisible(false);",
								"                sap.n.Launchpad.setHideHeader(false);",
								"            }",
								"        } else {",
								"            // Custom beforeClose",
								"            let preventDefault = false;",
								"            let viewID;",
								"",
								"            if (sap.n.Apps[tileData.id] && sap.n.Apps[tileData.id].beforeClose) {",
								"                sap.n.Apps[tileData.id].beforeClose.forEach(function (eventFn) {",
								"                    let oEvent = new sap.ui.base.Event('beforeClose', new sap.ui.base.EventProvider());",
								"                    eventFn(oEvent);",
								"",
								"                    if (oEvent.bPreventDefault) preventDefault = true;",
								"                    oEvent = null;",
								"                });",
								"            }",
								"",
								"            // Default behaviour was avoided",
								"            if (preventDefault) return;",
								"",
								"            // Navigate Back",
								"            if (sap.n.Launchpad.currentTile.id === tileData.id) {",
								"                AppCacheNav.back();",
								"",
								"                if (AppCache.StartApp.trim().length > 0) {",
								"                    return;",
								"                }",
								"",
								"                sap.n.Launchpad.currentTile = {};",
								"",
								"                // Delete SidepanelApps",
								"                if (tileData.sidepanelApp) {",
								"                    sap.n.Shell.closeSidepanel(tileData.sidepanelApp);",
								"                    if (tileData.actionApplication) delete sap.n.Shell.openSidePanelApps[tileData.actionApplication];",
								"                }",
								"",
								"                if (sap.n.Launchpad.isMenuPage() && !sap.n.Launchpad.hideBackIcon) AppCacheShellBack.setVisible(false);",
								"",
								"                AppCacheShellHelp.setVisible(false);",
								"                sap.n.Launchpad.setHideHeader(false);",
								"",
								"",
								"                // Fullscreen Handling",
								"                let cat = AppCacheNav.getCurrentPage().sId;",
								"                cat = cat.split('page')[1];",
								"",
								"                let dataCat = ModelData.FindFirst(AppCacheCategory, 'id', cat);",
								"",
								"                if (dataCat) {",
								"                    sap.n.Launchpad.MarkTopMenu(dataCat.id);",
								"                    AppCacheShellUI.setAppWidthLimited(!dataCat.enableFullScreen);",
								"                } else {",
								"                    let dataCatChild = ModelData.FindFirst(AppCacheCategoryChild, 'id', cat);",
								"                    if (!dataCatChild) {",
								"                        AppCache.Back();",
								"                    } else {",
								"                        sap.n.Launchpad.handleAppTitle(dataCatChild.title)",
								"                    }",
								"                }",
								"            }",
								"",
								"            // Clear View",
								"            if (AppCache.View[tileData.id]) {",
								"                viewID = AppCache.View[tileData.id].sId;",
								"                AppCache.View[tileData.id].destroy();",
								"                AppCache.View[tileData.id] = null;",
								"                delete AppCache.View[tileData.id];",
								"            }",
								"",
								"            // Clear All Events",
								"            delete sap.n.Apps[tileData.id];",
								"",
								"            if (viewID) sap.n.Shell.clearObjects(viewID);",
								"        }",
								"",
								"        // Close Active Button",
								"        const containerOpenApp = sap.ui.getCore().byId(`${nepPrefix()}OpenAppContainer${tileData.id}`);",
								"        if (containerOpenApp) {",
								"            openApps.removeItem(containerOpenApp);",
								"            containerOpenApp.destroy();",
								"            if (openApps.getItems().length <= 0) openAppMaster.setVisible(false);",
								"        }",
								"",
								"        // Destroy Buttons",
								"        const btnByTileId = sap.ui.getCore().byId(`but${tileData.id}`);",
								"        if (btnByTileId) btnByTileId.destroy();",
								"",
								"        const btnTopByTileId = sap.ui.getCore().byId(`butTop${tileData.id}`);",
								"        if (btnTopByTileId) btnTopByTileId.destroy();",
								"",
								"        // SideBar ",
								"        const items = blockRunningRow.getContent();",
								"        if (!items.length) closeContentNavigator();",
								"",
								"        // Close Objects Loaded into the App",
								"        AppCache.ViewChild[tileData.id] && AppCache.ViewChild[tileData.id].forEach(function (data) {",
								"            sap.n.Shell.clearObjects(data.sId);",
								"        });",
								"        delete AppCache.ViewChild[tileData.id];",
								"",
								"        sap.n.Launchpad.handleAppTitle(AppCache.launchpadTitle);",
								"        sap.n.Layout.setHeaderPadding();",
								"    },",
								"",
								"    closeAllTiles: function () {",
								"        // Close all Tiles - Clear memory",
								"        for (const k in AppCache.View) {",
								"            let tile = ModelData.FindFirst(AppCacheTiles, 'GUID', k);",
								"            if (tile && tile.GUID) sap.n.Shell.closeTile(tile);",
								"        }",
								"",
								"        // Close AppCache.Load Apps",
								"        for (const k in sap.n.Apps) {",
								"            if (AppCache.View[k]) {",
								"                AppCache.View[k].destroy();",
								"                AppCache.View[k] = null;",
								"                delete sap.n.Apps[k];",
								"            }",
								"        }",
								"",
								"        // Clear Pages",
								"        AppCacheNav.getPages().forEach(function (data) {",
								"            if (",
								"                ![",
								"                    'AppCachePageMenu', 'AppCachePageStore', 'AppCache_boxURL',",
								"                    'AppCache_boxLogon', 'AppCache_boxLogonCustom', 'AppCache_boxPassword',",
								"                    'AppCache_boxPasscode', 'AppCache_boxPasscodeEntry', 'AppCache_boxUsers'",
								"                ].includes(data.sId)",
								"            ) {",
								"                AppCacheNav.removePage(data.sId);",
								"                data.destroy();",
								"                data = null;",
								"            }",
								"        });",
								"",
								"        // Clear Views",
								"        AppCache.View = [];",
								"",
								"        // Extra memory cleanup",
								"        sap.n.Shell.clearAllObjects();",
								"",
								"        sap.n.Shell.closeSidepanel();",
								"",
								"        // Close Objects Loaded into the App",
								"        AppCache.ViewChild['undefined'] && AppCache.ViewChild['undefined'].forEach(function (data) {",
								"            sap.n.Shell.clearObjects(data.sId);",
								"        });",
								"",
								"        delete AppCache.ViewChild['undefined'];",
								"",
								"        blockRunningRow.destroyContent();",
								"        AppCacheAppButton.removeAllItems();",
								"        openApps.removeAllItems();",
								"",
								"        AppCache.Home();",
								"    },",
								"",
								"    clearObjects: function (view) {",
								"        sap.ui.getCore().byFieldGroupId('').forEach(function (data) {",
								"            let id = data.getId().split('--');",
								"            if (id[0] === view) {",
								"                if (data.getDomRef()) data.getDomRef().remove();",
								"                data.destroy();",
								"                data = null;",
								"            }",
								"        });",
								"    },",
								"",
								"    listPattern: function (object) {",
								"        sap.ui.getCore().byFieldGroupId('').forEach(function (data) {",
								"            if (!includesJSView(data.getId()) && data.getId().indexOf(object) > -1) console.log(data.getId());",
								"        });",
								"    },",
								"",
								"    clearAllObjects: function () {",
								"        // JS Views ",
								"        sap.ui.getCore().byFieldGroupId('').forEach(function (data) {",
								"            let id = data.getId().split('--');",
								"",
								"            if (includesJSView(id[0])) {",
								"                if (data.getDomRef()) data.getDomRef().remove();",
								"",
								"                try {",
								"                    if (typeof data.destroy === 'function') data.destroy();",
								"                } catch (e) {",
								"",
								"                }",
								"",
								"                data = null;",
								"            }",
								"        });",
								"",
								"        // Objects created by javascript",
								"        sap.ui.getCore().byFieldGroupId('').forEach(function (data) {",
								"            if (!includesJSView(data.getId()) && hasNepPrefix(data.getId())) {",
								"                if (data.getDomRef()) data.getDomRef().remove();",
								"",
								"                try {",
								"                    if (typeof data.destroy === 'function') data.destroy();",
								"                } catch (e) {}",
								"",
								"                data = null;",
								"            }",
								"        });",
								"    },",
								"",
								"    viewExists: function (view) {",
								"        let found = false;",
								"        sap.ui.getCore().byFieldGroupId('').forEach(function (data) {",
								"            let id = data.getId().split('--');",
								"            if (id[0] === view) found = true;",
								"        });",
								"        return found;",
								"    },",
								"",
								"    listObjects: function () {",
								"        sap.ui.getCore().byFieldGroupId('').forEach(function (data) {",
								"            let id = data.getId().split('--');",
								"            if (includesJSView(id[0])) console.log(data.getId());",
								"        });",
								"    },",
								"",
								"    openUrl: function (url, options) {",
								"        // Load Defaults",
								"        options = options || {};",
								"        LoadOptions = {};",
								"        LoadOptions.dialogHeight = options.dialogHeight || '90%';",
								"        LoadOptions.dialogWidth = options.dialogWidth || '1200px';",
								"        LoadOptions.dialogTitle = options.dialogTitle || '';",
								"        LoadOptions.dialogModal = options.dialogModal || false;",
								"        LoadOptions.webAppData = options.webAppData || null;",
								"",
								"        let contHeight = LoadOptions.dialogHeight;",
								"        let contWidth = LoadOptions.dialogWidth;",
								"        let diaTitle = LoadOptions.dialogTitle;",
								"        let screenWidth = window.innerWidth;",
								"",
								"        // Less Than 1200px",
								"        if (screenWidth < 1200) contWidth = (screenWidth * 0.8) + 'px';",
								"",
								"        // On Mobile",
								"        if (!sap.n.Launchpad.isDesktop()) {",
								"            contWidth = '100%';",
								"            contHeight = '100%';",
								"        }",
								"",
								"        // Create Dialog",
								"        let dia = new sap.n.Dialog({",
								"            contentWidth: contWidth,",
								"            contentHeight: contHeight,",
								"            type: 'Message',",
								"            resizable: !sap.n.Launchpad.isPhone(),",
								"            draggable: !sap.n.Launchpad.isPhone(),",
								"            stretchOnPhone: true,",
								"            title: diaTitle,",
								"            contentIsURL: true,",
								"            afterClose: function (oEvent) {",
								"                // Delete From Array",
								"                for (let i = 0; i < AppCache.Dialogs.length; i++) {",
								"                    if (AppCache.Dialogs[i] === this.getId()) {",
								"                        AppCache.Dialogs.splice(i, 1);",
								"                        break;",
								"                    }",
								"                }",
								"",
								"                if (AppCache.Dialogs.length === 0) {",
								"                    AppCacheShellDialog.setVisible(false);",
								"                }",
								"",
								"                this.destroyContent();",
								"                dia = null;",
								"            }",
								"        });",
								"",
								"        // Add Dialog to Array",
								"        AppCache.Dialogs.push(dia.getId());",
								"",
								"        if (LoadOptions.webAppData) {",
								"            let diaID = ModelData.genID();",
								"            dia.addContent(new sap.ui.core.HTML(nepId(), {",
								"                content: `<iframe id='diaFrame${diaID}' frameborder='0' height='100%' width='100%'></iframe>`,",
								"                visible: true,",
								"                sanitizeContent: false,",
								"                preferDOM: false,",
								"                afterRendering: function (oEvent) {",
								"                    let frame = document.getElementById('diaFrame' + diaID);",
								"                    frame.setAttribute('srcdoc', LoadOptions.webAppData);",
								"                }",
								"            }));",
								"        } else {",
								"            dia.addContent(new sap.ui.core.HTML(nepId(), {",
								"                content: `<iframe frameborder='0' height='100%' width='100%' src='${url}'></iframe>`,",
								"                visible: true,",
								"                sanitizeContent: false,",
								"                preferDOM: false",
								"            }));",
								"        }",
								"",
								"        dia.open();",
								"    }",
								"}"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "ea309ade-922f-47e9-bae2-031b1f42b6f8",
							"fieldName": "sap.n.Style",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"sap.n.Style = {",
								"    getLayoutCss: function (config) {",
								"        let layout = config.layout;",
								"",
								"        css = '<style>';",
								"        // Top Menu",
								"        if (layout.TOP_BACK_COLOR) {",
								"            css += `",
								"                .nepTopMenu {",
								"                    background: ${layout.TOP_BACK_COLOR};",
								"                }",
								"                .nepDialogWithObjHeader .sapContrastPlus.sapMOHR.sapMOHRBgTranslucent,",
								"                .sapContrastPlus .nepDialogWithObjHeader .sapMOHR.sapMOHRBgTranslucent,",
								"                .nepDialogSubObjHeader {",
								"                    background: ${layout.TOP_BACK_COLOR};",
								"                }",
								"                html.sap-desktop",
								"                    .nepDialogSubObjHeader",
								"                    .sapContrastPlus",
								"                    .sapMIBar.sapMFooter-CTX,",
								"                html.sap-desktop",
								"                    .nepDialogSubObjHeader",
								"                    .sapContrastPlus.sapMIBar.sapMFooter-CTX {",
								"                    border-top-color: ${layout.TOP_BACK_COLOR};",
								"                }",
								"                .nepDialogWithObjHeader.sapMDialog.sapMPopup-CTX > header .sapMHeader-CTX,",
								"                .nepDialogWithObjHeader.sapMDialog.sapMPopup-CTX > header .sapMSubHeader-CTX,",
								"                .nepDialogWithObjHeader .sapMITH {",
								"                    background-color: ${layout.TOP_BACK_COLOR};",
								"                }",
								"                .nepPopover.sapMDialog.sapMPopup-CTX > header .sapMHeader-CTX,",
								"                .nepPopover.sapMDialog.sapMPopup-CTX > header .sapMSubHeader-CTX,",
								"                .nepPopover :not(.sapMBtnDisabled) > .sapMBtnTransparent.sapMBtnActive,",
								"                .nepPopover :not(.sapMBtnDisabled):hover > .sapMBtnTransparent.sapMBtnActive,",
								"                .nepPopover :not(.sapMBtnDisabled) > .sapMBtnGhost.sapMBtnActive,",
								"                .nepPopover :not(.sapMBtnDisabled):hover > .sapMBtnGhost.sapMBtnActive {",
								"                    background-color: ${layout.TOP_BACK_COLOR};",
								"                    border-color: ${layout.TOP_BACK_COLOR};",
								"                }",
								"            `;",
								"        }",
								"",
								"        if (layout.TOP_ACT_COLOR) {",
								"            /**",
								"             * 1. Active Top Menu",
								"             * 2. Hover normal Top Menu",
								"             * 3. Sub Menu",
								"             */",
								"            css += `",
								"                .nepDialogWithObjHeader .sapMITBSelected>.sapMITBContentArrow,",
								"                .nepTopMenuActive.sapMBtn, ",
								"                .nepTopMenuBtn.sapMBtn:hover {",
								"                    border-bottom: 4px solid ${layout.TOP_ACT_COLOR};",
								"                }",
								"                .nepSubMenu.sapMPopover,",
								"                .nepOverflowMenu.nepPopover.sapMPopover {",
								"                    border-top: 4px solid ${layout.TOP_ACT_COLOR};",
								"                }",
								"            `;",
								"        }",
								"",
								"        if (layout.TOP_BOR_COLOR) {",
								"            css += `",
								"                .nepTopMenu {",
								"                    border-bottom: 1px solid ${layout.TOP_BOR_COLOR};",
								"                }",
								"                .nepDialogWithObjHeader .sapMITH {",
								"                    border-bottom: 2px solid ${layout.TOP_BOR_COLOR};",
								"                }",
								"            `;",
								"        }",
								"",
								"        if (layout.TOP_TXT_COLOR) {",
								"            css += `",
								"                .nepTopMenu :not(.sapMBtnDisabled) .sapMBtnTransparent > .sapMBtnIcon {",
								"                    color: ${layout.TOP_TXT_COLOR};",
								"                }",
								"                .nepTopMenu span.sapMBtnInner,",
								"                .nepDialogWithObjHeader",
								"                    .sapMITBTextOnly",
								"                    .sapMITBFilterDefault.sapMITBSelected",
								"                    > .sapMITBText,",
								"                .nepDialogWithObjHeader .sapMITBTextOnly .sapMITBFilterDefault > .sapMITBText {",
								"                    color: ${layout.TOP_TXT_COLOR};",
								"                    text-shadow: none;",
								"                }",
								"                .nepTopMenu .sapMTBSeparator {",
								"                    background: ${layout.TOP_TXT_COLOR};",
								"                }",
								"                .nepDialogWithObjHeader .sapMOHRTitle h1,",
								"                .nepDialogWithObjHeader .sapMOHRIntro .sapMText,",
								"                .nepDialogWithObjHeader .sapMOHRIcon .sapUiIcon,",
								"                .nepDialogWithObjHeader .sapMBtnIcon,",
								"                .nepDialogSubObjHeader .sapMText {",
								"                    color: ${layout.TOP_TXT_COLOR};",
								"                    text-shadow: none;",
								"                }",
								"                .nepDialogWithObjHeader",
								"                    :not(.sapMBtnDisabled)",
								"                    > .sapMBtnInner.sapMBtnActive",
								"                    .sapMBtnIcon {",
								"                    color: ${layout.TOP_TXT_COLOR};",
								"                    text-shadow: none;",
								"                }",
								"                .nepPopover .sapMBtnIcon {",
								"                    color: ${layout.TOP_TXT_COLOR};",
								"                    text-shadow: none;",
								"                }",
								"            `;",
								"        }",
								"",
								"        if (layout.TOP_MENU_COLOR) {",
								"            css += `",
								"                .nepListMenu .sapMSLITitleOnly,",
								"                .nepListMenu .sapMSLIImgIcon {",
								"                    color: ${layout.TOP_MENU_COLOR};",
								"                }",
								"                .nepListSetting .sapMLIBHoverable:hover {",
								"                    background: transparent;",
								"                    border: 1px solid ${layout.TOP_MENU_COLOR};",
								"                }",
								"                .nepUserActionText.sapMText {",
								"                    color: ${layout.TOP_MENU_COLOR};",
								"                }",
								"            `;",
								"        }",
								"        ",
								"        if (layout.TOP_HOV_COLOR) {",
								"            css += `",
								"                .nepTopMenu span.sapMBtnInner:hover,",
								"                .nepTopMenu .sapMBtnCustomIcon:hover,",
								"                .nepTopMenu .nepTopMenuActive span.sapMBtnInner:hover,",
								"                .nepTopMenu .nepTopMenuActiveHover span.sapMBtnInner,",
								"                .nepTopMenu :not(.sapMBtnDisabled) > .sapMBtnInner.sapMBtnActive .sapMBtnIcon,",
								"                .nepPopover .sapMIBar-CTX.sapMHeader-CTX :not(.sapMBtnDisabled) > .sapMBtnActive,",
								"                .nepPopover .sapMIBar-CTX.sapMFooter-CTX :not(.sapMBtnDisabled) > .sapMBtnActive,",
								"                .nepPopover :not(.sapMBtnDisabled) > .sapMBtnInner.sapMBtnActive .sapMBtnIcon,",
								"                .nepTopMenu .sapMBtn:hover > .sapMBtnTransparent.sapMBtnHoverable:not(.sapMBtnActive):not(.sapMToggleBtnPressed),",
								"                .nepTopMenu .sapMIBar-CTX .sapMBtn:hover > .sapMBtnTransparent.sapMBtnHoverable:not(.sapMBtnActive):not(.sapMToggleBtnPressed),",
								"                .nepTopMenu .sapMBtn:hover:not(.sapMBtnDisabled) > .sapMBtnHoverable.sapMBtnTransparent:not(.sapMBtnActive):not(.sapMToggleBtnPressed) > .sapMBtnIcon,",
								"                .nepTopMenu *.sapMBtn:hover:not(.sapMBtnDisabled) > span.sapMBtnInner.sapMBtnTransparent:not(.sapMBtnActive):not(.sapMToggleBtnPressed) > .sapMBtnIcon,",
								"                .nepTopMenu :not(.sapMBtnDisabled):not(.sapMSBActive) > span.sapMBtnInner.sapMBtnTransparent:not(.sapMBtnActive):not(.sapMToggleBtnPressed):hover > .sapMBtnIcon,",
								"                .nepTopMenu .sapMBtn:hover > .sapMBtnHoverable {",
								"                    color: ${layout.TOP_HOV_COLOR};",
								"                }",
								"            `;",
								"        }",
								"",
								"        if (layout.TOP_HOV_BACK) {",
								"            css += `",
								"                .nepTopMenu span.sapMBtnInner:hover,",
								"                .nepTopMenu .sapMBtnCustomIcon:hover,",
								"                .nepTopMenu .nepTopMenuActive span.sapMBtnInner:hover,",
								"                .nepTopMenu .sapMBtn:hover > .sapMBtnHoverable,",
								"                .nepTopMenu :not(.sapMBtnDisabled) > .sapMBtnInner.sapMBtnActive .sapMBtnIcon,",
								"                .nepTopMenu .nepTopMenuActive span.sapMBtnInner:hover,",
								"                .nepPopover .sapMIBar-CTX.sapMHeader-CTX :not(.sapMBtnDisabled) > .sapMBtnActive,",
								"                .nepPopover .sapMIBar-CTX.sapMFooter-CTX :not(.sapMBtnDisabled) > .sapMBtnActive,",
								"                .nepTopMenu .sapMBtn:hover > .sapMBtnHoverable,",
								"                .nepTopMenu :not(.sapMBtnDisabled) > .sapMBtnInner.sapMBtnActive,",
								"                .nepTopMenu :not(.sapMBtnDisabled) > .sapMBtnInner.sapMBtnActive .sapMBtnIcon,",
								"                .nepTopMenu .sapMBtn:hover > .sapMBtnTransparent.sapMBtnHoverable:not(.sapMBtnActive):not(.sapMToggleBtnPressed),",
								"                .nepTopMenu .sapMIBar-CTX .sapMBtn:hover > .sapMBtnTransparent.sapMBtnHoverable:not(.sapMBtnActive):not(.sapMToggleBtnPressed),",
								"                .nepTopMenu .sapMBtn:hover:not(.sapMBtnDisabled) > .sapMBtnHoverable.sapMBtnTransparent:not(.sapMBtnActive):not(.sapMToggleBtnPressed) > .sapMBtnIcon,",
								"                .nepTopMenu *.sapMBtn:hover:not(.sapMBtnDisabled) > span.sapMBtnInner.sapMBtnTransparent:not(.sapMBtnActive):not(.sapMToggleBtnPressed) > .sapMBtnIcon,",
								"                .nepTopMenu :not(.sapMBtnDisabled):not(.sapMSBActive) > span.sapMBtnInner.sapMBtnTransparent:not(.sapMBtnActive):not(.sapMToggleBtnPressed):hover > .sapMBtnIcon,",
								"                .nepTopMenu .nepTopMenuActiveHover span.sapMBtnInner {",
								"                    background-color: ${layout.TOP_HOV_BACK};",
								"                    border-color: ${layout.TOP_HOV_BACK};",
								"                }",
								"            `;",
								"        }",
								"        ",
								"        if (layout.TOP_NOTIF_BACK) {",
								"            css += `",
								"                .nepTopMenu .nepNotificationButton span.sapMBtnInner,",
								"                .nepTopMenu .nepNotificationButton.sapMBtn:hover > .sapMBtnHoverable {",
								"                    background-color: ${layout.TOP_NOTIF_BACK};",
								"                    border-color: ${layout.TOP_NOTIF_BACK};",
								"                }",
								"            `;",
								"        }",
								"",
								"        if (layout.TOP_NOTIF_COLOR) {",
								"            css += `",
								"                .nepTopMenu .nepNotificationButton span.sapMBtnInner {",
								"                    color: ${layout.TOP_NOTIF_COLOR};",
								"                }",
								"                .nepTopMenu .nepNotificationButton span.sapMBtnInner:hover {",
								"                    color: ${layout.TOP_NOTIF_COLOR};",
								"                }",
								"                .nepTopMenu .nepNotificationButton.sapMBtn:hover > .sapMBtnHoverable,",
								"                .nepTopMenu :not(.sapMBtnDisabled) > .sapMBtnInner.sapMBtnActive {",
								"                    color: ${layout.TOP_NOTIF_COLOR};",
								"                }",
								"            `;",
								"        } else {",
								"            css += `",
								"                .nepTopMenu .nepNotificationButton span.sapMBtnInner {",
								"                    color: ${layout.TOP_TXT_COLOR};",
								"                }",
								"                .nepTopMenu .nepNotificationButton.sapMBtn:hover > .sapMBtnHoverable,",
								"                .nepTopMenu :not(.sapMBtnDisabled) > .sapMBtnInner.sapMBtnActive {",
								"                    color: ${layout.TOP_TXT_COLOR};",
								"                }",
								"            `;",
								"        }",
								"",
								"        // Left Sidebar",
								"        if (layout.SIDE_BACK_COLOR) css += `.nepNavBar { background: ${layout.SIDE_BACK_COLOR}; }`;",
								"        if (layout.SIDE_BOR_COLOR) css += `.nepNavBarContent { border-right: 1px solid ${layout.SIDE_BOR_COLOR}; }`;",
								"        if (layout.SIDE_ACT_COLOR) css += `.nepIconActive { border-left: 4px solid ${layout.SIDE_ACT_COLOR} !important; }`;",
								"        if (layout.SIDE_ACT_COLOR) css += `",
								"            html[dir=\"rtl\"] .nepIconActive {",
								"                border-left: none !important;",
								"                border-right: 4px solid ${layout.SIDE_ACT_COLOR} !important;",
								"            }",
								"        `;",
								"",
								"        // Shell",
								"        if (layout.SHELL_BACK_COLOR) css += `.nepShell { background: ${layout.SHELL_BACK_COLOR} !important; }`;",
								"",
								"        // Page",
								"        if (layout.PAGE_BACK_COLOR) css += `.nepPage { background: ${layout.PAGE_BACK_COLOR}; }`;",
								"        else css += '.nepPage { background: #fff; }';",
								"",
								"        if (layout.PAGE_BACK_IMAGE) {",
								"            let imageUrl = mediaUrl + layout.PAGE_BACK_IMAGE;",
								"            if (isMobile || isHCP) imageUrl = imageData[layout.PAGE_BACK_IMAGE] || imageUrl;",
								"",
								"            css += `",
								"                nepShell .sapMShellBG.sapUiGlobalBackgroundImage {",
								"                    background: inherit;",
								"                    background-image: url('${imageUrl}');",
								"                    background-repeat: no-repeat;",
								"                    background-size: cover;",
								"                }",
								"            `;",
								"        } else {",
								"            css += '.nepShell .sapMShellBG.sapUiGlobalBackgroundImage { background: inherit; background-image: none; }';",
								"        }",
								"",
								"        // Tile Group",
								"        if (layout.HEAD_COLOR) css += `.nepCatPanel { background-color: ${layout.HEAD_COLOR}; }`;",
								"",
								"        let borderWidth = layout.HEAD_BORDER_WDT || '3px';",
								"        if (layout.HEAD_BORDER_CLR) css += `.nepCatPanel { border-bottom: ${borderWidth} solid ${layout.HEAD_BORDER_CLR}; }`;",
								"",
								"        if (layout.TITLE_COLOR) {",
								"            css += `",
								"                .nepCatTitle.sapMTitle {",
								"                    color: ${layout.TITLE_COLOR};",
								"                }",
								"                .nepCatFavBtn:not(.sapMBtnDisabled) .sapMBtnTransparent > .sapMBtnIcon,",
								"                .nepCatFavBtn:not(.sapMBtnDisabled) .sapMBtnGhost > .sapMBtnIcon {",
								"                    color: ${layout.TITLE_COLOR};",
								"                    text-shadow: none;",
								"                }",
								"            `;",
								"        }",
								"        ",
								"        if (layout.SUBTITLE_COLOR) css += `.nepCatSubTitle.sapMTitle { color: ${layout.SUBTITLE_COLOR}; }`;",
								"",
								"        // Tiles",
								"        if (layout.TILE_BACK_COLOR) css += `.nepTile { background-color: ${layout.TILE_BACK_COLOR}; }`;",
								"",
								"        // Sub Menu Background Color",
								"        if (layout.NAV_BACK_COLOR) {",
								"            css += `",
								"                .nepOverflowMenu.sapMPopover .sapMPopoverCont {",
								"                    background-color: ${layout.NAV_BACK_COLOR};",
								"                }",
								"                .nepOverflowMenu .sapMLIB {",
								"                    background: transparent;",
								"                }",
								"            `;",
								"        }",
								"",
								"        // Sub Menu Text Color",
								"        if (layout.NAV_TXT_COLOR) {",
								"            css += `",
								"                .nepPopover .nepOpenAppsBtn .sapMBtnIcon,",
								"                .nepOpenAppsBtn .sapMBtnInner,",
								"                .nepOverflowMenu .nepOpenAppsBtn .sapMBtnInner,",
								"                .nepOpenAppsClose.sapUiIcon,",
								"                .nepOverflowMenu .sapMBtnInner,",
								"                .nepOverflowMenu .sapMSTIIcon,",
								"                .nepOverflowMenu .nepTreeCategory .sapMTreeItemBaseExpander,",
								"                .nepOverflowMenu .sapMTreeItemBase {",
								"                    color: ${layout.NAV_TXT_COLOR};",
								"                    text-shadow: none;",
								"                }",
								"            `;",
								"        }",
								"",
								"        // Sub Menu Text Hover Color",
								"        if (layout.NAV_HOV_COLOR) css += `.nepOverflowMenu .sapMBtn:hover > .sapMBtnHoverable { color: ${layout.NAV_HOV_COLOR}; }`;",
								"",
								"        // Tile Button",
								"        css += sap.nep.Style.getTileButtonCss({ layout });",
								"",
								"        // Scrollbar",
								"        if (layout.SCROLL_COLOR) css += `",
								"            html.sap-desktop ::-webkit-scrollbar-thumb {",
								"                background-color: ${layout.SCROLL_COLOR};",
								"            }",
								"            html.sap-desktop ::-webkit-scrollbar-thumb:hover {",
								"                background-color: ${layout.SCROLL_COLOR};",
								"            }",
								"",
								"        `;",
								"",
								"        if (layout.SCROLL_WIDTH) css += `",
								"            html.sap-desktop ::-webkit-scrollbar {",
								"                width: ${layout.SCROLL_WIDTH} !important;",
								"                height: ${layout.SCROLL_WIDTH} !important;",
								"            }",
								"        `;",
								"",
								"        // Mobile",
								"        if (layout.MOB_TITLE_COL) css += `.nepMobileTitle.sapMTitle { color: ${layout.MOB_TITLE_COL}; text-shadow: none; }`;",
								"        if (layout.MOB_LABEL_COL) css += `.nepMobileLabel { color: ${layout.MOB_LABEL_COL}; text-shadow: none; }`;",
								"        if (layout.MOB_BUT_COL) css += `.nepMobileButton .sapMBtnInner { color: ${layout.MOB_BUT_COL} !important; text-shadow: none !important; }`;",
								"        if (layout.MOB_BUT_BACK) {",
								"            css += `",
								"                .nepMobileButton .sapMBtnInner {",
								"                    background: ${layout.MOB_BUT_BACK} !important;",
								"                    border-color: ${layout.MOB_BUT_BACK} !important;",
								"                }",
								"                .numPad .sapMBtnInner {",
								"                    background: ${layout.MOB_BUT_BACK};",
								"                }",
								"                #boxNumpadPanel .sapMCbBg {",
								"                    background: ${layout.MOB_BUT_BACK};",
								"                    opacity: 0.325;",
								"                }",
								"                #boxNumpadPanel .sapMCbBg.sapMCbMarkChecked {",
								"                    background: ${layout.MOB_BUT_BACK};",
								"                    opacity: 1;",
								"                }",
								"            `;",
								"        }",
								"",
								"        // Custom CSS",
								"        if (layout.CUSTOM_CSS) css += layout.CUSTOM_CSS.replace(/\\n|\\r\\n|\\r/g, '');",
								"        css += '</style>';",
								"",
								"        return { css };",
								"    },",
								"",
								"    getTileButtonCss: function (config) {",
								"        return '';",
								"    }",
								"};"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "2b08c61a-a00f-4ce4-dec2-8cb0c7a169e3",
							"fieldName": "sap.n.Util",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"sap.n.Utils = {",
								"    message: function (config) {",
								"        let title = config.title || 'Message';",
								"        let intro = config.intro || '';",
								"        let text1 = config.text1 || '';",
								"        let text2 = config.text2 || '';",
								"        let text3 = config.text3 || '';",
								"        let icon = config.icon || '';",
								"",
								"        objHeaderMessage.setTitle(title);",
								"        objHeaderMessage.setIntro(intro);",
								"        txtMessage1.setText(text1);",
								"        txtMessage2.setText(text2);",
								"        txtMessage3.setText(text3);",
								"        acceptMessage.setText(config.acceptText);",
								"        declineMessage.setText(config.declineText);",
								"",
								"        txtMessage1.setVisible(!!text1);",
								"        txtMessage2.setVisible(!!text2);",
								"        txtMessage3.setVisible(!!text3);",
								"",
								"        if (config.acceptText) {",
								"            diaMessage.setBeginButton(acceptMessage);",
								"        }",
								"        ",
								"        if (config.declineText) {",
								"            diaMessage.setEndButton(declineMessage);",
								"        }",
								"",
								"        switch (config.state) {",
								"            case 'Error':",
								"                objHeaderMessage.setIcon('sap-icon://fa-solid/exclamation-circle');",
								"                objHeaderMessage.addStyleClass('nepStateError');",
								"                break;",
								"",
								"            case 'Warning':",
								"                objHeaderMessage.setIcon('sap-icon://fa-solid/exclamation-circle');",
								"                objHeaderMessage.addStyleClass('nepStateWarning');",
								"                break;",
								"",
								"            case 'Success':",
								"                objHeaderMessage.setIcon('sap-icon://fa-solid/info-circle');",
								"                objHeaderMessage.addStyleClass('nepStateSuccess');",
								"                break;",
								"",
								"            default:",
								"                objHeaderMessage.setIcon('sap-icon://fa-solid/info-circle');",
								"                break;",
								"        }",
								"",
								"        if (icon) {",
								"            objHeaderMessage.setIcon(icon);",
								"        }",
								"",
								"        diaMessage.onClose = config.onClose || function () { };",
								"        diaMessage.onAccept = config.onAccept || function () { };",
								"        diaMessage.onDecline = config.onDecline || function () { };",
								"        diaMessage.open();",
								"    },",
								"",
								"    setLogonScreen: function () {",
								"        AppCache_butLogon.setVisible(true);",
								"        AppCache_inUsername.setVisible(false);",
								"        AppCache_inPassword.setVisible(false);",
								"        AppCache_inRememberMe.setVisible(false);",
								"        AppCache_inShowPass.setVisible(false);",
								"",
								"        AppCache_inUsername.setValueState();",
								"        AppCache_inPassword.setValueState();",
								"",
								"        let logonData = AppCache.getLogonTypeInfo(AppCache_loginTypes.getSelectedKey());",
								"        switch (logonData.type) {",
								"            case 'azure-bearer':",
								"            case 'openid-connect':",
								"            case 'saml':",
								"                AppCache_inUsername.setVisible(false);",
								"                AppCache_inPassword.setVisible(false);",
								"                break;",
								"",
								"            case 'ldap':",
								"                AppCache_inUsername.setVisible(true);",
								"                AppCache_inPassword.setVisible(true);",
								"                AppCache_inShowPass.setVisible(true);",
								"                break;",
								"",
								"            // Local ",
								"            case 'local':",
								"                if (!AppCache.enablePasscode) AppCache_inRememberMe.setVisible(true);",
								"                AppCache_inUsername.setVisible(true);",
								"                AppCache_inPassword.setVisible(true);",
								"                AppCache_inShowPass.setVisible(true);",
								"                break;",
								"        }",
								"    }",
								"}"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "089c81af-0a55-4a1b-c874-bac012ced5a9",
							"fieldName": "sap.n.Webauthn",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"sap.n.Webauthn = {\r",
								"    register: function (userinfo) {\r",
								"        return new Promise(function (resolve) {\r",
								"            let challenge = new Uint8Array(16);\r",
								"            let userid = new Uint8Array(16);\r",
								"            let publicKeyCredentialOptions = {\r",
								"                challenge: window.crypto.getRandomValues(challenge),\r",
								"                rp: {\r",
								"                    name: 'Neptune DX Platform',\r",
								"                    id: location.hostname\r",
								"                },\r",
								"                user: {\r",
								"                    id: window.crypto.getRandomValues(userid),\r",
								"                    name: userinfo.username,\r",
								"                    displayName: userinfo.name,\r",
								"                },\r",
								"                pubKeyCredParams: [\r",
								"                    { 'type': 'public-key', 'alg': -7 },\r",
								"                    { 'type': 'public-key', 'alg': -35 },\r",
								"                    { 'type': 'public-key', 'alg': -36 },\r",
								"                    { 'type': 'public-key', 'alg': -257 },\r",
								"                    { 'type': 'public-key', 'alg': -258 },\r",
								"                    { 'type': 'public-key', 'alg': -259 },\r",
								"                    { 'type': 'public-key', 'alg': -37 },\r",
								"                    { 'type': 'public-key', 'alg': -38 },\r",
								"                    { 'type': 'public-key', 'alg': -39 },\r",
								"                    { 'type': 'public-key', 'alg': -8 }],\r",
								"                authenticatorSelection: {\r",
								"                    requireResidentKey: false,\r",
								"                    userVerification: 'discouraged',\r",
								"                },\r",
								"                transports: ['usb', 'ble', 'nfc'],\r",
								"                timeout: 60000,\r",
								"                attestation: 'none',\r",
								"                extensions: {\r",
								"                    auth: userinfo.auth\r",
								"                }\r",
								"            };\r",
								"\r",
								"            // Create User\r",
								"            navigator.credentials.create({\r",
								"                publicKey: publicKeyCredentialOptions\r",
								"            }).then(function (credential) {\r",
								"                let decodedAttestationObject = CBOR.decode(credential.response.attestationObject);\r",
								"                let { authData } = decodedAttestationObject;\r",
								"                let dataView = new DataView(new ArrayBuffer(2));\r",
								"                let idLenBytes = authData.slice(53, 55);\r",
								"\r",
								"                idLenBytes.forEach((value, index) => dataView.setUint8(index, value));\r",
								"                let credentialIdLength = dataView.getUint16();\r",
								"                let credentialId = authData.slice(55, 55 + credentialIdLength);\r",
								"\r",
								"                resolve(sap.n.Webauthn.bufferEncode(credentialId));\r",
								"\r",
								"            }).catch(function (e) {\r",
								"                appCacheLog(e);\r",
								"                resolve('ERROR');\r",
								"            });\r",
								"        });\r",
								"    },\r",
								"\r",
								"    login: function (userId) {\r",
								"        return new Promise(function (resolve) {\r",
								"            const challenge = new Uint8Array(16);\r",
								"            const publicKeyCredentialOptions = {\r",
								"                challenge: window.crypto.getRandomValues(challenge),\r",
								"                allowCredentials: [{\r",
								"                    id: sap.n.Webauthn.bufferDecode(userId),\r",
								"                    type: 'public-key',\r",
								"                }],\r",
								"                userVerification: 'discouraged',\r",
								"                rpId: location.hostname,\r",
								"                timeout: 60000\r",
								"            };\r",
								"\r",
								"            // Get User\r",
								"            navigator.credentials.get({\r",
								"                publicKey: publicKeyCredentialOptions\r",
								"            })\r",
								"            .then(resolve)\r",
								"            .catch(function (e) {\r",
								"                appCacheLog(e);\r",
								"                resolve(e);\r",
								"            });\r",
								"        });\r",
								"    },\r",
								"\r",
								"    string2buffer: function (str) {\r",
								"        return (new Uint8Array(str.length)).map(function (x, i) {\r",
								"            return str.charCodeAt(i)\r",
								"        });\r",
								"    },\r",
								"\r",
								"    bufferEncode: function (value) {\r",
								"        return sap.n.Webauthn.fromByteArray(value);\r",
								"    },\r",
								"\r",
								"    bufferDecode: function (value) {\r",
								"        return Uint8Array.from(atob(value), c => c.charCodeAt(0));\r",
								"    },\r",
								"\r",
								"    buffer2string: function (buf) {\r",
								"        let str = '';\r",
								"        if (!(buf.constructor === Uint8Array)) buf = new Uint8Array(buf);\r",
								"        buf.map(function (x) {\r",
								"            return str += String.fromCharCode(x)\r",
								"        });\r",
								"        return str;\r",
								"    },\r",
								"\r",
								"    fromByteArray: function (uint8) {\r",
								"        let lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/-';\r",
								"        let i;\r",
								"        let extraBytes = uint8.length % 3;\r",
								"        let output = '';\r",
								"        let temp, length;\r",
								"\r",
								"        function encode(num) {\r",
								"            return lookup.charAt(num);\r",
								"        }\r",
								"\r",
								"        function tripletToBase64(num) {\r",
								"            return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\r",
								"        }\r",
								"\r",
								"        for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\r",
								"            temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\r",
								"            output += tripletToBase64(temp)\r",
								"        }\r",
								"\r",
								"        switch (extraBytes) {\r",
								"            case 1:\r",
								"                temp = uint8[uint8.length - 1];\r",
								"                output += encode(temp >> 2);\r",
								"                output += encode((temp << 4) & 0x3F);\r",
								"                output += '==';\r",
								"                break;\r",
								"            case 2:\r",
								"                temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1]);\r",
								"                output += encode(temp >> 10);\r",
								"                output += encode((temp >> 4) & 0x3F);\r",
								"                output += encode((temp << 2) & 0x3F);\r",
								"                output += '=';\r",
								"                break;\r",
								"            default:\r",
								"                break;\r",
								"        }\r",
								"\r",
								"        return output;\r",
								"    }\r",
								"}"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "555f5a27-476c-4fcb-c778-0922751cf7a2",
							"fieldName": "AppCache",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"// AppCache Variables",
								"let AppCache = {",
								"    // Common  ",
								"    Initialized: false,",
								"    userInfo: '',",
								"    CurrentUser: '',",
								"    CurrentApp: '',",
								"    CurrentConfig: '',",
								"    View: [],",
								"    ViewChild: [],",
								"    Dialogs: [],",
								"    isOffline: false,",
								"    isHCP: false,",
								"    isRestricted: true,",
								"    hcpDestination: '',",
								"    StartApp: '',",
								"    useMenu: true,",
								"    Url: '',",
								"    CustomLogo: '',",
								"    LoadOptions: {},",
								"    diaView: '',",
								"    loadQueue: new Array(),",
								"    loadRunning: false,",
								"    enablePush: false,",
								"    enableTrace: false,",
								"    enableLogging: false,",
								"    enableAutoLogin: false,",
								"    showTFAError: false,",
								"    hideSidemenu: false,",
								"    logoutUrl: '',",
								"    defaultTheme: 'sap_fiori_3',",
								"    launchpadTitle: '',",
								"    launchpadID: '',",
								"    timerLock: 0,",
								"    isPublic: false,",
								"    limitWidth: false,",
								"    pushSenderId: '',",
								"    hideTopHeader: false,",
								"    hideGlobalAjaxError: false,",
								"    setupResetHandler: false,",
								"    inactivityTimer: '',",
								"    sapCAICustomData: {},",
								"    cssGridBreakpoints: {",
								"        xxxlarge: 2360,",
								"        xxlarge: 1880,",
								"        xlarge: 1580,",
								"        large: 1280,",
								"        medium: 980,",
								"        small: 680,",
								"        xsmall: 380",
								"    },",
								"",
								"    // Mobile ",
								"    mobileClient: '',",
								"    isMobile: false,",
								"    enablePasscode: false,",
								"    biometricAuthentication: false,",
								"    passcodeLength: 4,",
								"    numPasscode: 5,",
								"    Encrypted: '',",
								"    loginApp: '',",
								"    samlData: false,",
								"    inBackground: false,",
								"",
								"    loadLibrary: function (url) {",
								"        return new Promise(function (resolve) {",
								"            request({",
								"                type: 'GET',",
								"                url: url,",
								"                success: function (data) {",
								"                    resolve('OK');",
								"                },",
								"                error: function (jqXHR, textStatus, errorThrown) {",
								"                    resolve('ERROR');",
								"                },",
								"                dataType: 'script',",
								"                cache: true",
								"            });",
								"        });",
								"    },",
								"",
								"    _loadQueue: function () {",
								"        this.loadRunning = false;",
								"",
								"        let appData = this.loadQueue[0];",
								"        if (appData) {",
								"            this.loadQueue.splice(0, 1);",
								"            this.Load(appData.APPLID, appData.OPTIONS);",
								"        }",
								"    },",
								"",
								"    //  AppCache Methods",
								"    Load: function (value, options) {",
								"        // Check Queue - Put in queue of working",
								"        if (this.loadRunning) {",
								"            let appData = {",
								"                'APPLID': value,",
								"                'OPTIONS': options || {}",
								"            };",
								"            this.loadQueue.push(appData);",
								"            return;",
								"        }",
								"",
								"        this.loadRunning = true;",
								"",
								"        // Format ID",
								"        let applid = value.replace(/\\//g, '');",
								"",
								"        // Set Current App",
								"        AppCache.CurrentApp = value;",
								"",
								"        // Load Defaults",
								"        options = options || {};",
								"",
								"        AppCache.LoadOptions = {",
								"            dialogShow: options.dialogShow || false,",
								"            dialogHeight: options.dialogHeight || '90%',",
								"            dialogWidth: options.dialogWidth || '1200px',",
								"            dialogTitle: options.dialogTitle || '',",
								"            dialogIcon: options.dialogIcon || '',",
								"            dialogModal: options.dialogModal || false,",
								"            dialogHideMinimize: options.dialogHideMinimize || false,",
								"            dialogHideMosaic: options.dialogHideMosaic || false,",
								"            dialogHideMaximize: options.dialogHideMaximize || false,",
								"            onDialogClose: options.onDialogClose || function () { },",
								"            load: options.load || '',",
								"            parentObject: options.parentObject || '',",
								"            appGUID: options.appGUID || '',",
								"            appPath: options.appPath || '',",
								"            appAuth: options.appAuth || '',",
								"            appType: options.appType || '',",
								"            startParams: options.startParams || '',",
								"            openFullscreen: options.openFullscreen || false,",
								"            rootDir: options.rootDir || '',",
								"            sapICFNode: options.sapICFNode || '',",
								"            defaultLanguage: options.defaultLanguage || \"\",",
								"        }",
								"",
								"        // Check for AppCache.Load when Remote System",
								"        if (!AppCache.LoadOptions.appPath && (sap.n.Launchpad.currentTile && sap.n.Launchpad.currentTile.urlApplication)) {",
								"            AppCache.LoadOptions.appPath = sap.n.Launchpad.currentTile.urlApplication;",
								"            AppCache.LoadOptions.appType = sap.n.Launchpad.currentTile.urlType;",
								"            AppCache.LoadOptions.appAuth = sap.n.Launchpad.currentTile.urlAuth;",
								"        }",
								"",
								"        // Busyindicator Handling",
								"        if (AppCache.LoadOptions.parentObject) {",
								"            if (typeof AppCache.LoadOptions.parentObject.setBusy === 'function') {",
								"                AppCache.LoadOptions.parentObject.setBusy(true);",
								"            }",
								"        }",
								"",
								"        // Get App from Memory",
								"        if (!AppCache.LoadOptions.dialogShow) {",
								"            if (AppCache.LoadOptions.appGUID) {",
								"                if (AppCache.View[AppCache.LoadOptions.appGUID]) {",
								"                    AppCache.buildView(value);",
								"                    return;",
								"                }",
								"            } else {",
								"                if (AppCache.View[applid]) {",
								"                    AppCache.buildView(value);",
								"                    return;",
								"                }",
								"            }",
								"        }",
								"",
								"        // Get App from DB/LS if exist in repository",
								"        let app = ModelData.FindFirst(AppCacheData, ['application', 'language', 'appPath'], [value.toUpperCase(), AppCache.userInfo.language, AppCache.LoadOptions.appPath]);",
								"        if (app) {",
								"            if (AppCache.isOffline || !app.invalid) {",
								"                let viewName = 'app:' + value + ':' + AppCache.userInfo.language + ':' + AppCache.LoadOptions.appPath;",
								"                if (typeof p9Database !== 'undefined' && p9Database !== null) {",
								"                    p9GetView(viewName.toUpperCase()).then(function (viewData) {",
								"                        if (viewData.length > 2) {",
								"                            AppCache.initView(value, viewData);",
								"                        } else {",
								"                            AppCache.getView(value);",
								"                        }",
								"                    });",
								"                } else {",
								"                    let data = sapStorageGet(viewName.toUpperCase());",
								"                    if (data) {",
								"                        AppCache.initView(value, data);",
								"                    } else {",
								"                        AppCache.getView(value);",
								"                    }",
								"                }",
								"            } else {",
								"                AppCache.getView(value);",
								"            }",
								"        } else {",
								"            AppCache.getView(value);",
								"        }",
								"",
								"    },",
								"",
								"    LoadAdaptive: function (id, options) {",
								"        if (!options) options = {};",
								"",
								"        sap.n.Adaptive.getConfig(id).then(function (config) {",
								"            // Exists ? ",
								"            if (!config) {",
								"                sap.m.MessageToast.show(AppCache_tAdaptiveNotFound.getText());",
								"                return;",
								"            }",
								"",
								"            // Merge from Options",
								"            if (options && options.startParams) {",
								"                if (options.startParams.data) config.settings.data = options.startParams.data;",
								"                if (options.startParams.navigation) config.settings.navigation = options.startParams.navigation;",
								"                if (options.startParams.events) config.settings.events = options.startParams.events;",
								"            }",
								"",
								"            AppCache.Load(config.application, {",
								"                appGUID: ModelData.genID(),",
								"                startParams: config,",
								"                dialogShow: options.dialogShow || false,",
								"                dialogHeight: options.dialogHeight || '90%',",
								"                dialogWidth: options.dialogWidth || '1200px',",
								"                dialogTitle: options.dialogTitle || '',",
								"                dialogIcon: options.dialogIcon || '',",
								"                dialogModal: options.dialogModal || false,",
								"                dialogHideMinimize: options.dialogHideMinimize || false,",
								"                dialogHideMosaic: options.dialogHideMosaic || false,",
								"                dialogHideMaximize: options.dialogHideMaximize || false,",
								"                load: options.load || '',",
								"                parentObject: options.parentObject || '',",
								"                appPath: options.appPath || '',",
								"                appAuth: options.appAuth || '',",
								"                appType: options.appType || '',",
								"                openFullscreen: options.openFullscreen || false,",
								"                rootDir: options.rootDir || '',",
								"                sapICFNode: options.sapICFNode || ''",
								"            });",
								"        });",
								"    },",
								"",
								"    LoadAdaptiveSidepanel: function (id, title, options) {",
								"        if (!options) options = {};",
								"        sap.n.Adaptive.getConfig(id).then(function (config) {",
								"            // Exists ? ",
								"            if (!config) {",
								"                sap.m.MessageToast.show(AppCache_tAdaptiveNotFound.getText());",
								"                return;",
								"            }",
								"",
								"            // Merge from Options",
								"            if (options && options.startParams) {",
								"                if (options.startParams.data) config.settings.data = options.startParams.data;",
								"                if (options.startParams.navigation) config.settings.navigation = options.startParams.navigation;",
								"                if (options.startParams.events) config.settings.events = options.startParams.events;",
								"            }",
								"",
								"            sap.n.Shell.loadSidepanel(config.application, title, {",
								"                appGUID: ModelData.genID(),",
								"                icon: options.icon || '',",
								"                additionaltext: options.additionaltext || '',",
								"                startParams: config,",
								"            });",
								"        });",
								"    },",
								"",
								"    LoadWebApp: function (value, options) {",
								"        let dataTile = {",
								"            actionWebApp: value,",
								"            openFullscreen: true,",
								"        };",
								"",
								"        let dataCat = {};",
								"        let viewName = 'webapp:' + value + ':' + dataTile.urlApplication;",
								"        let webApp = ModelData.FindFirst(AppCacheData, ['application', 'appPath'], [dataTile.actionWebApp, dataTile.urlApplication]);",
								"",
								"        if (webApp) {",
								"            // Get App from Memory",
								"            if (AppCache.View[viewName]) {",
								"                AppCache.buildWebApp(dataTile, null, dataCat);",
								"                return;",
								"            }",
								"",
								"            // Get App from Cache",
								"            if (typeof p9Database !== 'undefined' && p9Database !== null) {",
								"                p9GetView(viewName).then(function (viewData) {",
								"                    if (viewData.length > 10 && !webApp.invalid) {",
								"                        AppCache.buildWebApp(dataTile, viewData, dataCat);",
								"                    } else {",
								"                        AppCache.getWebApp(dataTile, dataCat);",
								"                    }",
								"                });",
								"            } else {",
								"                let data = sapStorageGet(viewName);",
								"                if (data && !webApp.invalid) {",
								"                    AppCache.buildWebApp(dataTile, data, dataCat);",
								"                } else {",
								"                    AppCache.getWebApp(dataTile, dataCat);",
								"                }",
								"            }",
								"        } else {",
								"            AppCache.getWebApp(dataTile, dataCat);",
								"        }",
								"    },",
								"",
								"    // AppCache Methods",
								"    restrictedEnable: function () {",
								"        // Objects",
								"        AppCacheShellUser.setText();",
								"        AppCacheShellBack.setVisible(false);",
								"        AppCacheUserActionSettings.setVisible(false);",
								"        AppCacheShellMenu.setVisible(false);",
								"        AppCacheShellHelp.setVisible(false);",
								"        AppCacheUserActionPassword.setVisible(false);",
								"        launchpadContentMenu.setWidth('0px');",
								"        sap.n.Shell.closeSidepanel();",
								"        sap.n.Shell.closeAllSidepanelTabs();",
								"        sap.n.Launchpad.setLaunchpadContentWidth();",
								"",
								"        // Turn off",
								"        blockRunningRow.destroyContent();",
								"        AppCacheAppButton.removeAllItems();",
								"",
								"        // Close all Tiles - Clear memory",
								"        for (let key in AppCache.View) {",
								"            let tile = ModelData.FindFirst(AppCacheTiles, 'GUID', key);",
								"            if (tile && tile.GUID) sap.n.Shell.closeTile(tile);",
								"        }",
								"",
								"        // Close AppCache.Load Apps",
								"        for (let key in sap.n.Apps) {",
								"            if (AppCache.View[key]) {",
								"                AppCache.View[key].destroy();",
								"                AppCache.View[key] = null;",
								"                delete sap.n.Apps[key];",
								"            }",
								"        }",
								"",
								"        // Data",
								"        modelAppCacheTiles.setData([]);",
								"        modelAppCacheDiaSettings.setData([]);",
								"        modelAppCacheTilesRun.setData([]);",
								"        modelAppCacheTilesRun.setData([]);",
								"",
								"        AppCache.userInfo = {};",
								"",
								"        // Clear Pages",
								"        AppCacheNav.getPages().forEach(function (data) {",
								"            if (",
								"                ![",
								"                    'AppCachePageMenu', 'AppCachePageStore', 'AppCache_boxURL',",
								"                    'AppCache_boxLogon', 'AppCache_boxLogonCustom', 'AppCache_boxPassword',",
								"                    'AppCache_boxPasscode', 'AppCache_boxPasscodeEntry', 'AppCache_boxUsers'",
								"                ].includes(data.sId)",
								"            ) {",
								"                AppCacheNav.removePage(data.sId);",
								"                data.destroy();",
								"                data = null;",
								"            }",
								"        });",
								"",
								"        // Clear external URL",
								"        let elem = document.getElementById('AppCache_URLDiv');",
								"        if (elem) elem.innerHTML = '';",
								"",
								"        // Clear Views",
								"        AppCache.View = [];",
								"",
								"        // Clear timers",
								"        for (let key in sap.n.Launchpad.Timers) {",
								"            clearInterval(sap.n.Launchpad.Timers[key].timer);",
								"        }",
								"",
								"        if (AppCacheLogonAzure.autoRelog) {",
								"            clearInterval(AppCacheLogonAzure.autoRelog);",
								"            AppCacheLogonAzure.autoRelog = null;",
								"        }",
								"",
								"        sap.n.Launchpad.Timers = [];",
								"        sap.n.Launchpad.currentTile = {};",
								"        sap.n.currentView = '';",
								"",
								"        clearTimeout(AppCache.inactivityTimer);",
								"",
								"        AppCache.isRestricted = true;",
								"        location.hash = '';",
								"",
								"        // Standard Theme",
								"        if (AppCache.layout) sap.n.Launchpad.applyLayout(AppCache.layout[0]);",
								"",
								"        topMenu.setHeight('48px');",
								"",
								"        // Close all Dialogs ",
								"        sap.m.InstanceManager.closeAllDialogs();",
								"",
								"        // Extra memory cleanup",
								"        sap.n.Shell.clearAllObjects();",
								"",
								"        // Close Objects Loaded into the App",
								"        AppCache.ViewChild['undefined'] && AppCache.ViewChild['undefined'].forEach(function (data) {",
								"            sap.n.Shell.clearObjects(data.sId);",
								"        });",
								"",
								"        delete AppCache.ViewChild['undefined'];",
								"",
								"        // External Tools",
								"        AppCache.disableExternalTools();",
								"",
								"        // Adaptive",
								"        sap.n.Adaptive.configurations = {};",
								"        sap.n.Adaptive.pages = {};",
								"        sap.n.Adaptive.dialogs = {};",
								"",
								"        // Enhancement",
								"        if (sap.n.Enhancement.RestrictedEnable) {",
								"            try {",
								"                sap.n.Enhancement.RestrictedEnable();",
								"            } catch (e) {",
								"                appCacheError('Enhancement RestrictedEnable ' + e);",
								"            }",
								"        }",
								"",
								"    },",
								"",
								"    saveChildView: function (view) {",
								"        if (!sap.n.Launchpad.currentTile) return;",
								"        if (!AppCache.ViewChild[sap.n.Launchpad.currentTile.id]) AppCache.ViewChild[sap.n.Launchpad.currentTile.id] = [];",
								"        AppCache.ViewChild[sap.n.Launchpad.currentTile.id].push(view);",
								"    },",
								"",
								"    translate: function (language) {",
								"        // Handle Languages",
								"        if (language === 'NB') language = 'NO';",
								"",
								"        AppCache.objects && AppCache.objects.forEach(function (object) {",
								"            let obj = sap.ui.getCore().byId(object.fieldName);",
								"            if (obj) {",
								"                object.attributes.forEach(function (attribute) {",
								"                    const translation = ModelData.FindFirst(attribute.translation, 'language', language);",
								"",
								"                    const firstLetter = attribute.attribute.charAt(0).toUpperCase();",
								"                    const restOfAttrStr = attribute.attribute.slice(1);",
								"                    const arg = translation ? translation.value : attribute.value;",
								"                    const jsFn = `obj.set${firstLetter}${restOfAttrStr}('${arg}')`;",
								"",
								"                    try {",
								"                        eval(jsFn);",
								"                    } catch (e) {",
								"                        console.log(e);",
								"                    }",
								"                });",
								"            }",
								"        });",
								"",
								"        AppCache.coreLanguageHandler.updateResourceBundlesNewLang(language);",
								"    },",
								"",
								"    inactivitySetup: function () {",
								"        if (!AppCache.setupResetHandler) {",
								"            window.addEventListener('mousemove', AppCache.inactivityReset, false);",
								"            window.addEventListener('mousedown', AppCache.inactivityReset, false);",
								"            window.addEventListener('keypress', AppCache.inactivityReset, false);",
								"            window.addEventListener('DOMMouseScroll', AppCache.inactivityReset, false);",
								"            window.addEventListener('mousewheel', AppCache.inactivityReset, false);",
								"            window.addEventListener('touchmove', AppCache.inactivityReset, false);",
								"            window.addEventListener('MSPointerMove', AppCache.inactivityReset, false);",
								"            AppCache.setupResetHandler = true;",
								"        }",
								"",
								"        AppCache.inactivityStart();",
								"    },",
								"",
								"    inactivityReset: function () {",
								"        clearTimeout(AppCache.inactivityTimer);",
								"        if (!AppCache.isRestricted) AppCache.inactivityStart();",
								"    },",
								"",
								"    inactivityStart: function () {",
								"        AppCache.inactivityTimer = setTimeout(AppCache.inactivityTrigger, AppCache.timerLock * 1000);",
								"    },",
								"",
								"    inactivityTrigger: function () {",
								"        appCacheLog('Inactivity Timer: Triggering Autolock');",
								"        clearTimeout(AppCache.inactivityTimer);",
								"        AppCache.Lock();",
								"    },",
								"",
								"    restrictedDisable: function () {",
								"        // AutoLock ",
								"        if (!isCordova() && AppCache.timerLock) AppCache.inactivitySetup();",
								"",
								"        AppCacheUserActionSettings.setVisible(true);",
								"        AppCache_boxPasscodeEntry.setVisible(false);",
								"        AppCacheShellTitle.setText();",
								"",
								"        if (!AppCache.StartApp && !AppCache.StartWebApp) AppCacheShellMenu.setVisible(true);",
								"",
								"        // Config",
								"        if (AppCache.config) {",
								"            if (AppCache.config.hideTopHeader) topMenu.setHeight('0px');",
								"            if (AppCache.config.verticalMenu && sap.ui.Device.resize.width >= sap.n.Launchpad.verticalMenuLimit) sap.n.Launchpad.overflowMenuOpen();",
								"        }",
								"",
								"        appCacheLog('AppCache.restrictedDisable: Before get data from database');",
								"        getCacheAppCacheDiaSettings(true);",
								"",
								"        // Get User Data",
								"        cacheLoaded = 0;",
								"        getCacheAppCacheTiles(true);",
								"        getCacheAppCacheCategory(true);",
								"        getCacheAppCacheCategoryChild(true);",
								"        getCacheAppCacheTilesRun(true);",
								"        getCacheAppCacheTilesFav(true);",
								"",
								"        // Init IDP Provider  ",
								"        if (AppCache.userInfo.logonData && AppCache.userInfo.logonData.type) {",
								"            switch (AppCache.userInfo.logonData.type) {",
								"                case 'local':",
								"                    AppCacheUserActionPassword.setVisible(true);",
								"                    AppCacheLogonLocal.Init();",
								"                    break;",
								"",
								"                case 'azure-bearer':",
								"                    AppCacheLogonAzure.Init();",
								"                    break;",
								"",
								"                case 'openid-connect':",
								"                    AppCacheLogonOIDC.Init();",
								"                    break;",
								"",
								"                case 'ldap':",
								"                    AppCacheLogonLdap.Init();",
								"                    break;",
								"            }",
								"        }",
								"",
								"        (function () {",
								"            function waitForCache() {",
								"                if (cacheLoaded >= 5) {",
								"                    AppCache.isRestricted = false;",
								"                    AppCache.Encrypted = '';",
								"",
								"                    appCacheLog('AppCache.restrictedDisable: All data fetched from database');",
								"",
								"                    if (AppCache.enablePasscode) {",
								"                        AppCacheUserActionLock.setVisible(true);",
								"                        AppCacheUserActionSwitch.setVisible(false);",
								"                    } else {",
								"                        AppCacheUserActionLogoff.setVisible(true);",
								"                    }",
								"",
								"                    // Enhancement",
								"                    if (sap.n.Enhancement.RestrictedDisable) {",
								"                        try {",
								"                            sap.n.Enhancement.RestrictedDisable();",
								"                        } catch (e) {",
								"                            appCacheError('Enhancement RestrictedDisable ' + e);",
								"                        }",
								"                    }",
								"",
								"                    if (AppCache.enablePasscode && !AppCache.isOffline) {",
								"                        AppCache.updateUserInfo().then(function (status) {",
								"                            // TODO - Consider to move on even if updateUserInfo fails ? ",
								"                            if (status === 'Ok') {",
								"                                AppCache.UpdateGetData();",
								"                            } else {",
								"                                appCacheError('User logoff due to error in updateUserInfo');",
								"                                AppCache.Lock();",
								"                            }",
								"                        });",
								"                    } else {",
								"                        AppCache.UpdateGetData();",
								"                    }",
								"",
								"                } else {",
								"                    setTimeout(waitForCache, 50);",
								"                }",
								"            }",
								"            waitForCache();",
								"        })();",
								"",
								"        // Update users Login Time ",
								"        let user = ModelData.FindFirst(AppCacheUsers, 'username', AppCache.userInfo.username);",
								"        if (user) {",
								"            user.lastLogin = Date.now();",
								"            ModelData.Update(AppCacheUsers, 'username', AppCache.userInfo.username, user);",
								"            setCacheAppCacheUsers();",
								"        }",
								"    },",
								"",
								"    AutoUpdateMobileApp: function () {",
								"        // Update App - device check",
								"        const deviceName = sap.ui.Device.os.name;",
								"        if (!['win', 'Android', 'iOS'].includes(deviceName)) return;",
								"",
								"        if (!isCordova()) return;",
								"        if (AppCache.isOffline) return;",
								"",
								"        // Version check",
								"        const currentVersion = AppCache.AppVersion.replace(/\\D/g, '')",
								"        const activeVersion = AppCache.AppVersionActive.replace(/\\D/g, '')",
								"",
								"        if (currentVersion < activeVersion) {",
								"            let n = `${AppCache.Url}/mobileClients/${AppCache.mobileClient}/build/${AppCache.AppVersionActiveID}/`;",
								"",
								"            if (deviceName === 'win') n += 'Windows';",
								"            else if (deviceName === 'Android') n += 'Android';",
								"            else if (deviceName === 'iOS') {",
								"                n = 'itms-services://?action=download-manifest&url=' + encodeURIComponent(`${n}Ios.plist`);",
								"                console.log(n);",
								"            }",
								"",
								"            AppCache.UpdateMobileApp(n, AppCache.AppVersionActive);",
								"        }",
								"    },",
								"",
								"    fileWriter: {",
								"        // Save the file to OS in blocks of 5MB recursively. Saving all in one block can result in out of memory errors on some devices",
								"        writeBlock: function (fileWriter, bytesWritten, callback) {",
								"            let blockSize = Math.min(5 * 1024 * 1024, AppCache.fileWriter.blob.size - bytesWritten);",
								"            let block = this.blob.slice(bytesWritten, bytesWritten + blockSize, AppCache.fileWriter.blob.type);",
								"",
								"            fileWriter.write(block);",
								"",
								"            bytesWritten += blockSize;",
								"            fileWriter.onwrite = function () {",
								"                if (bytesWritten < AppCache.fileWriter.blob.size) {",
								"                    AppCache.fileWriter.writeBlock(fileWriter, bytesWritten, callback);",
								"                } else {",
								"                    callback(fileWriter);",
								"                }",
								"            };",
								"        }",
								"    },",
								"",
								"    UpdateMobileApp: function (fileUrl, version) {",
								"        // Update App - device check",
								"        if (sap.ui.Device.os.name !== 'iOS' && sap.ui.Device.os.name !== 'Android' && sap.ui.Device.os.name !== 'win') return;",
								"",
								"        sap.ui.core.BusyIndicator.hide();",
								"",
								"        // iOS",
								"        if (sap.ui.Device.os.name === 'iOS') {",
								"            window.open(fileUrl, '_system');",
								"            return;",
								"        }",
								"",
								"        let fileDirectory = cordova.file.cacheDirectory;",
								"        let localFile = AppCache.CurrentConfig;",
								"        let remoteFile = fileUrl;",
								"        let contentType;",
								"",
								"        if (sap.ui.Device.os.name === 'Android') {",
								"            localFile += '.apk';",
								"            contentType = 'application/vnd.android.package-archive';",
								"        } else {",
								"            localFile += '.appx';",
								"            contentType = 'application/vns.ms-appx';",
								"        }",
								"",
								"        // Open Dialog",
								"        AppCache_diaDownload.open();",
								"        AppCache_diaDownload.setText(AppCache_tDownloading.getText() + ' (v.' + version + ')...');",
								"",
								"        // Delete Old File",
								"        window.resolveLocalFileSystemURL(localFile, function (fileEntry) {",
								"            fileEntry.remove();",
								"        }, function (error) { });",
								"",
								"        // Download File ",
								"        AppCache.downloadXhr = new XMLHttpRequest();",
								"        AppCache.downloadXhr.responseType = 'blob'; // force blob",
								"        AppCache.downloadXhr.open('GET', remoteFile);",
								"        AppCache.downloadXhr.send();",
								"",
								"        AppCache.downloadXhr.onload = function () {",
								"            if (AppCache.downloadXhr.status != 200) {",
								"                AppCache_diaDownload.close();",
								"                sap.m.MessageToast.show(AppCache.downloadXhr.statusText);",
								"                AppCache.downloadXhr = null;",
								"            } else {",
								"",
								"                let loDownloadedData = {",
								"                    response: AppCache.downloadXhr.response,",
								"                    responseType: AppCache.downloadXhr.responseType",
								"                };",
								"",
								"                // Save File",
								"                window.requestFileSystem(LocalFileSystem.TEMPORARY, 0, function (fs) {",
								"                    fs.root.getFile(localFile, { create: true, exclusive: false }, function (fileEntry) {",
								"                        fileEntry.createWriter(function (fileWriter) {",
								"                            //",
								"                            // Helper functions - Begin",
								"                            let lfFormatMessage = function (poObject, pvMessage) {",
								"                                //",
								"                                // Replaces the parameter with the object's property with the same name",
								"                                // E.g.: Person = { Name1: 'Jørgen' }; Text = 'My name is ${Name1}'",
								"                                //       lfFormatMessage( Person, Text ) => 'My name is Jørgen'",
								"                                let lvMessage = pvMessage.replaceAll(",
								"                                    /\\$\\{(\\w*)\\}/gi,",
								"                                    function (match, contents, offset, input_string) {",
								"                                        return poObject[contents];",
								"                                    }",
								"                                );",
								"                                return lvMessage;",
								"                            };",
								"                            let lfOpenInstaller = function (pvFullFile) {",
								"                                //",
								"                                // Opens the file for installation (requires full path in file:// or cdvfile://)",
								"                                cordova.plugins.fileOpener2.open(",
								"                                    pvFullFile,",
								"                                    contentType, {",
								"                                    success: function () {",
								"                                        //",
								"                                        // Upon success, it makes sure that it closes the dialog before the update starts",
								"                                        AppCache_diaDownload.close();",
								"                                    },",
								"                                    error: function (e) {",
								"                                        //",
								"                                        // It's an error, so close the dialog anyway before displaying the error messages",
								"                                        AppCache_diaDownload.close();",
								"                                        let lvErrorMessage = lfFormatMessage(e, 'Error opening file. Status: ${status} - Error message: ${message}');",
								"                                        console.error(lvErrorMessage);",
								"                                    }",
								"                                });",
								"                            };",
								"                            // Helper functions - End",
								"                            //",
								"",
								"                            //",
								"                            // File saving error handling",
								"                            fileWriter.onerror = function (e) {",
								"                                let lvErrorMessage = lfFormatMessage(e, 'Error saving file. Status: ${status} - Error message: ${message}');",
								"                                console.error(lvErrorMessage);",
								"                            }",
								"",
								"                            //",
								"                            // Prepares blob data",
								"                            AppCache.fileWriter.blob = (loDownloadedData.responseType === 'blob')",
								"                                ? loDownloadedData.response",
								"                                : new Blob([loDownloadedData.response], contentType);",
								"                            //",
								"                            // Save the file to OS in blocks of 5MB recursively (check function AppCache.fileWriter.writeBlock). ",
								"                            // Saving all in one block can result in out of memory errors on some devices",
								"                            AppCache.fileWriter.writeBlock(fileWriter, 0, function (fileWriter) {",
								"                                lfOpenInstaller(fileWriter.localURL);",
								"                                AppCache.downloadXhr = null;",
								"                                loDownloadedData = null;",
								"                            });",
								"                        });",
								"                    });",
								"                });",
								"            }",
								"        };",
								"",
								"        AppCache.downloadXhr.onprogress = function (evt) {",
								"            const t = AppCache_tDownloading.getText();",
								"            if (evt.lengthComputable) {",
								"                AppCache_diaDownload.setText(`${t} (v.${version})...${evt.loaded} of ${evt.total} ${bytes}`);",
								"            } else {",
								"                AppCache_diaDownload.setText(`${t} (v.${version})...${evt.loaded} bytes`);",
								"            }",
								"        };",
								"",
								"        AppCache.downloadXhr.onerror = function () {",
								"            AppCache_diaDownload.close();",
								"            sap.m.MessageToast.show(AppCache_tErrorDownloading.getText());",
								"            AppCache.downloadXhr = null;",
								"        };",
								"",
								"    },",
								"",
								"    clearCookies: function () {",
								"",
								"        // Cookie Clearing - Android/iOS",
								"        if (typeof cookieMaster !== 'undefined') {",
								"            cookieMaster.clearCookies(",
								"                function () { },",
								"                function () { });",
								"        }",
								"",
								"        // Cookie Clearing - Windows 10",
								"        try {",
								"            document.execCommand('ClearAuthenticationCache', 'false');",
								"        } catch (e) { }",
								"",
								"        // Enhancement",
								"        if (sap.n.Enhancement.ClearCookies) {",
								"            try {",
								"                sap.n.Enhancement.ClearCookies();",
								"            } catch (e) {",
								"                appCacheError('Enhancement ClearCookies ' + e);",
								"            }",
								"        }",
								"",
								"    },",
								"",
								"    initView: function (value, data) {",
								"        // Load Option: Download",
								"        if (AppCache.LoadOptions.load === 'download') {",
								"            sap.ui.core.BusyIndicator.hide();",
								"            this._loadQueue();",
								"            return;",
								"        }",
								"",
								"        // Format ID",
								"        let applid = value.replace(/\\//g, '').toUpperCase();",
								"",
								"        try {",
								"            eval(data);",
								"        } catch (error) {",
								"            if (error.message) {",
								"                sap.m.MessageToast.show(error.message);",
								"            }",
								"            return;",
								"        }",
								"",
								"        // Creating UI5 view ",
								"        let versionParts = sap.ui.version.split(\".\");",
								"",
								"        // BlockLayout vs Cards",
								"        if (versionParts[0] >= 1 && versionParts[1] < 56) {",
								"",
								"            let oJSView;",
								"",
								"            if (!AppCache.LoadOptions.dialogShow && !AppCache.LoadOptions.parentObject) {",
								"",
								"                try {",
								"                    oJSView = sap.ui.view({",
								"                        viewName: value.toUpperCase(),",
								"                        type: sap.ui.core.mvc.ViewType.JS",
								"                    });",
								"                } catch (err) {",
								"                    AppCache.handleTileError(err);",
								"                    sap.m.MessageToast.show('Init view error in : ' + value.toUpperCase());",
								"                }",
								"",
								"                if (AppCache.LoadOptions.appGUID) {",
								"                    AppCache.View[AppCache.LoadOptions.appGUID] = oJSView;",
								"                } else {",
								"                    AppCache.View[applid] = oJSView;",
								"                }",
								"            } else {",
								"",
								"                try {",
								"                    AppCache.diaView = sap.ui.view({",
								"                        viewName: value.toUpperCase(),",
								"                        type: sap.ui.core.mvc.ViewType.JS",
								"                    });",
								"                } catch (err) {",
								"                    AppCache.handleTileError(err);",
								"                    sap.m.MessageToast.show('Init view error in : ' + value.toUpperCase());",
								"",
								"                }",
								"            }",
								"",
								"            AppCache.buildView(applid);",
								"",
								"        } else {",
								"",
								"            sap.ui.core.mvc.JSView.create({",
								"                viewName: value.toUpperCase()",
								"            }).then(function (oView) {",
								"",
								"                if (!AppCache.LoadOptions.dialogShow && !AppCache.LoadOptions.parentObject) {",
								"                    if (AppCache.LoadOptions.appGUID) {",
								"                        AppCache.View[AppCache.LoadOptions.appGUID] = oView;",
								"                    } else {",
								"                        AppCache.View[applid] = oView;",
								"                    }",
								"                } else {",
								"                    AppCache.diaView = oView;",
								"                }",
								"",
								"                AppCache.buildView(applid);",
								"",
								"            }).catch(function (err) {",
								"                AppCache.handleTileError(err);",
								"                sap.m.MessageToast.show(err);",
								"            });",
								"",
								"        }",
								"",
								"    },",
								"",
								"    buildView: function (value) {",
								"        // Format ID",
								"        let applid = value.replace(/\\//g, '');",
								"        let tempView = sap.n.currentView;",
								"        let eventId;",
								"",
								"        if (!AppCache.LoadOptions.parentObject && !AppCache.LoadOptions.dialogShow) {",
								"            if (AppCache.LoadOptions.appGUID) {",
								"                sap.n.currentView = AppCache.View[AppCache.LoadOptions.appGUID];",
								"            } else {",
								"                sap.n.currentView = AppCache.View[applid];",
								"            }",
								"        }",
								"",
								"        // Turn off debug",
								"        AppCacheShellDebug.setVisible(false);",
								"",
								"        if (AppCache.LoadOptions.appGUID) {",
								"            eventId = AppCache.LoadOptions.appGUID;",
								"        } else {",
								"            eventId = applid;",
								"        }",
								"",
								"        // Custom init",
								"        if (sap.n.Apps[eventId]) {",
								"",
								"            if (sap.n.Apps[eventId].init) {",
								"                sap.n.Apps[eventId].init.forEach(function (data) {",
								"                    if (AppCache.LoadOptions.startParams) {",
								"                        try {",
								"                            AppCache.LoadOptions.startParams = JSON.parse(AppCache.LoadOptions.startParams);",
								"                        } catch (error) { }",
								"                    }",
								"",
								"                    data(AppCache.LoadOptions.startParams);",
								"                });",
								"                sap.n.Apps[eventId].init = null;",
								"            }",
								"",
								"            // Custom beforeDisplay",
								"            if (sap.n.Apps[eventId] && sap.n.Apps[eventId].beforeDisplay) {",
								"                sap.n.Apps[eventId].beforeDisplay.forEach(function (data) {",
								"                    if (AppCache.LoadOptions.startParams) {",
								"                        try {",
								"                            AppCache.LoadOptions.startParams = JSON.parse(AppCache.LoadOptions.startParams);",
								"                        } catch (error) { }",
								"                    }",
								"",
								"                    data(AppCache.LoadOptions.startParams);",
								"                });",
								"            }",
								"",
								"            // Custom onNavigation",
								"            if (sap.n.Apps[eventId] && sap.n.Apps[eventId].onNavigation) {",
								"                sap.n.Apps[eventId].onNavigation.forEach(function (data) {",
								"                    if (sap.n.HashNavigation.data) sap.n.HashNavigation.data = JSON.parse(sap.n.HashNavigation.data);",
								"                    data(sap.n.HashNavigation.data);",
								"                    sap.n.HashNavigation.data = '';",
								"                });",
								"            }",
								"",
								"        }",
								"",
								"        // Load Option: Not full load",
								"        if (AppCache.LoadOptions.load !== '') {",
								"            sap.n.currentView = tempView;",
								"            sap.ui.core.BusyIndicator.hide();",
								"            AppCache.saveChildView(tempView);",
								"            AppCache.diaView = null;",
								"            this._loadQueue();",
								"            return;",
								"        }",
								"",
								"        // Dialog",
								"        if (AppCache.LoadOptions.dialogShow) {",
								"            let contHeight = AppCache.LoadOptions.dialogHeight;",
								"            let contWidth = AppCache.LoadOptions.dialogWidth;",
								"",
								"            // On Mobile",
								"            if (!sap.n.Launchpad.isDesktop()) {",
								"                contWidth = '100%';",
								"                contHeight = '100%';",
								"            }",
								"",
								"            // Create Dialog",
								"            let dia = new sap.n.Dialog({",
								"                contentWidth: contWidth,",
								"                contentHeight: contHeight,",
								"                type: 'Message',",
								"                resizable: true,",
								"                draggable: true,",
								"                stretchOnPhone: true,",
								"                icon: AppCache.LoadOptions.dialogIcon,",
								"                title: AppCache.LoadOptions.dialogTitle,",
								"                hideMinimize: AppCache.LoadOptions.dialogHideMinimize,",
								"                hideMosaic: AppCache.LoadOptions.dialogHideMosaic,",
								"                hideMaximize: AppCache.LoadOptions.dialogHideMaximize,",
								"                afterClose: function (oEvent) {",
								"",
								"                    // Delete From Array",
								"                    for (let i = 0; i < AppCache.Dialogs.length; i++) {",
								"                        if (AppCache.Dialogs[i] === dia.getId()) {",
								"                            AppCache.Dialogs.splice(i, 1);",
								"                            break;",
								"                        }",
								"                    }",
								"",
								"                    dia.destroyContent();",
								"                    dia = null;",
								"",
								"                    if (AppCache.Dialogs.length === 0) AppCacheShellDialog.setVisible(false);",
								"",
								"                },",
								"                beforeClose: AppCache.LoadOptions.onDialogClose",
								"            });",
								"",
								"            // Add Dialog to Array",
								"            AppCache.Dialogs.push(dia.getId());",
								"            dia.addContent(AppCache.diaView);",
								"",
								"            dia.open();",
								"            sap.ui.core.BusyIndicator.hide();",
								"            AppCache.saveChildView(AppCache.diaView);",
								"            this._loadQueue();",
								"            return;",
								"        }",
								"",
								"        // ParentObject",
								"        if (AppCache.LoadOptions.parentObject) {",
								"            let view = AppCache.diaView || AppCache.View[applid];",
								"",
								"            if (AppCache.LoadOptions.parentObject.addContent) {",
								"                AppCache.LoadOptions.parentObject.removeAllContent();",
								"                AppCache.LoadOptions.parentObject.addContent(view);",
								"                AppCache.LoadOptions.parentObject.rerender();",
								"            }",
								"",
								"            if (typeof AppCache.LoadOptions.parentObject.setBusy === 'function') AppCache.LoadOptions.parentObject.setBusy(false);",
								"",
								"            AppCache.diaView = null;",
								"            AppCache.saveChildView(view);",
								"            this._loadQueue();",
								"            return;",
								"        }",
								"",
								"        // Add page to navigation",
								"        if (!AppCacheNav.getPage(sap.n.currentView.sId)) AppCacheNav.addPage(sap.n.currentView);",
								"",
								"        // Navigate",
								"        AppCacheNav.to(sap.n.currentView, modelAppCacheDiaSettings.oData.TRANSITION || 'show');",
								"",
								"        // Set Shell Title",
								"        if (sap.n.Launchpad.SetHeader) sap.n.Launchpad.SetHeader();",
								"",
								"        // Set Shell Settings - Tiles",
								"        let dataTile = ModelData.FindFirst(AppCacheTiles, 'id', AppCache.LoadOptions.appGUID);",
								"",
								"        if (dataTile) {",
								"            let hideHeader = false;",
								"            if (sap.n.Launchpad.isDesktop() && dataTile.hideHeaderL) hideHeader = true;",
								"            if (sap.n.Launchpad.isTablet() && dataTile.hideHeaderM) hideHeader = true;",
								"            if (sap.n.Launchpad.isPhone() && dataTile.hideHeaderS) hideHeader = true;",
								"            sap.n.Launchpad.setHideHeader(hideHeader);",
								"",
								"            if (dataTile.openFullscreen) {",
								"                AppCacheShellUI.setAppWidthLimited(false);",
								"            } else {",
								"                AppCacheShellUI.setAppWidthLimited(true);",
								"            }",
								"",
								"        }",
								"        sap.ui.core.BusyIndicator.hide();",
								"        this._loadQueue();",
								"",
								"    },",
								"",
								"    getView: function (value) {",
								"        if (status === 'NOT_LOGGED_IN') {",
								"            AppCache.handleTileError('getView: NOT_LOGGED_IN');",
								"            sap.m.MessageToast.show(AppCache_tSessionTimeout.getText());",
								"            return;",
								"        }",
								"",
								"        // Get View from Server",
								"        if (AppCache.LoadOptions.rootDir) {",
								"            if (AppCache.LoadOptions.rootDir === '/views/') {",
								"                url = AppCache.LoadOptions.rootDir + value;",
								"            } else {",
								"                url = AppCache.LoadOptions.rootDir + value + '.js';",
								"            }",
								"        } else {",
								"            if (AppCache.isPublic) {",
								"                url = '/public/app/' + value + '.js';",
								"            } else {",
								"                url = '/app/' + value + '.js';",
								"            }",
								"        };",
								"",
								"        // Detect Mobile ",
								"        if (AppCache.isMobile) url += '?isMobile=true';",
								"",
								"        let headers = { 'X-Requested-With': 'XMLHttpRequest' }",
								"",
								"        // Remote System",
								"        if (AppCache.LoadOptions.appPath) {",
								"            // Remote System",
								"            if (AppCache.LoadOptions.appType === 'SAP') {",
								"                headers.NeptuneServer = AppCache.LoadOptions.appPath;",
								"",
								"                const proxyPrefix = '/proxy/remote/';",
								"                const appPathPrefix = `${AppCache.LoadOptions.appPath}/neptune/`;",
								"                const appPathPostfix = `/${AppCache.LoadOptions.appAuth}`;",
								"                if (AppCache.LoadOptions.sapICFNode) {",
								"                    url = proxyPrefix + encodeURIComponent(appPathPrefix + AppCache.LoadOptions.sapICFNode + `/${value}.view.js`) + appPathPostfix;",
								"                } else {",
								"                    url = proxyPrefix + encodeURIComponent(appPathPrefix + `${value}.view.js`) + appPathPostfix;",
								"                }",
								"",
								"                AppCache.hideGlobalAjaxError = true;",
								"            } else {",
								"                url += AppCache.isMobile ? '&' : '?';",
								"                url += 'p9Server=' + AppCache.LoadOptions.appPath;",
								"",
								"                const p = encodeURIComponent(AppCache.LoadOptions.appPath + url);",
								"                if (AppCache.LoadOptions.appAuth) url = `/proxy/remote/${p}/${AppCache.LoadOptions.appAuth}`;",
								"                else url = `/proxy/${p}`;",
								"            }",
								"",
								"            // Remote System ID for adding  proxy authentication",
								"            if (AppCache.LoadOptions.appAuth) headers['X-Auth-In-P9'] = AppCache.LoadOptions.appAuth;",
								"",
								"            url = AppCache.Url + url;",
								"",
								"        } else {",
								"            url = AppCache.Url + url;",
								"        }",
								"",
								"        if (AppCache.LoadOptions.defaultLanguage) {",
								"            url += AppCache.isMobile ? '&' : '?';",
								"            url += 'lang=' + AppCache.LoadOptions.defaultLanguage;",
								"        }",
								"",
								"        // Enhancement",
								"        if (sap.n.Enhancement.RemoteSystemAuth) {",
								"            try {",
								"                sap.n.Enhancement.RemoteSystemAuth(headers);",
								"            } catch (e) {",
								"                appCacheError('Enhancement RemoteSystemAuth ' + e);",
								"            }",
								"        }",
								"",
								"        request({",
								"            datatype: 'HTML',",
								"            type: 'GET',",
								"            url: url,",
								"            headers: headers,",
								"            success: function (data, status, request) {",
								"",
								"                AppCache.hideGlobalAjaxError = true;",
								"",
								"                // Save in DB/LocalStorage",
								"                let viewName = 'app:' + value + ':' + AppCache.userInfo.language + ':' + AppCache.LoadOptions.appPath;",
								"",
								"                if (typeof p9Database !== 'undefined' && p9Database !== null) {",
								"                    p9SaveView(viewName.toUpperCase(), data);",
								"                } else {",
								"                    sapStoragePut(viewName.toUpperCase(), data)",
								"                }",
								"",
								"                // Set App Initialized",
								"                AppCache.Initialized = true;",
								"",
								"                // Update Application Data ",
								"                if (value !== 'cockpit_doc_reader') {",
								"",
								"                    // App Timestamp in Header",
								"                    let updatedAt = request.getResponseHeader('X-Updated-At');",
								"                    if (AppCache.LoadOptions.appType !== 'SAP') updatedAt = parseFloat(updatedAt);",
								"",
								"                    // Get TimeStamp from App ",
								"                    if (updatedAt) {",
								"                        ModelData.Update(AppCacheData, ['application', 'language', 'appPath'], [value.toUpperCase(), AppCache.userInfo.language, AppCache.LoadOptions.appPath], {",
								"                            appType: 'app',",
								"                            application: value.toUpperCase(),",
								"                            updatedAt: updatedAt,",
								"                            invalid: false,",
								"                            language: AppCache.userInfo.language,",
								"                            appPath: AppCache.LoadOptions.appPath",
								"                        });",
								"",
								"                        setCacheAppCacheData();",
								"                    } else {",
								"                        let url = '/api/functions/Launchpad/GetAppTimestamp';",
								"                        let headers = {};",
								"",
								"                        // Remote System",
								"                        if (AppCache.LoadOptions.appPath) {",
								"                            url = '/proxy/remote/' + encodeURIComponent(AppCache.LoadOptions.appPath + url) + '/' + AppCache.LoadOptions.appAuth;",
								"                        }",
								"",
								"                        url = AppCache.Url + url;",
								"",
								"                        // Enhancement",
								"                        if (sap.n.Enhancement.RemoteSystemAuth) {",
								"                            try {",
								"                                sap.n.Enhancement.RemoteSystemAuth(headers);",
								"                            } catch (e) {",
								"                                appCacheError('Enhancement RemoteSystemAuth ' + e);",
								"                            }",
								"                        }",
								"",
								"                        // Get App Timestamp",
								"                        jsonRequest({",
								"                            url,",
								"                            headers,",
								"                            data: JSON.stringify({ application: value }),",
								"                            success: function (data) {",
								"                                ModelData.Update(AppCacheData, ['application', 'language', 'appPath'], [value.toUpperCase(), AppCache.userInfo.language, AppCache.LoadOptions.appPath], {",
								"                                    appType: 'app',",
								"                                    application: value.toUpperCase(),",
								"                                    updatedAt: data.updatedAt,",
								"                                    invalid: false,",
								"                                    language: AppCache.userInfo.language,",
								"                                    appPath: AppCache.LoadOptions.appPath",
								"                                });",
								"                                setCacheAppCacheData();",
								"                            },",
								"                            error: function (result, status) {",
								"",
								"                            }",
								"                        });",
								"",
								"                    }",
								"                }",
								"",
								"                // Start View",
								"                AppCache.initView(value, data);",
								"",
								"            },",
								"            error: function (error) {",
								"                if (error.status === 404) {",
								"                    Array.isArray(modelAppCacheTiles.oData) && modelAppCacheTiles.oData.forEach(function (tile) {",
								"                        if (tile && (tile.actionApplication === value || tile.tileApplication === value)) {",
								"                            let b = sap.ui.getCore().byId(`but${tile.id}`);",
								"                            if (b) b.destroy();",
								"                        }",
								"                    });",
								"                    sap.m.MessageToast.show(AppCache_tAppNotFound.getText());",
								"                }",
								"",
								"                AppCache.handleTileError(error.statusText);",
								"",
								"                setTimeout(function () {",
								"                    AppCache.hideGlobalAjaxError = false;",
								"                }, 100);",
								"            }",
								"        });",
								"",
								"    },",
								"",
								"    handleTileError: function (err) {",
								"        AppCache.loadRunning = false;",
								"        sap.n.currentView = '';",
								"        sap.n.Shell.closeTile({ id: AppCache.LoadOptions.appGUID });",
								"        sap.n.Shell.closeSidepanel();",
								"        if (err) console.log(err);",
								"    },",
								"",
								"    getWebApp: function (dataTile, dataCat) {",
								"        if (AppCache.isPublic) url = '/public/webapp/' + dataTile.actionWebApp;",
								"        else url = '/webapp/' + dataTile.actionWebApp;",
								"",
								"        // Detect Mobile ",
								"        if (AppCache.isMobile) url += '?isMobile=true';",
								"",
								"        let headers = { 'X-Requested-With': 'XMLHttpRequest' }",
								"",
								"        if (dataTile.urlApplication) {",
								"            if (AppCache.userInfo.azureToken) headers.Authorization = 'Bearer ' + AppCache.userInfo.azureToken.id_token;",
								"            url = AppCache.Url + '/proxy/remote/' + encodeURIComponent(dataTile.urlApplication + url) + '/' + dataTile.urlAuth;",
								"        } else {",
								"            url = AppCache.Url + url;",
								"        }",
								"",
								"        // Enhancement",
								"        if (sap.n.Enhancement.RemoteSystemAuth) {",
								"            try {",
								"                sap.n.Enhancement.RemoteSystemAuth(headers);",
								"            } catch (e) {",
								"                appCacheError('Enhancement RemoteSystemAuth ' + e);",
								"            }",
								"        }",
								"",
								"        request({",
								"            datatype: 'HTML',",
								"            type: 'GET',",
								"            url: url,",
								"            headers: headers,",
								"            success: function (data) {",
								"                // Save in DB/LocalStorage",
								"                let viewName = 'webapp:' + dataTile.actionWebApp + ':' + dataTile.urlApplication;",
								"",
								"                if (typeof p9Database !== 'undefined' && p9Database !== null) {",
								"                    p9SaveView(viewName, data);",
								"                } else {",
								"                    sapStoragePut(viewName, data);",
								"                }",
								"",
								"                let url = '/api/functions/Launchpad/GetAppTimestamp';",
								"                let headers = {};",
								"",
								"                // Remote System",
								"                if (dataTile.urlApplication) {",
								"                    if (AppCache.userInfo.azureToken) headers.Authorization = 'Bearer ' + AppCache.userInfo.azureToken.id_token;",
								"                    url = '/proxy/remote/' + encodeURIComponent(dataTile.urlApplication + url) + '/' + dataTile.urlAuth;",
								"                }",
								"",
								"                url = AppCache.Url + url;",
								"",
								"                // Enhancement",
								"                if (sap.n.Enhancement.RemoteSystemAuth) {",
								"                    try {",
								"                        sap.n.Enhancement.RemoteSystemAuth(headers);",
								"                    } catch (e) {",
								"                        appCacheError('Enhancement RemoteSystemAuth ' + e);",
								"                    }",
								"                }",
								"",
								"                // Get App Timestamp",
								"                jsonRequest({",
								"                    type: 'POST',",
								"                    contentType: 'application/json',",
								"                    url: url,",
								"                    headers: headers,",
								"                    data: JSON.stringify({ webapp: dataTile.actionWebApp }),",
								"                    success: function (data) {",
								"                        ModelData.Update(AppCacheData, ['application', 'appPath'], [data.application, dataTile.urlApplication], {",
								"                            appType: 'webapp',",
								"                            application: data.application,",
								"                            appPath: dataTile.urlApplication,",
								"                            updatedAt: data.updatedAt,",
								"                            invalid: false,",
								"                            language: AppCache.userInfo.language",
								"                        });",
								"                        setCacheAppCacheData();",
								"                    },",
								"                    error: function (result, status) { }",
								"                });",
								"",
								"                // Set Flag to InMemory",
								"                AppCache.View[viewName] = true;",
								"",
								"                // Start View",
								"                AppCache.buildWebApp(dataTile, data, dataCat);",
								"",
								"            },",
								"            error: function (error) {",
								"                if (error.status === 404) {",
								"                    Array.isArray(modelAppCacheTiles.oData) && modelAppCacheTiles.oData.forEach(function (tile) {",
								"                        if (tile && tile.actionWebApp === dataTile.actionWebApp) {",
								"                            let b = sap.ui.getCore().byId(`but${tile.id}`);",
								"                            if (b) b.destroy();",
								"                        }",
								"                    });",
								"                    sap.m.MessageToast.show(AppCache_tAppNotFound.getText());",
								"                }",
								"",
								"                AppCache.handleTileError(error.statusText);",
								"            }",
								"        });",
								"    },",
								"",
								"    buildWebApp: function (dataTile, viewData, dataCat) {",
								"        // As Dialog ",
								"        if (dataTile.openDialog) {",
								"            sap.n.Launchpad.contextType = 'Tile';",
								"            sap.n.Launchpad.contextTile = dataTile;",
								"",
								"            sap.n.Shell.openUrl(dataTile.actionWebApp, {",
								"                webAppData: viewData,",
								"                dialogTitle: dataTile.title,",
								"                dialogWidth: dataTile.dialogWidth || '1200px',",
								"                dialogHeight: dataTile.dialogHeight || '90%',",
								"            });",
								"",
								"            location.hash = '';",
								"            AppCacheShellBack.setVisible(false);",
								"            return;",
								"        }",
								"",
								"        if (dataTile.actionWebApp !== AppCache.StartWebApp) sap.n.Launchpad.handleNavButton(dataTile, dataCat);",
								"        AppCacheNav.to(AppCache_boxURL, modelAppCacheDiaSettings.oData.TRANSITION || 'show');",
								"",
								"        // As Embedded",
								"        AppCacheShellUI.setAppWidthLimited(!dataTile.openFullscreen);",
								"",
								"        // Hide All",
								"        hideChildren('#AppCache_URLDiv');",
								"",
								"        // Check If element exist > Display or Create",
								"        const el = elById(`iFrame${dataTile.id}`);",
								"        if (el) {",
								"            el.style.display = 'block';",
								"            return;",
								"        }",
								"",
								"        appendIFrame(",
								"            querySelector('#AppCache_URLDiv'),",
								"            {",
								"                'id': `iFrame${dataTile.id}`,",
								"                'frameborder': '0',",
								"                'style': 'border: 0;',",
								"                'width': '100%',",
								"                'height': '100%',",
								"                'srcdoc': viewData",
								"            }",
								"        );",
								"    },",
								"",
								"    Lock: function () {",
								"        // Enhancement",
								"        if (sap.n.Enhancement.BeforeLock) {",
								"            try {",
								"                sap.n.Enhancement.BeforeLock();",
								"            } catch (e) {",
								"                appCacheError(`Enhancement BeforeLock ${e}`);",
								"            }",
								"        }",
								"",
								"        // Logoff ",
								"        if (AppCache.userInfo.logonData && AppCache.userInfo.logonData.type) {",
								"            switch (AppCache.userInfo.logonData.type) {",
								"                case 'local':",
								"                    AppCacheLogonLocal.Logoff();",
								"                    break;",
								"",
								"                case 'azure-bearer':",
								"                    AppCacheLogonAzure.Logoff();",
								"                    break;",
								"",
								"                case 'openid-connect':",
								"                    AppCacheLogonOIDC.Logoff();",
								"                    break;",
								"",
								"                case 'ldap':",
								"                    AppCacheLogonLdap.Logoff();",
								"                    break;",
								"            }",
								"        } else {",
								"            AppCacheLogonLocal.Logoff();",
								"        }",
								"",
								"        AppCache.restrictedEnable();",
								"",
								"        // Check PIN Code",
								"        if (!AppCache.enablePasscode) {",
								"            AppCache.Logout();",
								"            return;",
								"        }",
								"",
								"        AppCache.translate(navigator.language.slice(0, 2).toUpperCase());",
								"",
								"        // Clear NumPad",
								"        NumPad.numPasscode = 0;",
								"        NumPad.numValue = '';",
								"        NumPad.Verify = false;",
								"",
								"        AppCache.setEnableUsersScreen();",
								"        AppCacheNav.rerender();",
								"",
								"        sap.ui.core.BusyIndicator.hide();",
								"    },",
								"",
								"    Logout: function () {",
								"        clearSelectedLoginType();",
								"        ",
								"        // Enhancement",
								"        if (sap.n.Enhancement.BeforeLogout) {",
								"            try {",
								"                sap.n.Enhancement.BeforeLogout();",
								"            } catch (e) {",
								"                appCacheError('Enhancement BeforeLogout ' + e);",
								"            }",
								"        }",
								"        if (AppCache.isMobile) {",
								"            // Restricted Area",
								"            AppCache.restrictedEnable();",
								"",
								"            // Show Logon Screen",
								"            AppCache.setEnableLogonScreen();",
								"            AppCache.Initialized = false;",
								"            NumPad.numPasscode = 0;",
								"            NumPad.numValue = '';",
								"            AppCache.Encrypted = '';",
								"            AppCache_inUsername.setValue();",
								"            AppCache_inPassword.setValue();",
								"            AppCacheShellUser.setText();",
								"",
								"            if (AppCache.enableAutoLogin) AppCacheLogonLocal.AutoLoginRemove();",
								"",
								"            // Logoff ",
								"            if (AppCache.userInfo && AppCache.userInfo.logonData) {",
								"                switch (AppCache.userInfo.logonData.type) {",
								"                    case 'azure-bearer':",
								"                        AppCacheLogonAzure.Logoff();",
								"                        break;",
								"",
								"                    case 'openid-connect':",
								"                        AppCacheLogonOIDC.Logoff();",
								"                        break;",
								"",
								"                    case 'ldap':",
								"                        AppCacheLogonLdap.Logoff();",
								"                        break;",
								"",
								"                    default:",
								"                        AppCacheLogonLocal.Logoff();",
								"                        break;",
								"                }",
								"            } else {",
								"                AppCacheLogonLocal.Logoff();",
								"            }",
								"        } else {",
								"            // Logoff ",
								"            if (AppCache.userInfo && AppCache.userInfo.logonData) {",
								"                switch (AppCache.userInfo.logonData.type) {",
								"                    case 'azure-bearer':",
								"                        AppCacheLogonAzure.Signout();",
								"                        break;",
								"",
								"                    case 'openid-connect':",
								"                        AppCacheLogonOIDC.Signout();",
								"                        break;",
								"",
								"                    default:",
								"                        break;",
								"                }",
								"            }",
								"            // Enhancement",
								"            if (sap.n.Enhancement.AfterLogout) {",
								"                try {",
								"                    sap.n.Enhancement.AfterLogout();",
								"                } catch (e) {",
								"                    appCacheError('Enhancement AfterLogout ' + e);",
								"                }",
								"            }",
								"",
								"            jsonRequest({",
								"                url: AppCache.Url + '/user/logout',",
								"                success: function (data) {",
								"                    location.hash = '';",
								"                    location.reload();",
								"                },",
								"                error: function (result, status) { }",
								"            });",
								"        }",
								"",
								"        AppCache.translate(navigator.language.slice(0, 2).toUpperCase());",
								"        sap.ui.core.BusyIndicator.hide();",
								"    },",
								"",
								"    LogonCustom: function (options) {",
								"        AppCache_loginTypes.setSelectedKey(options.logonid);",
								"        AppCache_inUsername.setValue(options.username);",
								"        AppCache_inPassword.setValue(options.password);",
								"        AppCache.Logon();",
								"    },",
								"",
								"    Logon: function () {",
								"        let logonData = AppCache.getLogonTypeInfo(AppCache_loginTypes.getSelectedKey());",
								"",
								"        // Logon ",
								"        switch (logonData.type) {",
								"            case 'local':",
								"                AppCacheLogonLocal.Logon();",
								"                break;",
								"",
								"            case 'azure-bearer':",
								"                AppCacheLogonLocal.AutoLoginRemove();",
								"                AppCacheLogonAzure.Logon();",
								"                break;",
								"",
								"            case 'openid-connect':",
								"                AppCacheLogonLocal.AutoLoginRemove();",
								"                AppCacheLogonOIDC.Logon();",
								"                break;",
								"",
								"            case 'saml':",
								"                AppCacheLogonLocal.AutoLoginRemove();",
								"                if (AppCache.isMobile) {",
								"                    AppCacheLogonSaml.Logon(logonData);",
								"                } else {",
								"                    window.open(logonData.entryPoint);",
								"                }",
								"                break;",
								"",
								"            case 'ldap':",
								"                AppCacheLogonLocal.AutoLoginRemove();",
								"                AppCacheLogonLdap.Logon();",
								"                break;",
								"        }",
								"    },",
								"",
								"    getLogonTypeInfo: function (id) {",
								"        let info = { type: 'local' };",
								"        const { logonTypes } = modelDataSettings.oData;",
								"        Array.isArray(logonTypes) && logonTypes.forEach(function (data) {",
								"            if (data.id === id) info = data;",
								"        });",
								"",
								"        delete info.bindCredentials;",
								"        delete info.bindDn;",
								"        delete info.filterGroup;",
								"        delete info.filterUser;",
								"        delete info.findGroupsForUserFilter;",
								"        delete info.groupKeyField;",
								"        delete info.mapGroup;",
								"        delete info.mapUser;",
								"        delete info.searchBase;",
								"        delete info.searchFilter;",
								"        delete info.searchGroupFilter;",
								"        delete info.searchUserFilter;",
								"",
								"        return info;",
								"    },",
								"",
								"    setUserInfo: function () {",
								"        AppCacheUserActionText.setText(AppCache.userInfo.name || AppCache.userInfo.username);",
								"        inAppCacheFormSettingsLang.setSelectedKey(AppCache.userInfo.language);",
								"",
								"        // Enhancement",
								"        if (sap.n.Enhancement.setUserInfo) {",
								"            try {",
								"                sap.n.Enhancement.setUserInfo();",
								"            } catch (e) {",
								"                appCacheError('Enhancement setUserInfo ' + e);",
								"            }",
								"        }",
								"",
								"        if (AppCache.isMobile) return;",
								"",
								"        // logonData ",
								"        let logonData = localStorage.getItem('p9logonData');",
								"",
								"        if (logonData) {",
								"            try {",
								"                AppCache.userInfo.logonData = JSON.parse(logonData);",
								"                delete AppCache.userInfo.logonData.bindCredentials;",
								"                delete AppCache.userInfo.logonData.bindDn;",
								"                delete AppCache.userInfo.logonData.filterGroup;",
								"                delete AppCache.userInfo.logonData.filterUser;",
								"                delete AppCache.userInfo.logonData.findGroupsForUserFilter;",
								"                delete AppCache.userInfo.logonData.groupKeyField;",
								"                delete AppCache.userInfo.logonData.mapGroup;",
								"                delete AppCache.userInfo.logonData.mapUser;",
								"                delete AppCache.userInfo.logonData.searchBase;",
								"                delete AppCache.userInfo.logonData.searchFilter;",
								"                delete AppCache.userInfo.logonData.searchGroupFilter;",
								"                delete AppCache.userInfo.logonData.searchUserFilter;",
								"            } catch (e) { }",
								"        }",
								"",
								"        // Azure Bearer ",
								"        if (AppCache.userInfo.logonData && AppCache.userInfo.logonData.type === 'azure-bearer') {",
								"            let tokenData = localStorage.getItem('p9azuretoken');",
								"            let tokenDatav2 = localStorage.getItem('p9azuretokenv2');",
								"",
								"            if (tokenData || tokenDatav2) {",
								"                try {",
								"                    if (tokenDatav2) {",
								"                        AppCacheLogonAzure.Relog(null);",
								"                    } else {",
								"",
								"                        AppCache.userInfo.azureToken = JSON.parse(tokenData);",
								"                        AppCache.userInfo.azureUser = AppCacheLogonAzure._parseJwt(AppCache.userInfo.azureToken.id_token);",
								"                        AppCache.userInfo.authDecrypted = AppCache.userInfo.azureToken.refresh_token;",
								"",
								"                        if (AppCache.userInfo.azureToken.refresh_token) {",
								"                            AppCacheLogonAzure.Relog(AppCache.userInfo.azureToken.refresh_token);",
								"                        }",
								"                    }",
								"                } catch (e) { }",
								"            }",
								"        }",
								"",
								"        // OIDC Bearer ",
								"        if (AppCache.userInfo.logonData && AppCache.userInfo.logonData.type === 'openid-connect') {",
								"            let tokenDataOIDC = localStorage.getItem('p9oidctoken');",
								"            if (tokenDataOIDC) {",
								"                try {",
								"                    AppCache.userInfo.oidcToken = JSON.parse(tokenData);",
								"                    AppCache.userInfo.oidcUser = AppCacheLogonOIDC._parseJwt(AppCache.userInfo.azureToken.id_token);",
								"                    AppCache.userInfo.authDecrypted = AppCache.userInfo.oidcToken.refresh_token;",
								"                } catch (e) { }",
								"            }",
								"        }",
								"",
								"        // localStorage.removeItem('p9azuretoken');",
								"        // localStorage.removeItem('p9azuretokenv2');",
								"        // localStorage.removeItem('p9oidctoken');",
								"        // localStorage.removeItem('p9logonData');",
								"    },",
								"",
								"    getUserInfo: function () {",
								"        // Fetch UserData",
								"        sap.n.Planet9.function({",
								"            id: dataSet,",
								"            method: 'GetUserInfo',",
								"            success: function (data) {",
								"                appCacheLog('Successfully received User Info from P9');",
								"                appCacheLog(data);",
								"                AppCache.afterUserInfo(false, data);",
								"            },",
								"            error: function (result, error) {",
								"                appCacheError('Error getting User Info (getUserInfo)');",
								"",
								"                // Cookie Disabled ? ",
								"                if (result.status === 401) {",
								"                    console.error('getUserInfo: 401 Not authenticated. Please check system settings and security for cookie settings')",
								"                }",
								"",
								"                AppCache.afterUserInfo(true);",
								"            }",
								"        });",
								"",
								"    },",
								"",
								"    updateUserInfo: function () {",
								"        return new Promise(function (resolve) {",
								"            appCacheLog('AppCache.updateUserInfo: Starting');",
								"",
								"            // Fetch UserData",
								"            sap.n.Planet9.function({",
								"                id: dataSet,",
								"                method: 'GetUserInfo',",
								"                success: function (userInfo) {",
								"                    appCacheLog('AppCache.updateUserInfo: Successfully received User Info from P9');",
								"                    appCacheLog(userInfo);",
								"",
								"                    if (userInfo && userInfo.length) {",
								"                        let u = userInfo[0];",
								"                        let user = ModelData.FindFirst(AppCacheUsers, 'username', u.username);",
								"",
								"                        if (user) {",
								"                            user = Object.assign({}, user, {",
								"                                group: u.group || [],",
								"                                roles: u.roles || [],",
								"                                language: u.language,",
								"                                mobile: u.mobile,",
								"                                phone: u.phone,",
								"                                email: u.email,",
								"                                name: u.name,",
								"                            });",
								"",
								"                            AppCacheUserActionText.setText(user.name || user.username);",
								"                            ModelData.Update(AppCacheUsers, 'username', user.username, user);",
								"                            setCacheAppCacheUsers();",
								"                        }",
								"                    }",
								"                    resolve('Ok');",
								"                },",
								"                error: function (result, _err) {",
								"                    appCacheError('Error getting User Info from (updateUserInfo)');",
								"                    appCacheError(result);",
								"                    resolve('Error');",
								"                }",
								"            });",
								"        });",
								"    },",
								"",
								"    afterUserInfo: function (offline, data) {",
								"        let userData = '';",
								"",
								"        if (offline && !AppCache.isMobile) {",
								"            getCacheAppCacheUsers();",
								"            userData = modelAppCacheUsers.oData[0];",
								"        } else {",
								"            if (data) {",
								"                userData = data[0];",
								"                ModelData.Update(AppCacheUsers, 'username', data[0].username, userData);",
								"                setCacheAppCacheUsers();",
								"            }",
								"        }",
								"",
								"        sap.ui.core.BusyIndicator.hide();",
								"        AppCache_inPassword.setValue();",
								"",
								"        if (AppCache.loginApp) AppCacheShellUI.setAppWidthLimited(true);",
								"",
								"        // Azure/OIDC - No PIN Code",
								"        if (!AppCache.enablePasscode) {",
								"            if (AppCache.userInfo && AppCache.userInfo.azureToken) userData.azureToken = AppCache.userInfo.azureToken;",
								"            if (AppCache.userInfo && AppCache.userInfo.azureUser) userData.azureUser = AppCache.userInfo.azureUser;",
								"            if (AppCache.userInfo && AppCache.userInfo.oidcToken) userData.oidcToken = AppCache.userInfo.oidcToken;",
								"            if (AppCache.userInfo && AppCache.userInfo.oidcUser) userData.oidcUser = AppCache.userInfo.oidcUser;",
								"",
								"            AppCache.userInfo.logonData = AppCache.getLogonTypeInfo(AppCache_loginTypes.getSelectedKey());",
								"",
								"            if (AppCache.enablePwa && AppCache.userInfo.logonData.type === 'azure-bearer') {",
								"                AppCacheLogonAzure.Signout();",
								"            }",
								"",
								"            if (AppCache.enablePwa && AppCache.userInfo.logonData.type === 'openid-connect') {",
								"                AppCacheLogonOIDC.Signout();",
								"            }",
								"",
								"        }",
								"",
								"        // User Information",
								"        if (userData) AppCache.userInfo = userData;",
								"        AppCache.setUserInfo();",
								"",
								"        // Desktop ",
								"        if (!AppCache.isMobile) {",
								"",
								"            AppCache.translate(AppCache.userInfo.language);",
								"",
								"            cacheLoaded = 0;",
								"            getCacheAppCacheTiles(true);",
								"            getCacheAppCacheCategory(true);",
								"            getCacheAppCacheCategoryChild(true);",
								"            getCacheAppCacheTilesRun(true);",
								"            getCacheAppCacheTilesFav(true);",
								"",
								"            (function () {",
								"                function waitForCache() {",
								"                    if (cacheLoaded >= 5) {",
								"                        AppCache.Update();",
								"                    } else {",
								"                        setTimeout(waitForCache, 50);",
								"                    }",
								"                }",
								"                waitForCache();",
								"            })();",
								"",
								"        } else {",
								"",
								"            // Translate if Mobile and not PIN Code",
								"            if (!AppCache.enablePasscode) {",
								"                AppCache.translate(AppCache.userInfo.language);",
								"            }",
								"",
								"            if (AppCache.enablePasscode) {",
								"                AppCache.setEnablePasscodeScreen();",
								"            } else {",
								"                NumPad.Verify = true;",
								"                AppCacheShellUser.setEnabled(true);",
								"                AppCacheUserActionLogoff.setVisible(true);",
								"                if (AppCache.biometricAuthentication) sap.n.Fingerprint.saveBasicAuth();",
								"                AppCache.Update();",
								"            }",
								"",
								"        }",
								"    },",
								"",
								"    clearPasscodeInputs: function () {",
								"        const p1 = AppCache_inPasscode1;",
								"        const p2 = AppCache_inPasscode2;",
								"",
								"        p1.setValue().setValueState('None');",
								"        p2.setValue().setValueState('None');",
								"    },",
								"",
								"    SetPasscode: function () {",
								"        const p1 = AppCache_inPasscode1;",
								"        const p2 = AppCache_inPasscode2;",
								"",
								"        const v1 = p1.getValue().trim();",
								"        const v2 = p2.getValue().trim();",
								"",
								"        const v1Valid = isPincodeValid(v1);",
								"        const v2Valid = isPincodeValid(v2);",
								"",
								"        if (!v1Valid.isValid && v1Valid.errorMessage) {",
								"            showPincodeError(v1Valid.errorMessage);",
								"            AppCache.clearPasscodeInputs();",
								"            return p1.focus();",
								"        }",
								"",
								"        if (!v2Valid.isValid && v2Valid.errorMessage) {",
								"            showPincodeError(v2Valid.errorMessage);",
								"            AppCache.clearPasscodeInputs();",
								"            return p2.focus();",
								"        }",
								"",
								"        if (!v1) {",
								"            showPincodeError(pincodeEntryErrs().newPasscode, p1);",
								"            return p1.focus();",
								"        }",
								"",
								"        if (!v2) {",
								"            showPincodeError(pincodeEntryErrs().repeatPasscode, p2);",
								"            return p2.focus();",
								"        }",
								"",
								"        if (v2.length !== AppCache.passcodeLength) {",
								"            showPincodeError(pincodeEntryErrs().passcodeTooShort);",
								"            AppCache.clearPasscodeInputs();",
								"            return p1.focus();",
								"        }",
								"",
								"        if (v1 !== v2) {",
								"            showPincodeError(pincodeEntryErrs().passcodeNoMatch);",
								"            AppCache.clearPasscodeInputs();",
								"            return p1.focus();",
								"        }",
								"",
								"        // Clear Values",
								"        AppCache.Passcode = p1.getValue();",
								"        setTimeout(AppCache.clearPasscodeInputs, 1000);",
								"",
								"        // Store Authentication",
								"        const key = generatePBKDF2Key(AppCache.Passcode, AppCache.deviceID)",
								"        const encrypted = encryptAES(AppCache.Auth, key.toString());",
								"        AppCache.Encrypted = encrypted.toString();",
								"",
								"        // User Data ",
								"        if (isCordova() && typeof cordova.plugins !== 'undefined' && typeof cordova.plugins.SecureKeyStore !== 'undefined') {",
								"            let sksKey = AppCache.AppID + '-' + AppCache.userInfo.username;",
								"            cordova.plugins.SecureKeyStore.set(function (res) { }, function (error) {",
								"                AppCache.userInfo.auth = encrypted.toString();",
								"            }, sksKey, encrypted.toString());",
								"        } else {",
								"            AppCache.userInfo.auth = encrypted.toString();",
								"        }",
								"",
								"        // Store data to user ",
								"        if (isCordova() && !window.navigator.simulator && AppCache.biometricAuthentication) AppCache.userInfo.biometric = true;",
								"",
								"        // Logon Type ",
								"        if (AppCache.samlData) {",
								"            AppCache.userInfo.logonData = AppCache.samlData;",
								"            AppCache.userInfo.logonData.type = 'saml';",
								"        } else {",
								"            AppCache.userInfo.logonData = AppCache.getLogonTypeInfo(AppCache_loginTypes.getSelectedKey());",
								"        }",
								"",
								"        // Only Biometric for 1. User",
								"        if (modelAppCacheUsers.oData.length > 1) AppCache.userInfo.biometric = false;",
								"        if (modelAppCacheUsers.oData.length === 1 && modelAppCacheUsers.oData[0].username !== AppCache.userInfo.username) AppCache.userInfo.biometric = false;",
								"",
								"        // Save User Data  ",
								"        setCacheAppCacheUsers();",
								"        modelAppCacheUsers.refresh();",
								"",
								"        // PWA - Azure ",
								"        if (AppCache.enablePwa && AppCache.userInfo.logonData.type === 'azure-bearer') {",
								"            AppCacheLogonAzure.Signout();",
								"        }",
								"",
								"        // PWA - OIDC ",
								"        if (AppCache.enablePwa && AppCache.userInfo.logonData.type === 'openid-connect') {",
								"            AppCacheLogonOIDC.Signout();",
								"        }",
								"",
								"        // Store passcode to OS SAMKeychain library or Android SecureStorage",
								"        if (isCordova() && !window.navigator.simulator && AppCache.biometricAuthentication) {",
								"",
								"            // Set OS SAMKeychain library and Android SecureStorage key",
								"            let serviceKey = AppCache.userInfo.username;",
								"            let dialogText = AppCache_tEnableFingerprint.getText();",
								"",
								"            if (sap.ui.Device.os.ios && sap.ui.Device.os.version >= 11 && device && device.model && device.model.indexOf('iPhone10') > 0) {",
								"                dialogText = AppCache_tEnableFaceId.getText();",
								"            }",
								"",
								"            if (sap.ui.Device.os.android && FingerprintAuth) {",
								"",
								"                try {",
								"                    FingerprintAuth.isAvailable(function (result) {",
								"",
								"                        if (result.isAvailable && result.hasEnrolledFingerprints) {",
								"",
								"                            // Prevent soft keyboard",
								"                            p1.setEnabled(false);",
								"                            p2.setEnabled(false);",
								"",
								"                            // Get user language",
								"                            let pluginLanguage = sap.n.Fingerprint.android.getLanguage(AppCache.userInfo.language);",
								"",
								"                            // Biometric authentication config",
								"                            let encryptConfig = {",
								"                                clientId: AppCache.AppID,",
								"                                username: serviceKey,",
								"                                password: AppCache.Passcode,",
								"                                disableBackup: true,",
								"                                maxAttempts: 5,",
								"                                locale: pluginLanguage,",
								"                                userAuthRequired: true,",
								"                                dialogMessage: dialogText",
								"                            };",
								"",
								"                            // Encrypt",
								"                            FingerprintAuth.encrypt(encryptConfig, function (result) {",
								"                                // Encryption success",
								"                                if (result.withFingerprint || result.withBackup) {",
								"                                    AppCache.userInfo.token = result.token;",
								"                                    setCacheAppCacheUsers();",
								"                                    AppCache.setEnablePasscodeEntry();",
								"                                } else {",
								"                                    AppCache.biometricAuthentication = false;",
								"                                    AppCache.userInfo.biometric = false;",
								"                                    setCacheAppCacheUsers();",
								"                                    AppCache.setEnablePasscodeEntry();",
								"                                }",
								"                            }, function (error) {",
								"                                AppCache.biometricAuthentication = false;",
								"                                AppCache.userInfo.biometric = false;",
								"                                setCacheAppCacheUsers();",
								"                                AppCache.setEnablePasscodeEntry();",
								"                            });",
								"                        } else {",
								"                            AppCache.biometricAuthentication = false;",
								"                            AppCache.userInfo.biometric = false;",
								"                            setCacheAppCacheUsers();",
								"                            AppCache.setEnablePasscodeEntry();",
								"                        }",
								"                    }, function (error) {",
								"                        AppCache.biometricAuthentication = false;",
								"                        AppCache.userInfo.biometric = false;",
								"                        setCacheAppCacheUsers();",
								"                        AppCache.setEnablePasscodeEntry();",
								"                    });",
								"                } catch (error) {",
								"                    AppCache.biometricAuthentication = false;",
								"                    AppCache.userInfo.biometric = false;",
								"                    setCacheAppCacheUsers();",
								"                    AppCache.setEnablePasscodeEntry();",
								"                }",
								"",
								"            } else if (sap.ui.Device.os.ios && typeof cordova.plugins !== 'undefined' && cordova.plugins.SecureKeyStore && typeof CID !== 'undefined') {",
								"",
								"                // Prevent soft keyboard",
								"                p1.setEnabled(false);",
								"                p2.setEnabled(false);",
								"",
								"                CID.checkAuth(dialogText, function (res) {",
								"",
								"                    if (res == 'success') {",
								"                        cordova.plugins.SecureKeyStore.set(function (res) {",
								"                            AppCache.setEnablePasscodeEntry();",
								"                        }, function (error) {",
								"                            console.log(error);",
								"                            AppCache.biometricAuthentication = false;",
								"                            AppCache.userInfo.biometric = false;",
								"                            setCacheAppCacheUsers();",
								"                            AppCache.setEnablePasscodeEntry();",
								"                        }, serviceKey, AppCache.Passcode);",
								"                    } else {",
								"                        console.log(res);",
								"                        AppCache.biometricAuthentication = false;",
								"                        AppCache.userInfo.biometric = false;",
								"                        setCacheAppCacheUsers();",
								"                        AppCache.setEnablePasscodeEntry();",
								"                    }",
								"",
								"                }, function (error) {",
								"                    console.log(error);",
								"                    AppCache.biometricAuthentication = false;",
								"                    AppCache.userInfo.biometric = false;",
								"                    setCacheAppCacheUsers();",
								"                    AppCache.setEnablePasscodeEntry();",
								"                });",
								"",
								"            } else {",
								"                AppCache.biometricAuthentication = false;",
								"                AppCache.userInfo.biometric = false;",
								"                setCacheAppCacheUsers();",
								"                AppCache.setEnablePasscodeEntry();",
								"            }",
								"",
								"        } else {",
								"            AppCache.setEnablePasscodeEntry();",
								"        }",
								"    },",
								"",
								"    RemoveAllCache: function () {",
								"",
								"        appCacheLog('AppCache.RemoveAllCache triggered');",
								"",
								"        // Remove iOS SAMKeychain library and Android SecureStorage keys",
								"        if (isCordova() && !window.navigator.simulator) {",
								"",
								"            if (sap.ui.Device.os.ios || sap.ui.Device.os.android) {",
								"",
								"                // KeyChain & SecureStorage",
								"                if (typeof cordova !== 'undefined' && typeof cordova.plugins !== 'undefined' && cordova.plugins.SecureKeyStore && modelAppCacheUsers.oData) {",
								"",
								"                    for (i = 0; i < modelAppCacheUsers.oData.length; i++) {",
								"",
								"                        let sksKey = AppCache.AppID + '-' + modelAppCacheUsers.oData[i].username;",
								"",
								"                        cordova.plugins.SecureKeyStore.remove(function (res) {",
								"                        }, function (error) {",
								"                            console.error(error);",
								"                        }, sksKey);",
								"                    }",
								"                }",
								"",
								"                let serviceKey;",
								"",
								"                // FingerprintAuth.delete",
								"                if (window.FingerprintAuth) {",
								"                    modelAppCacheUsers.oData.forEach(function (data) {",
								"                        if (!data.biometric) return true;",
								"                        serviceKey = data.username;",
								"                        try {",
								"                            FingerprintAuth.delete({",
								"                                clientId: AppCache.AppID,",
								"                                username: serviceKey",
								"                            }, function (result) {",
								"",
								"                            }, function (error) {",
								"                                console.error(error);",
								"                            });",
								"                        } catch (error) {",
								"                            console.error(error);",
								"                        }",
								"                    });",
								"                }",
								"",
								"            }",
								"",
								"        }",
								"",
								"        // LocalStorage",
								"        localStorage.clear();",
								"",
								"        // IndexedDB",
								"        if (typeof p9Database !== 'undefined' && p9Database !== null) {",
								"            let db, tx, store;",
								"",
								"            db = p9Models.result;",
								"",
								"            tx = db.transaction('model', 'readwrite');",
								"            store = tx.objectStore('model');",
								"            store.clear();",
								"",
								"            db = p9Views.result;",
								"            tx = db.transaction('view', 'readwrite');",
								"            store = tx.objectStore('view');",
								"            store.clear();",
								"        }",
								"",
								"        // Old implementation",
								"        if (typeof p9ModelsDB !== 'undefined') p9ModelsDB.p9Models.clear();",
								"        if (typeof p9ViewsDB !== 'undefined') p9ViewsDB.p9Views.clear();",
								"",
								"        modelAppCacheUsers.setData([]);",
								"        modelAppCacheData.setData([]);",
								"        modelAppCacheTiles.setData([]);",
								"        modelAppCacheTilesRun.setData([]);",
								"        modelAppCacheCategory.setData([]);",
								"        modelAppCacheCategoryChild.setData([]);",
								"",
								"    },",
								"",
								"    Update: function () {",
								"        appCacheLog('AppCache.Update: Starting');",
								"        setiOSPwaIcons();",
								"",
								"        let afterPromise = function () {",
								"            if (AppCache.isMobile) {",
								"                appCacheLog('AppCache.Update: Starting mobile');",
								"                AppCache.restrictedDisable();",
								"            } else {",
								"                appCacheLog('AppCache.Update: Starting desktop');",
								"                AppCache.UpdateGetData();",
								"            }",
								"",
								"            // PushNotification",
								"            try {",
								"                // Mobile ",
								"                if (AppCache.enablePush && isCordova()) {",
								"                    setTimeout(function () {",
								"                        if (AppCache.isRestricted) return;",
								"                        appCacheLog('PushNotifications: Starting setup mobile');",
								"                        sap.n.Push.setupPush();",
								"                    }, 1000 * 3);",
								"                }",
								"",
								"                // Desktop",
								"                if (typeof setupNotifications === 'function') {",
								"                    setTimeout(function () {",
								"                        if (AppCache.isRestricted) return;",
								"                        appCacheLog('PushNotifications: Starting setup desktop');",
								"                        setupNotifications();",
								"                    }, 1000 * 3);",
								"                }",
								"",
								"            } catch (e) {",
								"                console.log(e);",
								"            }",
								"",
								"            // Auto Update ",
								"            if (AppCache.enableAutoUpdate) AppCache.AutoUpdateMobileApp();",
								"",
								"            // Enhancement",
								"            if (sap.n.Enhancement.AfterUpdate) {",
								"                try {",
								"                    sap.n.Enhancement.AfterUpdate();",
								"                } catch (e) {",
								"                    appCacheError('Enhancement AfterUpdate ' + e);",
								"                }",
								"            }",
								"",
								"        }",
								"",
								"        // Enhancement",
								"        if (sap.n.Enhancement.BeforeUpdate) {",
								"            try {",
								"                let actions = [];",
								"                actions.push(sap.n.Enhancement.BeforeUpdate());",
								"                Promise.all(actions).then(function (values) {",
								"                    afterPromise();",
								"                });",
								"            } catch (e) {",
								"                appCacheError('Enhancement BeforeUpdate ' + e);",
								"            }",
								"        } else {",
								"            afterPromise();",
								"        }",
								"",
								"    },",
								"",
								"    UpdateGetData: function () {",
								"        // Wrapped this in a promise so apps that use UpdateGetData can determine when it has completed.",
								"        return new Promise(function (resolve) {",
								"            appCacheLog('AppCache.UpdateGetData: Starting');",
								"",
								"            if (AppCache.StartApp) {",
								"                // Start App",
								"                sap.n.Launchpad.currentTile = {",
								"                    id: AppCache.StartApp.toUpperCase(),",
								"                };",
								"",
								"                AppCacheShellUI.setAppWidthLimited(false);",
								"                sap.ui.core.BusyIndicator.hide();",
								"            } else if (AppCache.StartWebApp) {",
								"                // Start WebApp",
								"                AppCacheShellUI.setAppWidthLimited(false);",
								"                sap.ui.core.BusyIndicator.hide();",
								"            } else {",
								"                sap.n.Launchpad.BuildMenu();",
								"                if (!AppCache.isPublic && !modelAppCacheTiles.oData.length) busyDialogStartup.open();",
								"            }",
								"",
								"            // Payload",
								"            let dataRequest = {",
								"                deviceType: sap.n.Launchpad.deviceType(),",
								"                launchpad: AppCache.launchpadID,",
								"                apps: []",
								"            }",
								"",
								"            // Save Current Tiles/Category",
								"            currCategory = JSON.parse(JSON.stringify(modelAppCacheCategory.oData));",
								"            currCategoryChild = JSON.parse(JSON.stringify(modelAppCacheCategoryChild.oData));",
								"            currTiles = JSON.parse(JSON.stringify(modelAppCacheTiles.oData));",
								"            currFav = JSON.parse(JSON.stringify(modelAppCacheTilesFav.oData));",
								"",
								"            // Hide BusyIndicator of already cached data ",
								"            if (currTiles.length) sap.ui.core.BusyIndicator.hide();",
								"",
								"            // Duplicate Check & System Split",
								"            let uniqueApps = {};",
								"            let appSystems = {};",
								"",
								"            Array.isArray(modelAppCacheData.oData) && modelAppCacheData.oData.forEach(function (data) {",
								"                if (!data.appPath || data.appPath === 'null') data.appPath = '';",
								"                if (!uniqueApps[data.application + '|' + data.appPath]) uniqueApps[data.application + '|' + data.appPath] = data;",
								"            });",
								"",
								"            for (let key in uniqueApps) {",
								"                let keyData = key.split('|');",
								"                let appPath = keyData[1];",
								"",
								"                if (appPath) {",
								"                    if (!appSystems[appPath]) appSystems[appPath] = [];",
								"                    appSystems[appPath].push(uniqueApps[key]);",
								"                } else {",
								"                    dataRequest.apps.push(uniqueApps[key]);",
								"                }",
								"            }",
								"",
								"            appCacheLog('AppCache.UpdateGetData: Apps to check update before getTiles');",
								"            appCacheLog(dataRequest);",
								"",
								"            // Get Tiles ",
								"            sap.n.Planet9.function({",
								"                id: dataSet,",
								"                method: 'GetTiles',",
								"                data: dataRequest,",
								"                success: function (data) {",
								"                    busyDialogStartup.close();",
								"",
								"                    if (data.status && isLaunchpadNotFound(data.status)) {",
								"                        showLaunchpadNotFoundError(data.status);",
								"                        return;",
								"                    }",
								"",
								"                    // Blackout",
								"                    if (data.blackout) {",
								"                        sap.m.MessageBox.show(data.blackout.message, {",
								"                            title: data.blackout.title || 'System Status',",
								"                            onClose: function (oAction) {",
								"                                if (AppCache.isMobile) {",
								"                                    if (AppCache.enablePasscode) {",
								"                                        AppCache.Lock();",
								"                                    } else {",
								"                                        AppCache.Logout();",
								"                                    }",
								"                                } else {",
								"                                    topShell.setBlocked(true);",
								"                                }",
								"                            }",
								"                        });",
								"                        return;",
								"                    }",
								"",
								"                    if (!data.categoryChilds) data.categoryChilds = [];",
								"",
								"                    modelAppCacheData.setData(data.apps);",
								"                    modelAppCacheTiles.setData(data.tiles);",
								"                    modelAppCacheCategory.setData(data.category);",
								"                    modelAppCacheCategoryChild.setData(data.categoryChilds);",
								"",
								"                    if (data.fav && data.fav.tiles) {",
								"                        modelAppCacheTilesFav.setData(data.fav.tiles);",
								"                    } else {",
								"                        modelAppCacheTilesFav.setData([]);",
								"                    }",
								"",
								"                    // Check if UI5 Version Changed ",
								"                    let ui5Version = localStorage.getItem('p9ui5version');",
								"                    if (ui5Version !== sap.ui.version) {",
								"                        data.apps.forEach(function (app) {",
								"                            app.invalid = true;",
								"                        });",
								"                        localStorage.setItem('p9ui5version', sap.ui.version);",
								"                    }",
								"",
								"                    // Get App Update from Other Systems",
								"                    let action = [];",
								"                    for (let key in appSystems) { action.push(AppCache.UpdateGetDataRemote(appSystems[key])); }",
								"                    AppCache.hideGlobalAjaxError = true;",
								"                    Promise.all(action).then(function (values) {",
								"                        AppCache.hideGlobalAjaxError = false;",
								"",
								"                        // Merge App Check Data from Remote Systems ",
								"                        values.forEach(function (value) {",
								"                            // SAP ",
								"                            if (value && value.result && value.result.apps) {",
								"                                value.result.apps.forEach(function (app) {",
								"                                    modelAppCacheData.oData.push({",
								"                                        appType: app.apptype,",
								"                                        application: app.application,",
								"                                        updatedAt: app.updatedat,",
								"                                        invalid: app.invalid,",
								"                                        language: app.language,",
								"                                        appPath: app.apppath",
								"                                    });",
								"                                });",
								"                            } else {",
								"                                if (value && value.length) ModelData.AddArray(AppCacheData, value);",
								"                            }",
								"                        });",
								"",
								"                        // Save Cache",
								"                        setCacheAppCacheData();",
								"                        setCacheAppCacheTiles();",
								"                        setCacheAppCacheCategory();",
								"                        setCacheAppCacheCategoryChild();",
								"                        setCacheAppCacheTilesFav();",
								"",
								"                        appCacheLog('AppCache.UpdateGetData: after getTiles and saved to database');",
								"",
								"                        sap.n.Ajax.SuccessGetMenu();",
								"                        sap.ui.core.BusyIndicator.hide();",
								"",
								"                        // Check Update of StartApp ",
								"                        data.apps.forEach(function (app) {",
								"                            if (sap.n.Launchpad.currentTile &&",
								"                                sap.n.Launchpad.currentTile.actionApplication &&",
								"                                app.application.toLowerCase() === sap.n.Launchpad.currentTile.actionApplication.toLowerCase() &&",
								"                                app.invalid) AppCache.Load(sap.n.Launchpad.currentTile.actionApplication);",
								"                        });",
								"",
								"                        // Fetch all Apps if on Mobile ",
								"                        if (AppCache.isMobile && !AppCache.enablePwa) {",
								"                            data.tiles.forEach(function (tile) {",
								"                                if (tile.actionApplication || tile.tileApplication) sap.n.Ajax.loadApps(tile);",
								"                            });",
								"                        }",
								"",
								"                        if (AppCache.StartApp) {",
								"                            AppCache.Load(AppCache.StartApp);",
								"                            // Start WebApp",
								"                        } else if (AppCache.StartWebApp) {",
								"                            AppCache.LoadWebApp(AppCache.StartWebApp);",
								"                        }",
								"",
								"                        resolve();",
								"                    });",
								"                },",
								"                error: function (result, status) {",
								"                    sap.ui.core.BusyIndicator.hide();",
								"                    busyDialogStartup.close();",
								"",
								"                    // We must load existing versions of the start app if we failed to fetch new ones",
								"                    if (AppCache.StartApp) {",
								"                        AppCache.Load(AppCache.StartApp);",
								"                        // Start WebApp",
								"                    } else if (AppCache.StartWebApp) {",
								"                        AppCache.LoadWebApp(AppCache.StartWebApp);",
								"                    }",
								"",
								"                    if (result.responseJSON && result.responseJSON.status && isLaunchpadNotFound(result.responseJSON.status)) {",
								"                        showLaunchpadNotFoundError(result.responseJSON.status);",
								"                        return;",
								"                    }",
								"",
								"                    resolve();",
								"                }",
								"            });",
								"        });",
								"    },",
								"",
								"    UpdateGetDataRemote: function (apps) {",
								"        return new Promise(function (resolve, reject) {",
								"            let url = '';",
								"            let headers = {};",
								"            let dataRequest = apps;",
								"            let app = apps[0];",
								"            let dataTile = ModelData.FindFirst(AppCacheTiles, 'urlApplication', app.appPath);",
								"",
								"            if (!dataTile) resolve();",
								"            if (!apps.length) resolve();",
								"",
								"            // URL",
								"            if (dataTile.urlType === 'SAP') {",
								"                headers.NeptuneServer = dataTile.urlApplication;",
								"                url = '/proxy/remote/' + encodeURIComponent(dataTile.urlApplication + '/neptune/api/server/app_check_update') + '/' + dataTile.urlAuth;",
								"            } else {",
								"                url = '/api/functions/Launchpad/CheckUpdate?p9Server=' + dataTile.urlApplication;",
								"                url = '/proxy/remote/' + encodeURIComponent(dataTile.urlApplication + url) + '/' + dataTile.urlAuth;",
								"            }",
								"",
								"            // Authentication ID",
								"            headers['X-Auth-In-P9'] = dataTile.urlAuth;",
								"",
								"            // Enhancement",
								"            if (sap.n.Enhancement.RemoteSystemAuth) {",
								"                try {",
								"                    sap.n.Enhancement.RemoteSystemAuth(headers);",
								"                } catch (e) {",
								"                    appCacheError('Enhancement RemoteSystemAuth ' + e);",
								"                }",
								"            }",
								"",
								"            jsonRequest({",
								"                url: url,",
								"                data: JSON.stringify(dataRequest),",
								"                headers: headers,",
								"                success: function (data) {",
								"                    resolve(data);",
								"                },",
								"                error: function (result, status) {",
								"                    resolve([]);",
								"                }",
								"            });",
								"        });",
								"    },",
								"",
								"    enableExternalTools: function () {",
								"",
								"        // SAP Conversational AI",
								"        if (AppCache.config.sapcai_enabled && AppCache.config.sapcai_channelid && AppCache.config.sapcai_token && !sap.n.Launchpad.isPhone()) {",
								"",
								"            window.webchatMethods = {",
								"                getMemory: function (conversationId) {",
								"                    let userName = AppCache.userInfo.name || 'anonymous';",
								"                    let userId = AppCache.userInfo.username || 'anonymous';",
								"                    let userLanguage = AppCache.userInfo.language || 'na';",
								"                    let customData = AppCache.sapCAICustomData || {};",
								"",
								"                    const memory = {",
								"                        userName: userName,",
								"                        userId: userId,",
								"                        userLanguage: userLanguage,",
								"                        customData: customData",
								"                    }",
								"",
								"                    return { memory: memory, merge: true }",
								"                }",
								"            }",
								"",
								"            if (!document.getElementById('cai-webchat')) {",
								"                let s = document.createElement('script');",
								"                s.setAttribute('id', 'cai-webchat');",
								"                s.setAttribute('src', 'https://cdn.cai.tools.sap/webchat/webchat.js');",
								"                s.setAttribute('channelId', AppCache.config.sapcai_channelid);",
								"                s.setAttribute('token', AppCache.config.sapcai_token);",
								"                document.body.appendChild(s);",
								"            } else {",
								"                let s = document.getElementById('cai-webchat');",
								"                s.setAttribute('channelId', AppCache.config.sapcai_channelid);",
								"                s.setAttribute('token', AppCache.config.sapcai_token);",
								"            }",
								"        } else {",
								"            if (document.getElementById('cai-webchat')) document.getElementById('cai-webchat').style.visibility = 'hidden';",
								"        }",
								"",
								"        // IBM Watson Assistant",
								"        if (AppCache.config.watson_enabled && AppCache.config.watson_integrationid && AppCache.config.watson_region && AppCache.config.watson_instanceid && !sap.n.Launchpad.isPhone()) {",
								"            window.watsonAssistantChatOptions = {",
								"                integrationID: AppCache.config.watson_integrationid,",
								"                region: AppCache.config.watson_region,",
								"                serviceInstanceID: AppCache.config.watson_instanceid,",
								"                onLoad: function (instance) { instance.render(); }",
								"            };",
								"",
								"            setTimeout(function () {",
								"                const t = document.createElement('script');",
								"                t.src = 'https://web-chat.global.assistant.watson.appdomain.cloud/loadWatsonAssistantChat.js';",
								"                document.head.appendChild(t);",
								"            });",
								"        }",
								"",
								"    },",
								"",
								"    disableExternalTools: function () {",
								"        // SAP Conversational AI",
								"        if (AppCache.config.sapcai_enabled) {",
								"            if (document.getElementById('cai-webchat')) {",
								"                let caiChat = document.getElementsByClassName('CaiAppChat')[0];",
								"                let caiExpander = document.getElementsByClassName('CaiAppExpander')[0];",
								"",
								"                if (caiChat && caiExpander) {",
								"                    caiChat.classList.remove('open');",
								"                    caiChat.classList.add('close');",
								"                    caiExpander.classList.remove('close');",
								"                    caiExpander.classList.add('open');",
								"                }",
								"            }",
								"        }",
								"",
								"        // IBM Watson Assistant",
								"        if (AppCache.config.watson_enabled) {",
								"            if (document.getElementById('WACWidget')) {",
								"                let watsonChat = document.getElementById('WACWidget');",
								"                let watsonExpander = document.getElementsByClassName('WACLauncher__ButtonContainer')[0];",
								"                // let watsonSvg = document.getElementsByClassName('WACLauncher__svg')[0];",
								"",
								"                if (watsonChat && watsonExpander) {",
								"                    watsonChat.classList.add('WACWidget--closed');",
								"                    watsonExpander.classList.remove('WACLauncher__ButtonContainer--open');",
								"                    // watsonSvg.classList.remove('ACLauncher__svg--open');",
								"                }",
								"            }",
								"        }",
								"    },",
								"",
								"    Home: function () {",
								"        location.hash = 'Home';",
								"    },",
								"",
								"    _Home: function () {",
								"        // Clear HashNavigation",
								"        location.hash = '';",
								"",
								"        let eventId;",
								"        let preventDefault = false;",
								"",
								"        if (sap.n.Launchpad.currentTile && sap.n.Launchpad.currentTile.id) {",
								"            eventId = sap.n.Launchpad.currentTile.id;",
								"        } else {",
								"            eventId = AppCache.CurrentApp.toUpperCase();",
								"        }",
								"",
								"        if (sap.n.Apps[eventId] && sap.n.Apps[eventId].beforeHome) {",
								"            sap.n.Apps[eventId].beforeHome.forEach(function (data) {",
								"                let oEvent = new sap.ui.base.Event('beforeHome', new sap.ui.base.EventProvider());",
								"                data(oEvent);",
								"                if (oEvent.bPreventDefault) preventDefault = true;",
								"                oEvent = null;",
								"            });",
								"        }",
								"",
								"        // Default behaviour was avoided",
								"        if (preventDefault) return;",
								"",
								"        if (AppCache.StartApp) {",
								"            return;",
								"        }",
								"",
								"        sap.n.Launchpad.SelectHomeMenu();",
								"        sap.n.Launchpad.setHideHeader(false);",
								"        sap.n.currentView = '';",
								"",
								"        // Title",
								"        sap.n.Launchpad.SetHeader();",
								"        sap.n.Launchpad.handleAppTitle(AppCache.launchpadTitle);",
								"",
								"    },",
								"",
								"    Back: function () {",
								"        location.hash = 'Back';",
								"    },",
								"",
								"    _Back: function () {",
								"",
								"        // Clear HashNavigation",
								"        location.hash = '';",
								"",
								"        let eventId;",
								"        let preventDefault = false;",
								"",
								"        if (sap.n.Launchpad.currentTile && sap.n.Launchpad.currentTile.id) {",
								"            eventId = sap.n.Launchpad.currentTile.id;",
								"        } else {",
								"            eventId = AppCache.CurrentApp.toUpperCase();",
								"        }",
								"",
								"        if (sap.n.Apps[eventId] && sap.n.Apps[eventId].beforeBack) {",
								"            sap.n.Apps[eventId].beforeBack.forEach(function (data) {",
								"                let oEvent = new sap.ui.base.Event('beforeBack', new sap.ui.base.EventProvider());",
								"                data(oEvent);",
								"                if (oEvent.bPreventDefault) preventDefault = true;",
								"                oEvent = null;",
								"            });",
								"        }",
								"",
								"        // Default behaviour was avoided",
								"        if (preventDefault) return;",
								"",
								"        // Close Objects ",
								"        AppCacheShellHelp.setVisible(false);",
								"        AppCacheShellDebug.setVisible(false);",
								"        sap.n.Shell.closeSidepanel();",
								"",
								"        // Navigate ",
								"        if (AppCacheNav.getCurrentPage().sId.indexOf('page') > -1) {",
								"            AppCacheNav.back();",
								"        } else {",
								"",
								"            if (!sap.n.Launchpad.backApp) {",
								"                AppCache.Home();",
								"            } else if (sap.n.Launchpad.backApp && sap.n.currentView && sap.n.currentView.sViewName === sap.n.Launchpad.backApp.sViewName) {",
								"                AppCache.Home();",
								"            } else {",
								"                AppCacheNav.backToPage(sap.n.Launchpad.backApp);",
								"            }",
								"",
								"        }",
								"",
								"        //  Back Button - Only hide when top menu. ",
								"        let cat = AppCacheNav.getCurrentPage().sId;",
								"        cat = cat.split('page')[1];",
								"",
								"        let top = ModelData.FindFirst(AppCacheCategory, 'id', cat);",
								"",
								"        if (top) {",
								"            if (!sap.n.Launchpad.hideBackIcon) AppCacheShellBack.setVisible(false);",
								"            sap.n.Launchpad.setShellWidth();",
								"            sap.n.Launchpad.MarkTopMenu(top.id);",
								"            sap.n.Launchpad.handleAppTitle(AppCache.launchpadTitle);",
								"        } else {",
								"            if (!sap.n.Launchpad.hideBackIcon) AppCacheShellBack.setVisible(true);",
								"            let sub = ModelData.FindFirst(AppCacheCategoryChild, 'id', cat);",
								"            sap.n.Launchpad.setShellWidth();",
								"            sap.n.Launchpad.handleAppTitle(sub.title);",
								"        }",
								"",
								"        sap.n.Launchpad.backApp = AppCacheNav.getCurrentPage();",
								"        sap.n.Launchpad.setHideHeader(false);",
								"",
								"        // Clear currentTile",
								"        sap.n.Launchpad.currentTile = {};",
								"        sap.n.currentView = '';",
								"",
								"        // Title",
								"        sap.n.Launchpad.SetHeader();",
								"",
								"    },",
								"",
								"    setEnablePasscodeEntry: function () {",
								"        closeContentNavigator();",
								"        sap.n.Launchpad.setHideTopButtons(true);",
								"",
								"        // Handle userInfo ",
								"        if (modelAppCacheUsers.oData.length === 1) AppCache.userInfo = modelAppCacheUsers.oData[0];",
								"        AppCache.setUserInfo();",
								"",
								"        delete AppCache.userInfo.azureToken;",
								"        AppCache.translate(AppCache.userInfo.language);",
								"",
								"        AppCache_boxPasscodeEntry.setVisible(true);",
								"        AppCacheNav.to('AppCache_boxPasscodeEntry', 'show');",
								"        AppCache.handleUserMenu();",
								"",
								"        // biometricAuthentication supported ? ",
								"        appCacheLog('setEnablePasscodeEntry: Before biometric, enabled: ' + AppCache.biometricAuthentication);",
								"",
								"        if (!window.navigator.simulator && window.cordova !== undefined && AppCache.biometricAuthentication) {",
								"            const { os } = sap.ui.Device;",
								"            const fp = sap.n.Fingerprint;",
								"            if (os.ios && CID !== undefined) {",
								"                fp.ios.checkSupport();",
								"            } else if (os.android && window.FingerprintAuth) {",
								"                FingerprintAuth.isAvailable(fp.android.onSupported, fp.android.notSupported);",
								"            }",
								"        }",
								"",
								"        // Fetch Encrypted String",
								"        const { userInfo } = AppCache;",
								"",
								"        if (typeof cordova !== 'undefined') {",
								"            const c = cordova;",
								"            if (c !== undefined && c.plugins !== undefined && c.plugins.SecureKeyStore !== undefined) {",
								"                const sksKey = `${AppCache.AppID}-${userInfo.username}`;",
								"                c.plugins.SecureKeyStore.get(function (res) {",
								"                    AppCache.Encrypted = res;",
								"                    appCacheLog('setEnablePasscodeEntry: Got data from SecureKeyStorage');",
								"                }, function (err) {",
								"                    AppCache.Encrypted = userInfo.auth;",
								"                    appCacheLog(`setEnablePasscodeEntry: Error ${err}`);",
								"                }, sksKey);",
								"            }",
								"        } else {",
								"            AppCache.Encrypted = userInfo.auth;",
								"            appCacheLog('setEnablePasscodeEntry: Fallback solution');",
								"        }",
								"    },",
								"",
								"    setEnablePasscodeScreen: function () {",
								"        closeContentNavigator();",
								"        sap.n.Launchpad.setHideTopButtons(true);",
								"        AppCache_inPasscode1.setEnabled(true);",
								"        AppCache_inPasscode2.setEnabled(true);",
								"        AppCache_inPasscode1.setMaxLength(AppCache.passcodeLength);",
								"        AppCache_inPasscode2.setMaxLength(AppCache.passcodeLength);",
								"        AppCache.handleUserMenu();",
								"",
								"        // PWA - Webauthn",
								"        if (AppCache.enablePwa && AppCache.enablePasscode && AppCache.config.enableWebAuth && (window.PublicKeyCredential !== undefined || typeof window.PublicKeyCredential === 'function')) {",
								"",
								"            AppCache.userInfo.biometric = true;",
								"            if (modelAppCacheUsers.oData.length > 1) AppCache.userInfo.biometric = false;",
								"            if (modelAppCacheUsers.oData.length === 1 && modelAppCacheUsers.oData[0].username !== AppCache.userInfo.username) AppCache.userInfo.biometric = false;",
								"",
								"            if (AppCache.userInfo.biometric) {",
								"",
								"                sap.n.Webauthn.register(AppCache.userInfo).then(function (userid) {",
								"                    if (userid === 'ERROR') {",
								"                        AppCacheNav.to('AppCache_boxPasscode', 'show');",
								"                    } else {",
								"                        // Store Authentication",
								"                        const key = generatePBKDF2Key(userid, AppCache.deviceID)",
								"                        const encrypted = encryptAES(AppCache.Auth, key.toString());",
								"                        AppCache.Encrypted = encrypted.toString();",
								"                        AppCache.userInfo.auth = encrypted.toString();",
								"",
								"                        // Logon Type ",
								"                        if (AppCache.samlData) {",
								"                            AppCache.userInfo.logonData = AppCache.samlData;",
								"                            AppCache.userInfo.logonData.type = 'saml';",
								"                        } else {",
								"                            AppCache.userInfo.logonData = AppCache.getLogonTypeInfo(AppCache_loginTypes.getSelectedKey());",
								"                        }",
								"",
								"                        modelAppCacheUsers.oData[0].webauthid = userid;",
								"                        setCacheAppCacheUsers();",
								"                        AppCache.Update();",
								"                    }",
								"                })",
								"",
								"            } else {",
								"                AppCacheNav.to('AppCache_boxPasscode', 'show');",
								"            }",
								"",
								"        } else {",
								"            AppCacheNav.to('AppCache_boxPasscode', 'show');",
								"        }",
								"    },",
								"",
								"    setEnablePasswordScreen: function () {",
								"        closeContentNavigator();",
								"        sap.n.Launchpad.setHideTopButtons(true);",
								"        AppCacheNav.to('AppCache_boxPassword', 'show');",
								"        AppCache.handleUserMenu();",
								"    },",
								"",
								"    setEnableUsersScreen: function () {",
								"        closeContentNavigator();",
								"        sap.n.Launchpad.setHideTopButtons(true);",
								"        AppCacheShellUser.setIcon('sap-icon://fa-solid/user-circle');",
								"        AppCacheNav.to('AppCache_boxUsers', 'show');",
								"        AppCache.handleUserMenu();",
								"        AppCache.calculateUserScreen();",
								"    },",
								"",
								"    calculateUserScreen: function () {",
								"",
								"        if (modelAppCacheUsers.oData.length > 1) {",
								"            toolUsersSort.setVisible(true);",
								"            toolUsersFilter.setVisible(true);",
								"            setTimeout(function () {",
								"                toolUsersFilter.focus();",
								"            }, 250);",
								"        } else {",
								"            toolUsersSort.setVisible(false);",
								"            toolUsersFilter.setVisible(false);",
								"        }",
								"",
								"        // Calculate Heights ",
								"        if (sap.n.Launchpad.isPhone()) {",
								"",
								"            if (modelAppCacheUsers.oData.length <= 1) {",
								"                AppCacheUserScroll.setHeight('100px');",
								"                return;",
								"            }",
								"",
								"            if (modelAppCacheUsers.oData.length <= 2) {",
								"                AppCacheUserScroll.setHeight('200px');",
								"                return;",
								"            }",
								"",
								"            if (modelAppCacheUsers.oData.length <= 3) {",
								"                AppCacheUserScroll.setHeight('300px');",
								"                return;",
								"            }",
								"",
								"            if (modelAppCacheUsers.oData.length > 4) {",
								"                AppCacheUserScroll.setHeight('400px');",
								"                return;",
								"            }",
								"",
								"        }",
								"",
								"        // Desktop",
								"        if (modelAppCacheUsers.oData.length <= 1) {",
								"            AppCache_boxLogonUsers.setHeight('75%');",
								"            AppCacheUserScroll.setHeight('100px');",
								"            return;",
								"        }",
								"",
								"        if (modelAppCacheUsers.oData.length <= 2) {",
								"            AppCache_boxLogonUsers.setHeight('75%');",
								"            AppCacheUserScroll.setHeight('200px');",
								"            return;",
								"        }",
								"",
								"        if (modelAppCacheUsers.oData.length <= 3) {",
								"            AppCache_boxLogonUsers.setHeight('75%');",
								"            AppCacheUserScroll.setHeight('300px');",
								"            return;",
								"        }",
								"",
								"        if (modelAppCacheUsers.oData.length <= 4) {",
								"            AppCache_boxLogonUsers.setHeight('75%');",
								"            AppCacheUserScroll.setHeight('400px');",
								"            return;",
								"        }",
								"",
								"        if (modelAppCacheUsers.oData.length <= 5) {",
								"            AppCache_boxLogonUsers.setHeight('100%');",
								"            AppCacheUserScroll.setHeight('500px');",
								"            return;",
								"        }",
								"",
								"        if (modelAppCacheUsers.oData.length > 5) {",
								"            AppCache_boxLogonUsers.setHeight('100%');",
								"            AppCacheUserScroll.setHeight('600px');",
								"        }",
								"    },",
								"",
								"    setEnableLogonScreen: function () {",
								"        AppCache.samlData = false;",
								"",
								"        closeContentNavigator();",
								"        sap.n.Launchpad.setHideTopButtons(true);",
								"",
								"        // Login App ",
								"        if (AppCache.loginApp !== '' && AppCache.loginApp !== 'null') {",
								"            if (AppCache_boxLogonCustom.getContent().length === 0) {",
								"                AppCache.loginApp();",
								"                AppCache.setSettings(true);",
								"            }",
								"            AppCacheNav.to('AppCache_boxLogonCustom', 'show');",
								"            AppCacheShellUI.setAppWidthLimited(false);",
								"        } else {",
								"            AppCacheNav.to('AppCache_boxLogon', 'show');",
								"        }",
								"",
								"        AppCache.handleUserMenu();",
								"",
								"        // Biometric ",
								"        if (AppCache.biometricAuthentication && !AppCache.enablePasscode) sap.n.Fingerprint.getBasicAuth();",
								"",
								"        AppCacheNav.rerender();",
								"",
								"    },",
								"",
								"",
								"    handleUserMenu: function () {",
								"        [",
								"            AppCacheUserActionSettings, AppCacheUserActionSwitch, AppCacheUserActionLock,",
								"            AppCacheUserActionPassword, AppCacheUserActionLogin, AppCacheUserActionLogoff",
								"        ].forEach(function (ua) {",
								"            ua.setVisible(false);",
								"        });",
								"",
								"        AppCacheShellUser.setEnabled(true);",
								"        NumPad.KeypressHandlerRemove();",
								"",
								"        const pageId = AppCacheNav.getCurrentPage().sId;",
								"",
								"        function setAppWidth() {",
								"            if ([",
								"                'AppCache_boxLogon', 'AppCache_boxPassword', 'AppCache_boxPasscode',",
								"                'AppCache_boxPasscodeEntry', 'AppCache_boxUsers', 'AppCache_boxCaptcha'",
								"            ].includes(pageId)) {",
								"                AppCacheShellUI.setAppWidthLimited(true);",
								"            }",
								"        }",
								"",
								"        function setShellTitle() {",
								"            const titles = {",
								"                'AppCache_boxLogon': AppCache_Screen_Login.getText(),",
								"                'AppCache_boxPasscode': AppCache_Screen_PIN.getText(),",
								"                'AppCache_boxPasscodeEntry': AppCache_Screen_PINEntry.getText(),",
								"                'AppCache_boxUsers': AppCache_Screen_Users.getText(),",
								"            };",
								"            if (sap.n.Launchpad.isPhone() && titles[pageId] !== undefined) {",
								"                AppCacheShellTitle.setText(titles[pageId]);",
								"            }",
								"        }",
								"",
								"        function setSwitchUserOption() {",
								"            if (['AppCache_boxPassword', 'AppCache_boxCaptcha', 'AppCache_boxPasscodeEntry'].includes(pageId)) {",
								"                AppCacheUserActionSwitch.setVisible(true);",
								"            }",
								"        }",
								"",
								"        function setShellUserIcon() {",
								"            if (['AppCache_boxPasscode', 'AppCache_boxUsers'].includes(pageId)) {",
								"                AppCacheShellUser.setEnabled(false);",
								"            }",
								"        }",
								"",
								"        function handleNumPadKeyEvents() {",
								"            if (pageId === 'AppCache_boxPasscodeEntry') {",
								"                NumPad.KeypressHandlerSet();",
								"            }",
								"        }",
								"",
								"        setAppWidth();",
								"        setShellTitle();",
								"        setSwitchUserOption();",
								"        setShellUserIcon()",
								"",
								"        if (['AppCache_boxLogon', 'AppCache_boxLogonCustom'].includes(pageId)) {",
								"            if (AppCache.enablePasscode && modelAppCacheUsers.oData.length > 0) {",
								"                AppCacheUserActionSwitch.setVisible(true);",
								"            } else {",
								"                AppCacheShellUser.setEnabled(false);",
								"            }",
								"        }",
								"",
								"        handleNumPadKeyEvents();",
								"    },",
								"",
								"    getSettings: function () {",
								"",
								"        appCacheLog('Getting settings from P9 server');",
								"",
								"        let url = AppCache.Url + '/user/logon/types?launchpad=' + AppCache.launchpadID;",
								"        if (AppCache.mobileClient) url += '&mobileclient=' + AppCache.mobileClient;",
								"",
								"        request({",
								"            type: 'GET',",
								"            url: url,",
								"            success: function (data) {",
								"                appCacheLog('Successfully received settings from P9 server');",
								"",
								"                // Save Data ",
								"                AppCache.currentSettings = modelDataSettings.oData;",
								"                modelDataSettings.setData(data);",
								"                setCacheDataSettings();",
								"",
								"                // Handle Startup Actions ",
								"                AppCache.setSettings(true);",
								"            },",
								"            error: function (result, status) {",
								"                appCacheError('Error receiving settings from P9 server, using cached data');",
								"            }",
								"        });",
								"",
								"    },",
								"",
								"    setSettings: function (skipStartup) {",
								"",
								"        if (!modelDataSettings.oData.settings) {",
								"            if (!skipStartup) AppCache.Startup();",
								"            return;",
								"        }",
								"",
								"        let data = modelDataSettings.oData;",
								"        let forceRestart = false;",
								"",
								"        // Enhancement",
								"        if (sap.n.Enhancement.BeforeSetSettingsMobile) {",
								"            try {",
								"                sap.n.Enhancement.BeforeSetSettingsMobile(data);",
								"            } catch (e) {",
								"                appCacheError('Enhancement BeforeSetSettingsMobile ' + e);",
								"            }",
								"        }",
								"",
								"        // Get System Name/Description ",
								"        if (data.settings.name) txtFormLoginSubTitle1.setText(data.settings.name);",
								"        if (data.settings.description) txtFormLoginSubTitle2.setText(data.settings.description);",
								"",
								"        // Parse Logon Types",
								"        let idps = [];",
								"",
								"        data.logonTypes.sort(sort_by('description', false));",
								"",
								"        AppCache_loginTypes.removeAllItems();",
								"",
								"        if (!data.settingsLaunchpad.config.hideLoginLocal || !data.logonTypes.length) {",
								"            AppCache_loginTypes.addItem(new sap.ui.core.Item({",
								"                key: 'local',",
								"                text: 'Local'",
								"            }));",
								"        }",
								"",
								"        for (let i = 0, length = data.logonTypes.length; i < length; i++) {",
								"            if (data.logonTypes[i].show) {",
								"",
								"                if (data.logonTypes[i].type === 'saml') continue;",
								"                if (data.logonTypes[i].type === 'oauth2') continue;",
								"",
								"                AppCache_loginTypes.addItem(new sap.ui.core.Item({",
								"                    key: data.logonTypes[i].id,",
								"                    text: data.logonTypes[i].description",
								"                }));",
								"",
								"                if (!AppCache.config.hideLoginSelection) AppCache_loginTypes.setVisible(true);",
								"            }",
								"        }",
								"",
								"        if (AppCache.config && AppCache.config.hideLoginSelection) AppCache_loginTypes.setVisible(false);",
								"        if (AppCache.defaultLoginIDP) AppCache_loginTypes.setSelectedKey(AppCache.defaultLoginIDP);",
								"",
								"        // Texts ",
								"        if (data.customizing.length) {",
								"",
								"            if (data.customizing[0].txtLogin1Enable || data.customizing[0].txtLogin2Enable || data.customizing[0].txtLogin3Enable) {",
								"                panLinksPin.setVisible(true);",
								"                panLinksUsers.setVisible(true);",
								"                panLinksPass.setVisible(true);",
								"                panLinks.setVisible(true);",
								"            }",
								"",
								"            if (data.customizing[0].txtLogin1Enable) {",
								"                linkText1.setText(data.customizing[0].txtLogin1Label);",
								"                linkText1.setVisible(true);",
								"                linkPassText1.setText(data.customizing[0].txtLogin1Label);",
								"                linkPassText1.setVisible(true);",
								"                linkPinText1.setText(data.customizing[0].txtLogin1Label);",
								"                linkPinText1.setVisible(true);",
								"                linkUsersText1.setText(data.customizing[0].txtLogin1Label);",
								"                linkUsersText1.setVisible(true);",
								"            }",
								"",
								"            if (data.customizing[0].txtLogin2Enable) {",
								"                linkText2.setText(data.customizing[0].txtLogin2Label);",
								"                linkText2.setVisible(true);",
								"                linkSep1.setVisible(true);",
								"                linkPassText2.setText(data.customizing[0].txtLogin2Label);",
								"                linkPassText2.setVisible(true);",
								"                linkPassSep1.setVisible(true);",
								"                linkPinText2.setText(data.customizing[0].txtLogin2Label);",
								"                linkPinText2.setVisible(true);",
								"                linkPinSep1.setVisible(true);",
								"                linkUsersText2.setText(data.customizing[0].txtLogin2Label);",
								"                linkUsersText2.setVisible(true);",
								"                linkUsersSep1.setVisible(true);",
								"            }",
								"",
								"            if (data.customizing[0].txtLogin3Enable) {",
								"                linkText3.setText(data.customizing[0].txtLogin3Label);",
								"                linkText3.setVisible(true);",
								"                linkSep2.setVisible(true);",
								"                linkPassText3.setText(data.customizing[0].txtLogin3Label);",
								"                linkPassText3.setVisible(true);",
								"                linkPassSep2.setVisible(true);",
								"                linkPinText3.setText(data.customizing[0].txtLogin3Label);",
								"                linkPinText3.setVisible(true);",
								"                linkPinSep2.setVisible(true);",
								"                linkUsersText3.setText(data.customizing[0].txtLogin3Label);",
								"                linkUsersText3.setVisible(true);",
								"                linkUsersSep2.setVisible(true);",
								"            }",
								"",
								"        }",
								"",
								"        // AppCache - Launchpad",
								"        if (data.settingsLaunchpad) {",
								"",
								"            if (typeof data.settingsLaunchpad.enableNotifications !== 'undefined' && data.settingsLaunchpad.enableNotifications) AppCache.enablePush = data.settingsLaunchpad.enableNotifications;",
								"            if (typeof data.settingsLaunchpad.limitWidth !== 'undefined' && data.settingsLaunchpad.limitWidth) AppCache.limitWidth = data.settingsLaunchpad.limitWidth;",
								"            if (typeof data.settingsLaunchpad.startApp !== 'undefined') AppCache.StartApp = data.settingsLaunchpad.startApp;",
								"",
								"            // Config",
								"            if (data.settingsLaunchpad.config) {",
								"                if (data.settingsLaunchpad.config.hideLoginSelection) AppCache_loginTypes.setVisible(false);",
								"                if (data.settingsLaunchpad.config.hideTopHeader) AppCache.hideTopHeader = true;",
								"                if (data.settingsLaunchpad.config.languages) sap.n.Launchpad.applyLanguages(data.settingsLaunchpad.config.languages);",
								"                if (data.settingsLaunchpad.config.loginTitle) txtFormLoginSubTitle1.setText(data.settingsLaunchpad.config.loginTitle);",
								"                if (data.settingsLaunchpad.config.loginSubTitle) txtFormLoginSubTitle2.setText(data.settingsLaunchpad.config.loginSubTitle);",
								"",
								"                // Enhancement",
								"                if (data.settingsLaunchpad.config.enhancement) {",
								"                    try {",
								"                        eval(data.settingsLaunchpad.config.enhancement);",
								"                    } catch (e) {",
								"                        console.log(e);",
								"                    }",
								"                }",
								"",
								"            }",
								"",
								"            if (data.settingsLaunchpad.layout) {",
								"                AppCache.layout = data.settingsLaunchpad.layout;",
								"                sap.n.Launchpad.applyLayout(AppCache.layout[0]);",
								"            }",
								"",
								"        }",
								"",
								"        // AppCache - Mobile ",
								"        if (data.settingsMobile) {",
								"",
								"            // Changes no restart ",
								"            if (typeof data.settingsMobile.pincodeTries !== 'undefined') AppCache.numPasscode = data.settingsMobile.pincodeTries;",
								"            if (typeof data.settingsMobile.autolock !== 'undefined') AppCache.timerLock = data.settingsMobile.autolock;",
								"",
								"            if (typeof data.settingsMobile.resetPasswordUrl !== 'undefined' && data.settingsMobile.resetPasswordUrl) {",
								"                AppCache.passUrlReset = data.settingsMobile.resetPasswordUrl;",
								"                AppCache_resetPassword.setVisible(true);",
								"            } else {",
								"                AppCache_resetPassword.setVisible(false);",
								"            }",
								"",
								"            // Changes requires restart",
								"            if (typeof data.settingsMobile.pincode !== 'undefined') {",
								"                AppCache.enablePasscode = data.settingsMobile.pincode;",
								"                if (skipStartup && AppCache.currentSettings && AppCache.currentSettings.settingsMobile && AppCache.currentSettings.settingsMobile.pincode !== data.settingsMobile.pincode) forceRestart = true;",
								"            }",
								"",
								"            if (typeof data.settingsMobile.fingerprint !== 'undefined') {",
								"                AppCache.biometricAuthentication = data.settingsMobile.fingerprint;",
								"                if (skipStartup && AppCache.currentSettings && AppCache.currentSettings.settingsMobile && AppCache.currentSettings.settingsMobile.fingerprint !== data.settingsMobile.fingerprint) forceRestart = true;",
								"            }",
								"",
								"            // PIN Code",
								"            if (typeof data.settingsMobile.pincodeLength !== 'undefined' && AppCache.passcodeLength !== data.settingsMobile.pincodeLength) {",
								"                AppCache.passcodeLength = data.settingsMobile.pincodeLength;",
								"                modelAppCacheUsers.setData([]);",
								"                if (skipStartup && AppCache.currentSettings && AppCache.currentSettings.settingsMobile) forceRestart = true;",
								"            }",
								"",
								"            // Auto Update ",
								"            if (data.settingsMobile.enableAutoUpdate) {",
								"                AppCache.enableAutoUpdate = data.settingsMobile.enableAutoUpdate;",
								"            } else {",
								"                AppCache.enableAutoUpdate = false;",
								"            }",
								"",
								"            // MobileActive Version",
								"            if (data.settingsMobile.activeVersion) {",
								"                AppCache.AppVersionActive = data.settingsMobile.activeVersion;",
								"                if (data.settingsMobile.builds && data.settingsMobile.builds.length) AppCache.AppVersionActiveID = data.settingsMobile.builds[0].id;",
								"            }",
								"",
								"        }",
								"",
								"        // Custom Login App - Mobile Client",
								"        if (AppCache.loginApp && AppCache_boxLogonCustom.getContent().length) {",
								"            if (AppCache.loginAppSetSettings) AppCache.loginAppSetSettings(modelDataSettings.oData);",
								"        }",
								"",
								"        // Set Logon Screen",
								"        sap.n.Utils.setLogonScreen();",
								"",
								"        // Startup",
								"        if (!skipStartup) {",
								"            AppCache.Startup();",
								"        } else {",
								"            if (forceRestart) {",
								"                sap.m.MessageToast.show(AppCache_tRestartForced.getText());",
								"                AppCache.Startup();",
								"            }",
								"        }",
								"",
								"        // Clear ",
								"        AppCache.currentSettings = null;",
								"    },",
								"",
								"    Startup: function () {",
								"        // Check if CurrentConfig",
								"        if (!AppCache.CurrentConfig) {",
								"            sap.m.MessageToast.show(AppCache_tNoCurrentConfig.getText());",
								"            return;",
								"        }",
								"",
								"        // Enhancement",
								"        if (sap.n.Enhancement.global) {",
								"            try {",
								"                sap.n.Enhancement.global();",
								"            } catch (e) {",
								"                console.error('Enhancement global ' + e);",
								"            }",
								"        }",
								"",
								"        if (sap.n.Enhancement.BeforeStartup) {",
								"            try {",
								"                sap.n.Enhancement.BeforeStartup();",
								"            } catch (e) {",
								"                console.error('Enhancement BeforeStartup ' + e);",
								"            }",
								"        }",
								"",
								"        // Device ID",
								"        AppCache.deviceID = localStorage.getItem('AppCacheID');",
								"",
								"        if (!AppCache.deviceID) {",
								"            AppCache.deviceID = ModelData.genID();",
								"            localStorage.setItem('AppCacheID', AppCache.deviceID);",
								"        }",
								"",
								"        // Reset Password Link",
								"        if (AppCache.passUrlReset && AppCache.passUrlReset !== 'null') AppCache_resetPassword.setVisible(true);",
								"",
								"        // Get Cache",
								"        appCacheLog('AppCache.Startup: Loading Apps');",
								"        getCacheAppCacheData();",
								"",
								"        // Mobile or Desktop ",
								"        if (AppCache.isMobile) {",
								"",
								"            if (AppCache.enablePwa) {",
								"                AppCache.Url = location.origin;",
								"            }",
								"",
								"            appCacheLog('AppCache.Startup: Mobile Client');",
								"",
								"            AppCache.translate(navigator.language.slice(0, 2).toUpperCase());",
								"",
								"            // Status Bar - Fullscreen",
								"            if (typeof StatusBar !== 'undefined') {",
								"                if (AppCache.isFullscreen) StatusBar.hide();",
								"                StatusBar.overlaysWebView(false);",
								"            }",
								"",
								"            // Set URL for resources from Server ",
								"            imgWindows.setSrc(AppCache.Url + imgWindows.getSrc());",
								"            imgAndroid.setSrc(AppCache.Url + imgAndroid.getSrc());",
								"            imgIos.setSrc(AppCache.Url + imgIos.getSrc());",
								"",
								"            if (AppCache.isPublic) {",
								"                AppCacheShellUser.destroy();",
								"                AppCache.Update();",
								"",
								"                setTimeout(function () {",
								"                    if (typeof navigator.splashscreen !== 'undefined') navigator.splashscreen.hide();",
								"                }, 300);",
								"",
								"            } else {",
								"",
								"                appCacheLog('AppCache.Startup: Clear cookies');",
								"                AppCache.clearCookies();",
								"",
								"                appCacheLog('AppCache.Startup: Fetching users from database');",
								"                cacheLoaded = 0;",
								"                getCacheAppCacheUsers(true);",
								"",
								"                (function () {",
								"                    function waitForCache() {",
								"                        if (cacheLoaded >= 1) {",
								"",
								"                            appCacheLog('AppCache.Startup: Got users from database');",
								"",
								"                            // If localStorage fails to decrypt",
								"                            if (!modelAppCacheUsers || !modelAppCacheUsers.oData) modelAppCacheUsers.oData = [];",
								"",
								"                            // Remove Users from Desktop, if used in browser",
								"                            for (i = 0; i < modelAppCacheUsers.oData.length; i++) {",
								"                                let data = modelAppCacheUsers.oData[i];",
								"                                if (!data.logonData || !data.logonData.type) data.delete = true;",
								"                            }",
								"",
								"                            ModelData.Delete(AppCacheUsers, 'delete', true);",
								"",
								"                            appCacheLog(modelAppCacheUsers.oData);",
								"",
								"                            // Passcode or Logon",
								"                            if (AppCache.enablePasscode) {",
								"",
								"                                // Set Visible Markers",
								"                                switch (AppCache.passcodeLength) {",
								"",
								"                                    case 6:",
								"                                        Passcode5.setVisible(true);",
								"                                        Passcode6.setVisible(true);",
								"                                        break;",
								"",
								"                                    case 8:",
								"                                        Passcode5.setVisible(true);",
								"                                        Passcode6.setVisible(true);",
								"                                        Passcode7.setVisible(true);",
								"                                        Passcode8.setVisible(true);",
								"                                        break;",
								"",
								"                                    default:",
								"                                        break;",
								"",
								"                                }",
								"",
								"                                if (!modelAppCacheUsers.oData.length) {",
								"                                    AppCache.setEnableLogonScreen();",
								"                                } else {",
								"                                    AppCache.setEnableUsersScreen();",
								"                                }",
								"",
								"                            } else {",
								"",
								"                                // Check for AutoLogin",
								"                                AppCacheLogonLocal.AutoLoginGet().then(function (auth) {",
								"",
								"                                    appCacheLog('AppCache.Startup: Autologin starting');",
								"",
								"                                    if (auth) {",
								"                                        let action = [];",
								"                                        AppCache.enableAutoLogin = true;",
								"                                        AppCacheLogonLocal.Init();",
								"                                        action.push(AppCacheLogonLocal.Relog(auth));",
								"                                        Promise.all(action).then(function (values) {",
								"                                            if (values[0] === 'OK') {",
								"                                                AppCache.getUserInfo(auth);",
								"                                                appCacheLog('AppCache.Startup: Autologin found user in database');",
								"                                            } else {",
								"                                                sap.m.MessageToast.show(AppCache_tWrongUserNamePass.getText());",
								"                                                AppCache.Logout();",
								"                                            }",
								"                                        });",
								"                                    } else {",
								"                                        AppCache.setEnableLogonScreen();",
								"                                        appCacheLog('AppCache.Startup: Autologin no user found in database');",
								"                                    }",
								"",
								"                                });",
								"",
								"                            }",
								"",
								"                            setTimeout(function () {",
								"                                if (typeof navigator.splashscreen !== 'undefined') navigator.splashscreen.hide();",
								"                            }, 300);",
								"",
								"                        } else {",
								"                            setTimeout(waitForCache, 50);",
								"                        }",
								"                    }",
								"                    waitForCache();",
								"                })()",
								"",
								"            }",
								"",
								"        } else {",
								"",
								"            appCacheLog('AppCache.Startup: Desktop Client');",
								"",
								"            AppCacheUserActionSettings.setVisible(true);",
								"            AppCache.isRestricted = false;",
								"",
								"            // Build URL",
								"            AppCache.Url = location.origin;",
								"",
								"            // Get User Data",
								"            if (AppCache.isPublic) {",
								"                AppCacheShellUser.destroy();",
								"                AppCache.Update();",
								"            } else {",
								"                AppCache.getUserInfo();",
								"            }",
								"",
								"        }",
								"",
								"        // App Title",
								"        sap.n.Launchpad.handleAppTitle(AppCache.launchpadTitle);",
								"",
								"        // Custom Logo",
								"        if (AppCache.CustomLogo && AppCache.CustomLogo !== 'null') {",
								"",
								"            if (isCordova() || location.protocol === 'file:') {",
								"                AppCacheShellLogoDesktop.setSrc('public/customlogo');",
								"                AppCacheShellLogoMobile.setSrc('public/customlogo');",
								"            } else {",
								"                AppCacheShellLogoDesktop.setSrc(AppCache.CustomLogo);",
								"                AppCacheShellLogoMobile.setSrc(AppCache.CustomLogo);",
								"            }",
								"",
								"        } else {",
								"",
								"            if (isCordova() || location.protocol === 'file:') {",
								"                AppCacheShellLogoDesktop.setSrc('public/images/nsball.png');",
								"                AppCacheShellLogoMobile.setSrc('public/images/nsball.png');",
								"            } else {",
								"                AppCacheShellLogoDesktop.setSrc('/public/images/nsball.png');",
								"                AppCacheShellLogoMobile.setSrc('/public/images/nsball.png');",
								"            }",
								"",
								"        }",
								"",
								"",
								"        // Check for OffLine ",
								"        if (!navigator.onLine) onOffline();",
								"",
								"        topShell.setVisible(true);",
								"",
								"        // PWA Install",
								"        setTimeout(function () {",
								"            if (_pwaInstall) {",
								"                pageShell.setShowSubHeader(true);",
								"                actionPWA.setVisible(true);",
								"            }",
								"        }, 500);",
								"",
								"    },",
								"",
								"    _getLoginQuery() {",
								"        if (AppCache.mobileClient && AppCache.isMobile) {",
								"            return '?mobileClientID=' + AppCache.mobileClient;",
								"        }",
								"        return '';",
								"    }",
								"};",
								"",
								"window.AppCache = AppCache;"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "8d26476f-0e36-47c8-b875-847c9b52c75b",
							"fieldName": "coreLanguageHandler",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"AppCache.coreLanguageHandler = {\r",
								"    excludedLibraries: ['sap.n', 'sap.ui.unified.internal', 'nep.bootstrap'],\r",
								"    cldrBundle: {},\r",
								"\r",
								"    updateResourceBundlesNewLang: function (bundleLanguage) {\r",
								"        let loadedLibraries = sap.ui.getCore().getLoadedLibraries();\r",
								"        Object.entries(loadedLibraries).forEach(function ([_, library]) {\r",
								"            if (this.excludedLibraries.includes(library.name)) return true;\r",
								"\r",
								"            let currrentResourceBundle = sap.ui.getCore().getLibraryResourceBundle(library.name);\r",
								"            if (currrentResourceBundle && currrentResourceBundle.sLocale !== bundleLanguage) {\r",
								"                this.getResourceBundle(library.name, bundleLanguage)\r",
								"                    .then(function (newResourceBundle) {\r",
								"                        if (newResourceBundle && newResourceBundle.aPropertyFiles.length) {\r",
								"                            currrentResourceBundle.aPropertyFiles = newResourceBundle.aPropertyFiles;\r",
								"                        }\r",
								"                    });\r",
								"            }\r",
								"        }.bind(this));\r",
								"    },\r",
								"\r",
								"    getResourceBundle: function (ui5Lib, bundleLanguage) {\r",
								"        return new Promise(function (resolve, reject) {\r",
								"            sap.ui.require(['sap/base/i18n/ResourceBundle'], function (ResourceBundle) {\r",
								"                let ui5Version = this.getUI5version();\r",
								"                let ui5LibConv = ui5Lib.replace(/[.]/g, '/');\r",
								"                let urlPath = '/';\r",
								"\r",
								"                if (isCordova() || location.protocol === 'file:') urlPath = '';\r",
								"\r",
								"                urlPath += `public/openui5/${ui5Version}/${ui5LibConv}/messagebundle.properties`\r",
								"\r",
								"                ResourceBundle.create({\r",
								"                    url: urlPath,\r",
								"                    async: true,\r",
								"                    locale: bundleLanguage\r",
								"\r",
								"                }).then(function (resourceBundle) {\r",
								"                    resolve(resourceBundle);\r",
								"                });\r",
								"\r",
								"            }.bind(this));\r",
								"        }.bind(this));\r",
								"    },\r",
								"\r",
								"    getUI5version: function () {\r",
								"        let sMajor = sap.ui.getCore().getConfiguration().getVersion().getMajor();\r",
								"        let sMinor = sap.ui.getCore().getConfiguration().getVersion().getMinor();\r",
								"        return `${sMajor}.${sMinor}`;\r",
								"    },\r",
								"\r",
								"    setNewCLDRbundle: function (bundleLang) {\r",
								"        const l = bundleLang.toLocaleLowerCase();\r",
								"        sapLoadLanguage(l === 'no' ? 'nb' : l).then(function (bundle) {\r",
								"            this.cldrBundle = bundle;\r",
								"            sap.ui.core.LocaleData.prototype._get = function () {\r",
								"                return this._getDeep(AppCache.coreLanguageHandler.cldrBundle, arguments);\r",
								"            };\r",
								"        }.bind(this));\r",
								"    }\r",
								"};"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "731248db-c2b6-4e42-9442-3a2cd916c19c",
							"fieldName": "AppCacheLogonOIDC",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"let AppCacheLogonOIDC = {\r",
								"    state: null,\r",
								"    options: {},\r",
								"    loginScopes: ['email', 'profile', 'openid', 'offline_access'],\r",
								"\r",
								"    Logon: function () {\r",
								"        this.options = this._getLogonData();\r",
								"\r",
								"        if (!isCordova()) {\r",
								"            if (location.protocol === 'file:') {\r",
								"                sap.m.MessageToast.show('Testing OIDC from file is not allowed due to CSRF issues. Please test in mobile app');\r",
								"                return;\r",
								"            }\r",
								"\r",
								"            AppCacheLogonOIDC._showLogonPopupAndWaitForCallbackUrl(AppCache.Url + '/user/logon/openid-connect/' + AppCacheLogonOIDC.options.path)\r",
								"                .then(function (callbackUrl) {\r",
								"                    if (callbackUrl) {\r",
								"                        setSelectedLoginType('openid-connect');\r",
								"                        const authResponse = AppCacheLogonOIDC._getHashParamsFromUrl(callbackUrl);\r",
								"\r",
								"                        appCacheLog('OIDC: Got code');\r",
								"                        appCacheLog(authResponse);\r",
								"\r",
								"                        return AppCacheLogonOIDC.P9LoginWithCode(authResponse);\r",
								"                    }\r",
								"                });\r",
								"        } else {\r",
								"            let logonWin = AppCacheLogonOIDC._showLogonPopup(AppCache.Url + '/user/logon/openid-connect/' + AppCacheLogonOIDC.options.path);\r",
								"\r",
								"            // Mobile InAppBrowser\r",
								"            logonWin.addEventListener('loadstop', function () {\r",
								"\r",
								"                logonWin.executeScript({ code: 'location.search' }, function (url) {\r",
								"\r",
								"                    let authResponse = AppCacheLogonOIDC._getHashParamsFromUrl(url[0]);\r",
								"\r",
								"                    // Get response\r",
								"                    if (authResponse) {\r",
								"\r",
								"                        // Logging \r",
								"                        appCacheLog('LoadStop: Got search response');\r",
								"                        appCacheLog(authResponse);\r",
								"\r",
								"                        // Error \r",
								"                        if (authResponse.error) {\r",
								"                            logonWin.close();\r",
								"                            sap.m.MessageToast.show(authResponse.error);\r",
								"                            sap.ui.core.BusyIndicator.hide();\r",
								"                            return;\r",
								"                        }\r",
								"\r",
								"                        if (authResponse.code) {\r",
								"                            logonWin.close();\r",
								"                            AppCacheLogonOIDC.P9LoginWithCode(authResponse);\r",
								"\r",
								"                        }\r",
								"\r",
								"                    }\r",
								"                });\r",
								"\r",
								"            });\r",
								"\r",
								"        }\r",
								"\r",
								"    },\r",
								"\r",
								"    Logoff: function () {\r",
								"\r",
								"        this.options = this._getLogonData();\r",
								"\r",
								"        if (navigator.onLine && AppCache.isOffline === false) {\r",
								"\r",
								"            AppCacheLogonOIDC.Signout();\r",
								"\r",
								"            jsonRequest({\r",
								"                url: AppCache.Url + '/user/logout',\r",
								"                success: function (data) {\r",
								"                    AppCache.clearCookies();\r",
								"                    appCacheLog('OIDC: Successfully logged out');\r",
								"                },\r",
								"                error: function (result, status) {\r",
								"                    sap.ui.core.BusyIndicator.hide();\r",
								"                    AppCache.clearCookies();\r",
								"                    appCacheLog('OIDC: Successfully logged out, in offline mode');\r",
								"                }\r",
								"            });\r",
								"        } else {\r",
								"            AppCache.clearCookies();\r",
								"        }\r",
								"\r",
								"    },\r",
								"\r",
								"    Relog: function (refreshToken) {\r",
								"        this.options = this._getLogonData();\r",
								"        AppCacheLogonOIDC.GetTokenWithRefreshToken(refreshToken, 'pin');\r",
								"    },\r",
								"\r",
								"    Init: function () {\r",
								"        this.options = this._getLogonData();\r",
								"    },\r",
								"\r",
								"    Signout: function () {\r",
								"\r",
								"        this.options = this._getLogonData();\r",
								"\r",
								"        let signOut = window.open(AppCache.Url + '/user/logon/openid-connect/' + AppCacheLogonOIDC.options.path + '/logout', '_blank', 'location=no,width=5,height=5,left=-1000,top=3000');\r",
								"\r",
								"        if (isCordova()) {\r",
								"\r",
								"            signOut.hide();\r",
								"\r",
								"            signOut.addEventListener('loadstop', function () {\r",
								"                signOut.close();\r",
								"            })\r",
								"\r",
								"        } else {\r",
								"\r",
								"            signOut.onload = function () {\r",
								"                signOut.close();\r",
								"            };\r",
								"\r",
								"            signOut.blur();\r",
								"\r",
								"            setTimeout(function () {\r",
								"                signOut.close();\r",
								"            }, 5000);\r",
								"\r",
								"        }\r",
								"\r",
								"    },\r",
								"\r",
								"    GetTokenWithRefreshToken: function (refreshToken, process) {\r",
								"        this.options = this._getLogonData();\r",
								"        appCacheLog('OIDC: Starting method GetTokenWithRefreshToken');\r",
								"\r",
								"        return new Promise(function (resolve, reject) {\r",
								"            request({\r",
								"                type: 'POST',\r",
								"                url: AppCache.Url + '/user/logon/openid-connect/' + AppCacheLogonOIDC.options.path + '/token',\r",
								"                contentType: 'application/x-www-form-urlencoded',\r",
								"                data: {\r",
								"                    grant_type: 'refresh_token',\r",
								"                    refresh_token: refreshToken,\r",
								"                },\r",
								"                success: function (data) {\r",
								"                    setSelectedLoginType('openid-connect');\r",
								"\r",
								"                    appCacheLog('OIDC: Got tokens from GetTokenWithRefreshToken');\r",
								"                    appCacheLog(data);\r",
								"\r",
								"                    AppCacheLogonOIDC._onTokenReady(data);\r",
								"                    AppCacheLogonOIDC.P9LoginWithToken(data, process);\r",
								"                    resolve(data);\r",
								"                },\r",
								"                error: function (result) {\r",
								"\r",
								"                    sap.ui.core.BusyIndicator.hide();\r",
								"\r",
								"                    let errorText = 'OIDC: Error getting token from GetTokenWithRefreshToken';\r",
								"\r",
								"                    if (result.responseJSON && result.responseJSON.error_description) {\r",
								"                        errorText = result.responseJSON.error_description;\r",
								"                    }\r",
								"\r",
								"                    sap.m.MessageToast.show(errorText);\r",
								"\r",
								"                    appCacheLog(errorText);\r",
								"                    AppCache.Logout();\r",
								"                    reject(result);\r",
								"                }\r",
								"            })\r",
								"        });\r",
								"\r",
								"    },\r",
								"\r",
								"    P9LoginWithCode: function (authResponse) {\r",
								"        this.options = this._getLogonData();\r",
								"        let url = `${AppCache.Url}/user/logon/openid-connect/${AppCacheLogonOIDC.options.path}`\r",
								"        url += '/callback?' + serializeDataForQueryString(authResponse);\r",
								"\r",
								"        sap.ui.core.BusyIndicator.show(0);\r",
								"        appCacheLog('OIDC: Starting method P9LoginWithCode');\r",
								"\r",
								"        return new Promise(function (resolve, reject) {\r",
								"            request({\r",
								"                type: 'GET',\r",
								"                url: url,\r",
								"                contentType: 'application/json',\r",
								"                success: function (data) {\r",
								"                    appCacheLog('OIDC: Successfully logged on to P9. Starting process: Get User Info');\r",
								"                    appCacheLog(data);\r",
								"\r",
								"                    if (data.refresh_token) {\r",
								"                        AppCache.Auth = data.refresh_token;\r",
								"                    } else {\r",
								"                        console.error('OIDC: No refresh token is received');\r",
								"                        return;\r",
								"                    }\r",
								"\r",
								"                    AppCacheLogonOIDC._onTokenReady(data);\r",
								"                    AppCache.getUserInfo();\r",
								"                },\r",
								"                error: function (result) {\r",
								"                    sap.ui.core.BusyIndicator.hide();\r",
								"\r",
								"                    if (result.responseJSON && result.responseJSON.status) {\r",
								"                        sap.m.MessageToast.show(result.responseJSON.status);\r",
								"                    }\r",
								"\r",
								"                    console.log('OIDC: Error login to P9.');\r",
								"                    console.log(result);\r",
								"                    reject(result);\r",
								"                }\r",
								"            });\r",
								"        });\r",
								"    },\r",
								"\r",
								"    P9LoginWithToken: function (token, process) {\r",
								"\r",
								"        this.options = this._getLogonData();\r",
								"\r",
								"        sap.ui.core.BusyIndicator.show(0);\r",
								"\r",
								"        appCacheLog('OIDC: Starting method P9LoginWithToken');\r",
								"\r",
								"        if (!token.id_token) {\r",
								"            console.error('OIDC: id_token is missing');\r",
								"            return;\r",
								"        } else {\r",
								"            appCacheLog(token.id_token)\r",
								"        }\r",
								"\r",
								"        return new Promise(function (resolve, reject) {\r",
								"            jsonRequest({\r",
								"                url: AppCache.Url + '/user/logon/openid-connect/' + AppCacheLogonOIDC.options.path + '/session' + AppCache._getLoginQuery(),\r",
								"                headers: {\r",
								"                    'Authorization': 'Bearer ' + token.id_token,\r",
								"                },\r",
								"                success: function (data) {\r",
								"                    setSelectedLoginType('openid-connect');\r",
								"                    switch (process) {\r",
								"                        case 'pin':\r",
								"                            appCacheLog(`OIDC: Successfully logged on to P9. Starting process: ${process}`);\r",
								"\r",
								"                            // Start App\r",
								"                            NumPad.numPasscode = 0;\r",
								"                            NumPad.Clear();\r",
								"                            NumPad.Verify = true;\r",
								"                            AppCache.Encrypted = '';\r",
								"                            if (AppCache.isMobile) AppCache.Update();\r",
								"                            break;\r",
								"\r",
								"                        case 'refresh':\r",
								"                            appCacheLog('OIDC: Auto Refresh Session');\r",
								"                            break;\r",
								"\r",
								"                        default:\r",
								"                            break;\r",
								"\r",
								"                    }\r",
								"\r",
								"                },\r",
								"                error: function (result) {\r",
								"                    sap.ui.core.BusyIndicator.hide();\r",
								"                    let errorText = 'Error logging on P9, or P9 not online';\r",
								"                    if (result.responseJSON && result.responseJSON.status) errorText = result.responseJSON.status;\r",
								"                    appCacheLog(errorText);\r",
								"                    if (result.status === 0) onOffline();\r",
								"                    reject(result);\r",
								"                }\r",
								"            })\r",
								"        });\r",
								"\r",
								"    },\r",
								"\r",
								"    _onTokenReady: function (data, resourceToken) {\r",
								"\r",
								"        AppCache.userInfo.oidcToken = data;\r",
								"        AppCache.userInfo.oidcUser = AppCacheLogonAzure._parseJwt(AppCache.userInfo.oidcToken.id_token);\r",
								"\r",
								"        if (resourceToken) {\r",
								"            AppCache.userInfo.oidcResourceToken = resourceToken;\r",
								"        }\r",
								"\r",
								"        appCacheLog('OIDC: User Data');\r",
								"        appCacheLog(AppCache.userInfo);\r",
								"    },\r",
								"\r",
								"    _getLogonData: function () {\r",
								"        let logonData;\r",
								"        if (!this.fullUri) this.fullUri = AppCache.Url || location.origin;\r",
								"\r",
								"        if (AppCache.userInfo && AppCache.userInfo.logonData && AppCache.userInfo.logonData.id) {\r",
								"            logonData = AppCache.userInfo.logonData;\r",
								"        } else {\r",
								"            logonData = AppCache.getLogonTypeInfo(AppCache_loginTypes.getSelectedKey());\r",
								"        }\r",
								"\r",
								"        return logonData;\r",
								"    },\r",
								"\r",
								"    _getHashParamsFromUrl: function (url) {\r",
								"\r",
								"        if (url.indexOf('?') < 0) return;\r",
								"\r",
								"        const queryString = url.split('?')[1];\r",
								"\r",
								"        let params = queryString.replace(/^(#|\\?)/, '');\r",
								"        let hashParams = {};\r",
								"        let e,\r",
								"            a = /\\+/g,\r",
								"            r = /([^&;=]+)=?([^&;]*)/g,\r",
								"            d = function (s) {\r",
								"                return decodeURIComponent(s.replace(a, ' '));\r",
								"            };\r",
								"        while (e = r.exec(params))\r",
								"            hashParams[d(e[1])] = d(e[2]);\r",
								"        return hashParams;\r",
								"    },\r",
								"\r",
								"    _showLogonPopupAndWaitForCallbackUrl: function (url) {\r",
								"\r",
								"        return new Promise(function (resolve, reject) {\r",
								"            const popup = AppCacheLogonOIDC._showLogonPopup(url);\r",
								"\r",
								"            (function check() {\r",
								"                if (popup.closed) {\r",
								"                    return resolve();\r",
								"                }\r",
								"\r",
								"                let callbackUrl = '';\r",
								"                try {\r",
								"                    callbackUrl = popup.location.href || '';\r",
								"                } catch (e) { }\r",
								"\r",
								"                if (callbackUrl) {\r",
								"                    if (callbackUrl.indexOf('code=') > -1) {\r",
								"                        console.log('Callbackurl: ', callbackUrl);\r",
								"                        popup.close();\r",
								"                        return resolve(callbackUrl);\r",
								"                    }\r",
								"                }\r",
								"                setTimeout(check, 100);\r",
								"            })();\r",
								"        });\r",
								"    },\r",
								"\r",
								"    _showLogonPopup: function (url) {\r",
								"        const popUpWidth = 500;\r",
								"        const popUpHeight = 650;\r",
								"\r",
								"        const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\r",
								"        const winTop = window.screenTop ? window.screenTop : window.screenY;\r",
								"\r",
								"        const width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r",
								"        const height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r",
								"\r",
								"        const left = ((width / 2) - (popUpWidth / 2)) + winLeft;\r",
								"        const top = ((height / 2) - (popUpHeight / 2)) + winTop;\r",
								"\r",
								"        const logonWin = window.open(url, 'Login ', 'location=no,width=' + popUpWidth + ',height=' + popUpHeight + ',left=' + left + ',top=' + top);\r",
								"        if (logonWin.focus) logonWin.focus();\r",
								"\r",
								"        return logonWin;\r",
								"    }\r",
								"}\r",
								"\r",
								"window.AppCacheLogonOIDC = AppCacheLogonOIDC;"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "1e1100bd-e58d-4f16-94a4-6a4c81caa8e7",
							"fieldName": "AppCacheLogonLocal",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"let AppCacheLogonLocal = {",
								"    autoLoginKey: '_p9_log',",
								"",
								"    Logon: function () {",
								"        sap.ui.core.BusyIndicator.show();",
								"",
								"        let rec = {",
								"            username: AppCache_inUsername.getValue().toLowerCase(),",
								"            password: AppCache_inPassword.getValue(),",
								"            loginid: AppCache_loginTypes.getSelectedKey()",
								"        };",
								"",
								"        AppCache.Auth = Base64.encode(JSON.stringify(rec));",
								"",
								"        jsonRequest({",
								"            url: AppCache.Url + '/user/logon/local' + AppCache._getLoginQuery(),",
								"            data: JSON.stringify(rec),",
								"            success: function (data) {",
								"                setSelectedLoginType('local');",
								"                AppCache.getUserInfo();",
								"                AppCacheLogonLocal.AutoLoginSet();",
								"            },",
								"            error: function (result, status) {",
								"                if (result.status === 401) sap.m.MessageToast.show(AppCache_tWrongUserNamePass.getText());",
								"                if (result.status === 0) sap.m.MessageToast.show(AppCache_tNoConnection.getText());",
								"                AppCacheLogonLocal.AutoLoginRemove();",
								"                sap.ui.core.BusyIndicator.hide();",
								"            }",
								"        });",
								"    },",
								"",
								"    AutoLoginSet: function () {",
								"        if (AppCache_inRememberMe.getSelected()) {",
								"            if (typeof cordova !== 'undefined' && typeof cordova.plugins !== 'undefined' && typeof cordova.plugins.SecureKeyStore !== 'undefined') {",
								"                cordova.plugins.SecureKeyStore.set(",
								"                    function (res) { },",
								"                    function (error) {",
								"                        localStorage.setItem(AppCacheLogonLocal.autoLoginKey, AppCache.Auth);",
								"                    }, AppCacheLogonLocal.autoLoginKey, AppCache.Auth);",
								"            } else {",
								"                localStorage.setItem(AppCacheLogonLocal.autoLoginKey, AppCache.Auth);",
								"            }",
								"",
								"            AppCache.enableAutoLogin = true;",
								"        } else {",
								"            AppCacheLogonLocal.AutoLoginRemove();",
								"        }",
								"    },",
								"",
								"    AutoLoginRemove: function () {",
								"        AppCache.enableAutoLogin = false;",
								"        if (typeof cordova !== 'undefined' && typeof cordova.plugins !== 'undefined' && typeof cordova.plugins.SecureKeyStore !== 'undefined') {",
								"            cordova.plugins.SecureKeyStore.remove(",
								"                function (res) { },",
								"                function (error) {",
								"                    localStorage.removeItem(AppCacheLogonLocal.autoLoginKey);",
								"                }, AppCacheLogonLocal.autoLoginKey);",
								"        } else {",
								"            localStorage.removeItem(AppCacheLogonLocal.autoLoginKey);",
								"        }",
								"    },",
								"",
								"    AutoLoginGet: function () {",
								"        return new Promise(function (resolve, reject) {",
								"            if (typeof cordova !== 'undefined' && typeof cordova.plugins !== 'undefined' && typeof cordova.plugins.SecureKeyStore !== 'undefined') {",
								"                cordova.plugins.SecureKeyStore.get(",
								"                    function (res) {",
								"                        resolve(res);",
								"                    },",
								"                    function (error) {",
								"                        resolve(localStorage.getItem(AppCacheLogonLocal.autoLoginKey));",
								"                    }, AppCacheLogonLocal.autoLoginKey);",
								"            } else {",
								"                resolve(localStorage.getItem(AppCacheLogonLocal.autoLoginKey));",
								"            }",
								"        });",
								"    },",
								"",
								"    Relog: function (auth, process) {",
								"        return new Promise(function (resolve, reject) {",
								"            let rec = Base64.decode(auth);",
								"",
								"            try {",
								"                rec = JSON.parse(rec);",
								"            } catch (e) {",
								"                console.log(e);",
								"                resolve('ERROR');",
								"            }",
								"",
								"            jsonRequest({",
								"                url: AppCache.Url + '/user/logon/local' + AppCache._getLoginQuery(),",
								"                data: JSON.stringify(rec),",
								"                success: function (data) {",
								"                    setSelectedLoginType('local');",
								"                    resolve('OK');",
								"                },",
								"                error: function (result, status) {",
								"                    if (result.status === 0) {",
								"                        resolve('OK');",
								"                        onOffline();",
								"                    } else {",
								"                        resolve('ERROR');",
								"                    }",
								"                }",
								"            });",
								"        });",
								"    },",
								"",
								"    Logoff: function () {",
								"        if (navigator.onLine && AppCache.isOffline === false) {",
								"            jsonRequest({",
								"                url: AppCache.Url + '/user/logout',",
								"                success: function (data) {",
								"                    AppCache.clearCookies();",
								"                },",
								"                error: function (result, status) {",
								"                    AppCache.clearCookies();",
								"                }",
								"            });",
								"        }",
								"    },",
								"",
								"    Init: function () { }",
								"}",
								"",
								"window.AppCacheLogonLocal = AppCacheLogonLocal;"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "619eb084-d850-4549-d1ba-be94050ac8ea",
							"fieldName": "AppCacheLogonLdap",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"let AppCacheLogonLdap = {",
								"    Logon: function () {",
								"        sap.ui.core.BusyIndicator.show();",
								"",
								"        let rec = {};",
								"        rec.username = AppCache_inUsername.getValue().toLowerCase();",
								"        rec.password = AppCache_inPassword.getValue();",
								"        rec.loginid = AppCache_loginTypes.getSelectedKey();",
								"        AppCache.Auth = Base64.encode(JSON.stringify(rec));",
								"",
								"        let logonData = AppCache.getLogonTypeInfo(AppCache_loginTypes.getSelectedKey());",
								"",
								"        if (!logonData.path && AppCache.userInfo && AppCache.userInfo.logonData) {",
								"            logonData = AppCache.getLogonTypeInfo(AppCache.userInfo.logonData.id);",
								"        }",
								"",
								"        jsonRequest({",
								"            url: AppCache.Url + '/user/logon/ldap/' + logonData.path + AppCache._getLoginQuery(),",
								"            data: JSON.stringify(rec),",
								"            success: function (data) {",
								"                setSelectedLoginType('ldap');",
								"                AppCache.getUserInfo();",
								"            },",
								"            error: function (result, status) {",
								"                if (result.status === 401) {",
								"                    sap.m.MessageToast.show(AppCache_tWrongUserNamePass.getText());",
								"                }",
								"            }",
								"        });",
								"    },",
								"",
								"    Relog: function (auth) {",
								"        return new Promise(function (resolve, reject) {",
								"            let logonData = AppCache.getLogonTypeInfo(AppCache_loginTypes.getSelectedKey());",
								"            if (!logonData.path && AppCache.userInfo && AppCache.userInfo.logonData) {",
								"                logonData = AppCache.getLogonTypeInfo(AppCache.userInfo.logonData.id);",
								"            }",
								"",
								"            let rec = Base64.decode(auth);",
								"            try {",
								"                rec = JSON.parse(rec);",
								"            } catch (e) { }",
								"",
								"            jsonRequest({",
								"                url: AppCache.Url + '/user/logon/ldap/' + logonData.path + AppCache._getLoginQuery(),",
								"                data: JSON.stringify(rec),",
								"                success: function (data) {",
								"                    setSelectedLoginType('ldap');",
								"                    resolve(data);",
								"                },",
								"                error: function (result, status) {",
								"                    if (result.status === 0) {",
								"                        resolve('OK');",
								"                        onOffline();",
								"                    } else {",
								"                        resolve();",
								"                    }",
								"                }",
								"            });",
								"        });",
								"    },",
								"",
								"    Logoff: function () {",
								"        if (navigator.onLine && AppCache.isOffline === false) {",
								"            jsonRequest({",
								"                url: AppCache.Url + '/user/logout',",
								"                success: function (data) {",
								"                    AppCache.clearCookies();",
								"                },",
								"                error: function (result, status) {",
								"                    AppCache.clearCookies();",
								"                }",
								"            });",
								"        } else {",
								"            AppCache.clearCookies();",
								"        }",
								"    },",
								"",
								"    Init: function () { }",
								"}"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "374d0c99-e15b-4bcc-dbf1-7a8ca5d640e9",
							"fieldName": "AppCacheLogonSaml",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"let AppCacheLogonSaml = {",
								"    Logon: function (data) {",
								"        AppCache.Auth = JSON.stringify(data);",
								"        AppCache.samlData = data;",
								"",
								"        let loginWin = window.open(data.entryPoint, '_blank', 'location=yes');",
								"",
								"        // Apply Event Hander for inAppBrowser",
								"        setTimeout(function () {",
								"            loginWin.addEventListener('loadstart', function (event) {",
								"                // Check for login ok",
								"                sap.n.Planet9.function({",
								"                    id: dataSet,",
								"                    method: 'GetUserInfo',",
								"                    success: function (data) {",
								"                        AppCache.afterUserInfo(false, data);",
								"                        loginWin.close();",
								"                    },",
								"                    error: function (result, error) {",
								"                        // Not logged on",
								"                    }",
								"                });",
								"            });",
								"        }, 500);",
								"    },",
								"",
								"    Relog: function (data) {",
								"        try { data = JSON.parse(data); } catch (e) { }",
								"        let loginWin = window.open(data.entryPoint, '_blank', 'location=yes');",
								"",
								"        setTimeout(function () {",
								"            // apply event handler for inAppBrowser",
								"            loginWin.addEventListener('loadstart', function (event) {",
								"                // check for login",
								"                sap.n.Planet9.function({",
								"                    id: dataSet,",
								"                    method: 'GetUserInfo',",
								"                    success: function (data) {",
								"                        // Clear",
								"                        NumPad.numPasscode = 0;",
								"                        NumPad.Clear();",
								"                        NumPad.Verify = true;",
								"",
								"                        // Start App",
								"                        AppCache.Encrypted = '';",
								"                        AppCache.Update();",
								"",
								"                        loginWin.close();",
								"                    },",
								"                    error: function (result, error) {",
								"                        // Not logged on",
								"                    }",
								"                });",
								"            });",
								"        }, 500);",
								"    },",
								"",
								"    Logoff: function () {",
								"        // SAML Logout ",
								"        if (AppCache.userInfo.logonData.logoutUrl) {",
								"            request({",
								"                type: 'GET',",
								"                contentType: 'application/json',",
								"                url: AppCache.userInfo.logonData.logoutUrl",
								"            });",
								"        }",
								"",
								"        // P9 Logout",
								"        if (navigator.onLine && AppCache.isOffline === false) {",
								"            jsonRequest({",
								"                url: AppCache.Url + '/user/logout',",
								"                success: function (data) {",
								"                    AppCache.clearCookies();",
								"                },",
								"                error: function (result, status) {",
								"                    AppCache.clearCookies();",
								"                }",
								"            });",
								"        } else {",
								"            AppCache.clearCookies();",
								"        }",
								"    },",
								"",
								"    Init: function () { }",
								"}"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "db664d5b-12d8-4fba-ea59-fe10784a4825",
							"fieldName": "AppCacheLogonAzure",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"let AppCacheLogonAzure = {",
								"    state: null,",
								"    options: {},",
								"    fullUri: null,",
								"    redirectUri: '/public/azure_redirect.html',",
								"    msalObj: null,",
								"    loginScopes: ['user.read', 'profile', 'openid', 'offline_access'],",
								"",
								"    InitMsal: function () {",
								"        let me = this;",
								"        return new Promise(function (resolve) {",
								"",
								"            if (me.msalObj) return resolve();",
								"",
								"            let msalUrl = '/public/ms/msal.js';",
								"            if (isCordova()) msalUrl = 'public/ms/msal.js';",
								"",
								"            AppCache.loadLibrary(msalUrl).then(function () {",
								"",
								"                let redirectUri = AppCacheLogonAzure.redirectUri;",
								"",
								"                if (AppCache.Url) {",
								"                    redirectUri = AppCache.Url + redirectUri;",
								"                } else {",
								"                    redirectUri = location.origin + redirectUri;",
								"                }",
								"",
								"                me.msalObj = new msal.PublicClientApplication({",
								"                    auth: {",
								"                        clientId: me.options.clientID,",
								"                        authority: 'https://login.microsoftonline.com/' + me.options.tenantId,",
								"                        redirectUri: redirectUri,",
								"                    },",
								"                    cache: {",
								"                        cacheLocation: 'sessionStorage',",
								"                        storeAuthStateInCookie: false,",
								"                    }",
								"                });",
								"",
								"                resolve();",
								"            });",
								"        });",
								"    },",
								"",
								"    Logon: function (loginHint) {",
								"        this.options = this._getLogonData();",
								"",
								"        if (this.useMsal()) {",
								"            this._loginMsal();",
								"            return;",
								"        }",
								"",
								"        this.state = Date.now();",
								"",
								"        let logonWin = this._openPopup(this._loginUrl(loginHint));",
								"",
								"        if (!isCordova()) {",
								"",
								"            if (location.protocol === 'file:') {",
								"                sap.m.MessageToast.show('Testing Azure AD from file is not allowed due to CSRF issues. Please test in mobile app');",
								"                return;",
								"            }",
								"",
								"            if (logonWin.focus) logonWin.focus();",
								"",
								"            // Browser",
								"            this._waitForPopupDesktop(logonWin, function (url) {",
								"",
								"                let authResponse = AppCacheLogonAzure._getHashParams(url);",
								"",
								"                // Get response",
								"                if (authResponse) {",
								"",
								"                    if (authResponse.error) {",
								"                        sap.m.MessageToast.show(authResponse.error);",
								"                        sap.ui.core.BusyIndicator.hide();",
								"                        return;",
								"                    }",
								"",
								"                    appCacheLog('Azure Logon: Got code');",
								"                    appCacheLog(authResponse);",
								"",
								"                    // Prevent cross-site request forgery attacks",
								"                    if (parseInt(authResponse.state) !== AppCacheLogonAzure.state) {",
								"                        sap.m.MessageToast.show('Cross-site request forgery detected');",
								"                        return;",
								"                    }",
								"",
								"                    // Request Access/Refresh Tokens ",
								"                    AppCacheLogonAzure._getToken(authResponse);",
								"",
								"                } else {",
								"                    console.log('No token response, or window closed manually');",
								"                }",
								"",
								"            }.bind(this));",
								"",
								"        } else {",
								"",
								"            // Mobile InAppBrowser",
								"            logonWin.addEventListener('loadstop', function () {",
								"",
								"                logonWin.executeScript({ code: 'location.search' }, function (url) {",
								"",
								"                    let authResponse = AppCacheLogonAzure._getHashParams(url[0]);",
								"",
								"                    // Get response",
								"                    if (authResponse) {",
								"                        // Logging ",
								"                        appCacheLog('LoadStop: Got search response');",
								"                        appCacheLog(authResponse);",
								"",
								"                        // Error ",
								"                        if (authResponse.error) {",
								"                            logonWin.close();",
								"                            sap.m.MessageToast.show(authResponse.error);",
								"                            sap.ui.core.BusyIndicator.hide();",
								"                            return;",
								"                        }",
								"",
								"                        if (authResponse.state && authResponse.code) {",
								"",
								"                            logonWin.close();",
								"",
								"                            // Prevent cross-site request forgery attacks",
								"                            if (parseInt(authResponse.state) !== AppCacheLogonAzure.state) {",
								"                                sap.m.MessageToast.show('Cross-site request forgery detected');",
								"                                return;",
								"                            }",
								"",
								"                            // Request Access/Refresh Tokens ",
								"                            AppCacheLogonAzure._getToken(authResponse);",
								"",
								"                        }",
								"",
								"                    }",
								"                });",
								"",
								"            });",
								"",
								"        }",
								"    },",
								"",
								"    GetTokenPopup: function (request) {",
								"        const me = this;",
								"        return me.msalObj.acquireTokenSilent(request).catch(function (error) {",
								"            if (error instanceof msal.InteractionRequiredAuthError) {",
								"                return me.msalObj.acquireTokenPopup(request).then(tokenResponse => {",
								"                    return tokenResponse;",
								"                }).catch(error => {",
								"                    appCacheError('Azure GetTokenPopup: ' + error);",
								"                });",
								"            } else {",
								"                appCacheError('Azure GetTokenPopup: ' + error);",
								"            }",
								"        });",
								"    },",
								"",
								"    Signout: function () {",
								"",
								"        localStorage.removeItem('p9azuretoken');",
								"        localStorage.removeItem('p9azuretokenv2');",
								"",
								"        if (AppCacheLogonAzure.options.azureSilentSignout) {",
								"            let signoutFrame = document.getElementById('azureSignout');",
								"            if (signoutFrame) signoutFrame.setAttribute('src', 'https://login.microsoftonline.com/common/oauth2/logout');",
								"        } else {",
								"",
								"            let signOut = window.open('https://login.microsoftonline.com/common/oauth2/logout', '_blank', 'location=no,width=5,height=5,left=-1000,top=3000');",
								"",
								"            signOut.blur();",
								"",
								"            signOut.onload = function () {",
								"                signOut.close();",
								"            };",
								"",
								"            setTimeout(function () {",
								"                signOut.close();",
								"            }, 1000);",
								"",
								"        }",
								"    },",
								"",
								"    Relog: function (refreshToken, process) {",
								"",
								"        let me = this;",
								"",
								"        me.options = me._getLogonData();",
								"",
								"        if (me.useMsal() && !me.msalObj) {",
								"            me.InitMsal().then(function () {",
								"                me._refreshToken(refreshToken, process);",
								"            });",
								"        } else {",
								"            me._refreshToken(refreshToken, process);",
								"        }",
								"",
								"    },",
								"",
								"    Logoff: function () {",
								"",
								"        // Logout Planet 9",
								"        if (navigator.onLine && AppCache.isOffline === false) {",
								"",
								"            AppCacheLogonAzure.Signout();",
								"",
								"            jsonRequest({",
								"                url: this.fullUri + '/user/logout',",
								"                success: function (data) {",
								"                    AppCache.clearCookies();",
								"                    appCacheLog('Azure Logon: Successfully logged out');",
								"                },",
								"                error: function (result, status) {",
								"                    sap.ui.core.BusyIndicator.hide();",
								"                    AppCache.clearCookies();",
								"                    appCacheLog('Azure Logon: Successfully logged out, in offline mode');",
								"                }",
								"            });",
								"        } else {",
								"            AppCache.clearCookies();",
								"        }",
								"    },",
								"",
								"    Init: function () {",
								"",
								"    },",
								"",
								"    useMsal: function () {",
								"        if (this.options.azureMSALv2 && !isCordova()) return true;",
								"    },",
								"",
								"    _loginMsal: function () {",
								"",
								"        let me = this;",
								"",
								"        me.InitMsal().then(function () {",
								"            me.msalObj.loginPopup({ scopes: me.loginScopes, prompt: 'select_account' }).then(function (response) {",
								"                AppCache.Auth = ModelData.genID();",
								"                AppCacheLogonAzure._loginP9(response.idToken);",
								"            }).catch(function (error) {",
								"                if (error && error.toString().indexOf('Failed to fetch') > -1) {",
								"                    sap.m.MessageToast.show('Failed to fetch token. Redirect URI in azure must be set to Single Page Application');",
								"                } else {",
								"                    sap.m.MessageToast.show(error.toString());",
								"                }",
								"            });",
								"        });",
								"    },",
								"",
								"    _getHashParams: function (token) {",
								"",
								"        if (!token) return null;",
								"        if (token.indexOf('?') > -1) token = token.split('?')[1];",
								"",
								"        let params = token.replace(/^(#|\\?)/, '');",
								"        let hashParams = {};",
								"        let e,",
								"            a = /\\+/g,",
								"            r = /([^&;=]+)=?([^&;]*)/g,",
								"            d = function (s) {",
								"                return decodeURIComponent(s.replace(a, ' '));",
								"            };",
								"        while (e = r.exec(params))",
								"            hashParams[d(e[1])] = d(e[2]);",
								"        return hashParams;",
								"    },",
								"",
								"    _getLogonData: function () {",
								"",
								"        let logonData;",
								"",
								"        if (!this.fullUri) this.fullUri = AppCache.Url || location.origin;",
								"",
								"        if (AppCache.userInfo && AppCache.userInfo.logonData && AppCache.userInfo.logonData.id) {",
								"            logonData = AppCache.userInfo.logonData;",
								"        } else {",
								"            logonData = AppCache.getLogonTypeInfo(AppCache_loginTypes.getSelectedKey());",
								"        }",
								"",
								"        return logonData;",
								"    },",
								"",
								"    _authUrl: function (endPoint) {",
								"        return 'https://login.microsoftonline.com/' + AppCacheLogonAzure.options.tenantId + '/oauth2/v2.0/' + endPoint + '?';",
								"    },",
								"",
								"    _loginUrl: function (loginHint) {",
								"        let data = {",
								"            client_id: AppCacheLogonAzure.options.clientID,",
								"            redirect_uri: this.fullUri + AppCacheLogonAzure.redirectUri,",
								"            scope: AppCacheLogonAzure.loginScopes.join(' '),",
								"            // nonce: ModelData.genID(),",
								"            state: this.state,",
								"            prompt: 'select_account',",
								"            response_type: 'code'",
								"        };",
								"",
								"        if (loginHint) data.login_hint = loginHint;",
								"",
								"        return this._authUrl('authorize') + serializeDataForQueryString(data);",
								"    },",
								"",
								"    _logoutUrl: function () {",
								"",
								"        let data = {",
								"            post_logout_redirect_uri: this.fullUri + AppCacheLogonAzure.redirectUri",
								"        };",
								"",
								"        return this._authUrl('logout') + serializeDataForQueryString(data);",
								"    },",
								"",
								"    _onTokenReadyMsal: function (data, resourceToken) {",
								"        // Old token format.",
								"        AppCache.userInfo.azureToken = {",
								"            access_token: data.accessToken,",
								"            expires_in: (data.expiresOn - new Date()) / 1000,",
								"            ext_expires_in: ((data.extExpiresOn - new Date()) / 1000),",
								"            id_token: data.idToken,",
								"            refresh_token: 'N/A',",
								"            scope: data.scopes.join(' '),",
								"            token_type: 'Bearer',",
								"        };",
								"        //New token format",
								"        AppCache.userInfo.v2azureToken = data;",
								"        AppCache.userInfo.azureUser = AppCacheLogonAzure._parseJwt(AppCache.userInfo.azureToken.idToken);",
								"",
								"        if (resourceToken) {",
								"            AppCache.userInfo.v2azureResourceToken = resourceToken;",
								"        }",
								"",
								"        const nextRelog = (data.expiresOn - new Date()) - 120000;",
								"        setTimeout(function () {",
								"            AppCacheLogonAzure.Relog(null, 'refresh');",
								"        }, nextRelog);",
								"    },",
								"",
								"    _onTokenReady: function (data, resourceToken) {",
								"",
								"        if (!data.expires_on) {",
								"            data.expires_on = new Date();",
								"            data.expires_on.setSeconds(data.expires_on.getSeconds() + data.expires_in);",
								"            data.expires_on = data.expires_on.getTime();",
								"        }",
								"",
								"        // Autorelogin ",
								"        let expire_in_ms = (data.expires_in * 1000) - 120000;",
								"",
								"        AppCache.userInfo.azureToken = data;",
								"        AppCache.userInfo.azureUser = AppCacheLogonAzure._parseJwt(AppCache.userInfo.azureToken.id_token);",
								"",
								"",
								"        if (resourceToken) {",
								"            AppCache.userInfo.azureResourceToken = resourceToken;",
								"        }",
								"",
								"        if (AppCacheLogonAzure.autoRelog) {",
								"            clearInterval(AppCacheLogonAzure.autoRelog);",
								"            AppCacheLogonAzure.autoRelog = null;",
								"        }",
								"",
								"        AppCacheLogonAzure.autoRelog = setInterval(function () {",
								"            if (AppCache.isRestricted && !AppCache.inBackground) return;",
								"            AppCacheLogonAzure.Relog(data.refresh_token, 'refresh');",
								"        }, expire_in_ms);",
								"",
								"        appCacheLog('Azure Logon: User Data');",
								"        appCacheLog(AppCache.userInfo);",
								"",
								"        return;",
								"    },",
								"",
								"    _getToken: function (response) {",
								"        let url = this._authUrl('token');",
								"        let data = {",
								"            client_id: AppCacheLogonAzure.options.clientID,",
								"            redirect_uri: this.fullUri + AppCacheLogonAzure.redirectUri,",
								"            scope: AppCacheLogonAzure.loginScopes.join(' '),",
								"            code: response.code,",
								"            grant_type: 'authorization_code',",
								"        };",
								"",
								"        return request({",
								"            type: 'POST',",
								"            url: this.fullUri + '/user/logon/' + this.options.type + '/' + this.options.path + '/' + encodeURIComponent(url),",
								"            contentType: 'application/x-www-form-urlencoded',",
								"            data: data,",
								"            success: function (data) {",
								"",
								"                if (data && !data.refresh_token) {",
								"                    sap.m.MessageToast.show('Error getting refresh_token from Azure. Add scope offline_access in authentication configuration');",
								"                    appCacheError('Azure Logon: Error getting refresh_token. Add scope offline_access in authentication configuration');",
								"                    return;",
								"                }",
								"",
								"                appCacheLog('Azure Logon: Got tokens');",
								"                appCacheLog(data);",
								"",
								"                AppCache.Auth = data.refresh_token;",
								"",
								"                AppCacheLogonAzure._onTokenReady(data);",
								"                AppCacheLogonAzure._loginP9(data.id_token);",
								"            },",
								"            error: function (result, status) {",
								"",
								"                sap.ui.core.BusyIndicator.hide();",
								"",
								"                let errorText = 'Error getting token from Azure AD';",
								"",
								"                if (result.responseJSON && result.responseJSON.error_description) {",
								"                    errorText = result.responseJSON.error_description;",
								"                    errorCode = errorText.substr(0, 12);",
								"                }",
								"",
								"                sap.m.MessageToast.show(errorText);",
								"                appCacheLog(`${errorCode}: ${errorText}`);",
								"                AppCache.Logout();",
								"",
								"            }",
								"",
								"        });",
								"",
								"    },",
								"",
								"    _refreshTokenMsal: function (process) {",
								"        const me = this;",
								"        const account = this.msalObj.getAccountByUsername(AppCache.userInfo.username);",
								"",
								"        me.GetTokenPopup({ scopes: me.loginScopes, account }).then(function (azureToken) {",
								"            if (me.options.scope) {",
								"                me.GetTokenPopup({ scopes: me.options.scope.split(' '), account }).then(function (resourceToken) {",
								"                    AppCacheLogonAzure._onTokenReadyMsal(azureToken, resourceToken);",
								"                    AppCacheLogonAzure._loginP9(azureToken.idToken, process);",
								"                });",
								"            } else {",
								"                AppCacheLogonAzure._onTokenReadyMsal(azureToken);",
								"                AppCacheLogonAzure._loginP9(azureToken.idToken, process);",
								"            }",
								"        }).catch(function (error) {",
								"            let errorText = 'Error getting refreshToken from Azure AD';",
								"            let errorCode = '';",
								"",
								"            if (error && error.message && error.message.indexOf('AADSTS700082') > -1) {",
								"                NumPad.Clear();",
								"                AppCache.Logout();",
								"            }",
								"",
								"            if (process === 'pin') NumPad.Clear();",
								"",
								"            sap.m.MessageToast.show(errorText);",
								"            appCacheLog(`${errorCode}: ${errorText}`);",
								"        });",
								"    },",
								"",
								"    _getResourceToken: function (refreshToken, scope) {",
								"        const me = this;",
								"        let data = {",
								"            client_id: AppCacheLogonAzure.options.clientID,",
								"            scope: scope,",
								"            refresh_token: refreshToken,",
								"            grant_type: 'refresh_token',",
								"        }",
								"",
								"        return new Promise(function (resolve, reject) {",
								"            return request({",
								"                type: 'POST',",
								"                url: me.fullUri + '/user/logon/' + me.options.type + '/' + me.options.path + '/' + encodeURIComponent(me._authUrl('token')),",
								"                contentType: 'application/x-www-form-urlencoded',",
								"                data: data,",
								"                success: function (data) {",
								"                    resolve(data);",
								"                },",
								"                error: function (result, status) {",
								"                    sap.ui.core.BusyIndicator.hide();",
								"",
								"                    if (result.responseJSON && result.responseJSON.error_description) {",
								"                        errorText = result.responseJSON.error_description;",
								"                        errorCode = errorText.substr(0, 12);",
								"                        appCacheLog('Could not get resource token. Error:', errorText);",
								"                    }",
								"                    resolve();",
								"                }",
								"            });",
								"        });",
								"    },",
								"",
								"    _refreshToken: function (refreshToken, process) {",
								"        const me = this;",
								"",
								"        if (!process) process = 'pin';",
								"",
								"        if (this.msalObj) {",
								"            this._refreshTokenMsal(process);",
								"            return;",
								"        }",
								"",
								"        let url = this._authUrl('token');",
								"",
								"        let data = {",
								"            client_id: me.options.clientID,",
								"            scope: this.loginScopes.join(' '),",
								"            refresh_token: refreshToken,",
								"            grant_type: 'refresh_token',",
								"        };",
								"",
								"        // Get Tokens from Azure",
								"        return request({",
								"            type: 'POST',",
								"            url: this.fullUri + '/user/logon/' + this.options.type + '/' + this.options.path + '/' + encodeURIComponent(url),",
								"            contentType: 'application/x-www-form-urlencoded',",
								"            data: data,",
								"            success: function (data) {",
								"                appCacheLog(`Azure Logon: Got refresh_token: ${data.refresh_token}`);",
								"",
								"                if (me.options.scope) {",
								"                    me._getResourceToken(refreshToken, me.options.scope).then(function (resourceToken) {",
								"                        me._onTokenReady(data, resourceToken);",
								"                        me._loginP9(data.id_token, process);",
								"                    });",
								"                } else {",
								"                    me._onTokenReady(data);",
								"                    me._loginP9(data.id_token, process);",
								"                }",
								"            },",
								"            error: function (result, status) {",
								"",
								"                sap.ui.core.BusyIndicator.hide();",
								"",
								"                let errorText = 'Error getting refreshToken from Azure AD';",
								"                let errorCode = '';",
								"",
								"                if (result.responseJSON && result.responseJSON.error_description) {",
								"",
								"                    errorText = result.responseJSON.error_description;",
								"                    errorCode = errorText.substr(0, 12);",
								"",
								"                    switch (errorCode) {",
								"",
								"                        case 'AADSTS700082':",
								"                            NumPad.Clear();",
								"                            AppCache.Logout();",
								"                            break;",
								"",
								"                    }",
								"                }",
								"",
								"                if (process === 'pin') NumPad.Clear();",
								"",
								"                sap.m.MessageToast.show(errorText);",
								"                appCacheLog(`${errorCode}: ${errorText}`);",
								"            }",
								"        });",
								"    },",
								"",
								"    _loginP9: function (idToken, process) {",
								"",
								"        return request({",
								"            type: 'POST',",
								"            url: AppCache.Url + '/user/logon/' + AppCacheLogonAzure.options.type + '/' + AppCacheLogonAzure.options.path + AppCache._getLoginQuery(),",
								"            headers: { 'Authorization': 'Bearer ' + idToken },",
								"            success: function (data) {",
								"                setSelectedLoginType(AppCacheLogonAzure.options.type);",
								"",
								"                switch (process) {",
								"",
								"                    case 'pin':",
								"                        appCacheLog(`Azure Logon: Successfully logged on to P9. Starting process: ${process}`);",
								"",
								"                        // Start App",
								"                        NumPad.numPasscode = 0;",
								"                        NumPad.Clear();",
								"                        NumPad.Verify = true;",
								"                        AppCache.Encrypted = '';",
								"                        if (AppCache.isMobile) AppCache.Update();",
								"                        break;",
								"",
								"                    case 'refresh':",
								"                        appCacheLog(`Azure Logon: Successfully logged on to P9. Starting process: ${process}`);",
								"                        break;",
								"",
								"                    default:",
								"                        appCacheLog('Azure Logon: Successfully logged on to P9. Starting process: Get User Info');",
								"                        AppCache.getUserInfo();",
								"                        break;",
								"",
								"                }",
								"",
								"            },",
								"            error: function (result, status) {",
								"                sap.ui.core.BusyIndicator.hide();",
								"                let errorText = 'Error logging on P9, or P9 not online';",
								"                if (result.responseJSON && result.responseJSON.status) errorText = result.responseJSON.status;",
								"                appCacheLog(errorText);",
								"                if (result.status === 0) onOffline();",
								"            }",
								"        });",
								"    },",
								"",
								"    _waitForPopupDesktop: function (popupWin, onClose) {",
								"        let url = '';",
								"        let winCheckTimer = setInterval(function () {",
								"",
								"            try {",
								"                url = popupWin.location.href || '';",
								"            } catch (e) {",
								"",
								"            }",
								"",
								"            if (url.indexOf('code=') > -1 || url.indexOf('error=') > -1) {",
								"                clearInterval(winCheckTimer);",
								"                popupWin.close();",
								"                onClose(url);",
								"            }",
								"        }, 100);",
								"    },",
								"",
								"    _parseJwt: function (token) {",
								"        try {",
								"            return JSON.parse(atob(token.split('.')[1]));",
								"        } catch (e) {",
								"            return null;",
								"        }",
								"    },",
								"",
								"    _openPopup: function (url, popUpWidth, popUpHeight) {",
								"",
								"        popUpWidth = popUpWidth || 483;",
								"        popUpHeight = popUpHeight || 600;",
								"",
								"        let winLeft = window.screenLeft ? window.screenLeft : window.screenX;",
								"        let winTop = window.screenTop ? window.screenTop : window.screenY;",
								"",
								"        let width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;",
								"        let height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;",
								"",
								"        let left = ((width / 2) - (popUpWidth / 2)) + winLeft;",
								"        let top = ((height / 2) - (popUpHeight / 2)) + winTop;",
								"",
								"        return window.open(url, '_blank', 'location=no,width=' + popUpWidth + ',height=' + popUpHeight + ',left=' + left + ',top=' + top);",
								"    }",
								"",
								"};"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "1bb2a08c-3ea5-43ea-d54b-d2d3e45acdcc",
							"fieldName": "NumPad",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"function isPincodeValid(v) {",
								"    const validity = {",
								"        isValid: true,",
								"        errorMessage: ''",
								"    };",
								"",
								"    // Enhancement",
								"    if (sap.n.Enhancement.PinCodeValidation) {",
								"        try {",
								"            sap.n.Enhancement.PinCodeValidation(v, validity);",
								"        } catch (e) {",
								"            appCacheError('Enhancement PinCodeValidation ' + e);",
								"        }",
								"    }",
								"",
								"    const { isValid, errorMessage } = validity;",
								"",
								"    return {",
								"        isValid: isValid && /^[0-9]+$/.test(v) && v.length === AppCache.passcodeLength,",
								"        errorMessage: isValid ? '' : errorMessage",
								"    };",
								"}",
								"",
								"function sanitizePincode(v) {",
								"    return v.replace(/[^0-9]/g, '');",
								"}",
								"",
								"function pincodeEntryErrs() {",
								"    const len = AppCache.passcodeLength;",
								"    const criteria = `Valid pin is numeric and consists of only ${len} digits.`;",
								"    return {",
								"        setPin: `Set Pin is invalid. ${criteria}`,",
								"        repeatPin: `Repeat Pin is invalid. ${criteria}`,",
								"        newPasscode: AppCache_tEnterNewPasscode.getText(),",
								"        repeatPasscode: AppCache_tEnterRepeatPasscode.getText(),",
								"        passcodeTooShort: `${AppCache_tPasscodeToShort.getText()} (${len})`,",
								"        passcodeNoMatch: AppCache_tNoPasscodeMatch.getText(),",
								"    };",
								"}",
								"",
								"function showPincodeError(msg, input = null) {",
								"    if (input) input.setValueState('Error');",
								"    sap.m.MessageToast.show(msg, {",
								"        onClose: function () {",
								"            if (input) input.setValueState('None');",
								"        }",
								"    });",
								"}",
								"",
								"function onPasscode1Submit() {",
								"    if (!isPincodeValid(AppCache_inPasscode1.getValue()).isValid) {",
								"        const customError = isPincodeValid(AppCache_inPasscode1.getValue()).errorMessage;",
								"        return showPincodeError(customError || pincodeEntryErrs().setPin, AppCache_inPasscode1);",
								"    }",
								"",
								"    AppCache_inPasscode1.setValueState('None');",
								"    AppCache_inPasscode2.focus();",
								"}",
								"",
								"function onPasscode2Submit() {",
								"    if (!isPincodeValid(AppCache_inPasscode2.getValue()).isValid) {",
								"        const customError = isPincodeValid(AppCache_inPasscode2.getValue()).errorMessage;",
								"        return showPincodeError(customError || pincodeEntryErrs().repeatPin, AppCache_inPasscode2);",
								"    }",
								"",
								"    AppCache_inPasscode2.setValueState('None');",
								"    return AppCache_butPasscode.firePress();",
								"}",
								"",
								"const NumPad = {",
								"    numValue: '',",
								"    Verify: false,",
								"    numPasscode: 0,",
								"",
								"    ref: function () {",
								"        return document.getElementById('AppCache_boxPasscodeEntry');",
								"    },",
								"",
								"    addEvent: function (type, fn) {",
								"        const el = this.ref();",
								"        if (!el) return;",
								"",
								"        el.addEventListener(type, fn);",
								"    },",
								"",
								"    removeEvent: function (type, fn) {",
								"        const el = this.ref();",
								"        if (!el) return;",
								"",
								"        el.removeEventListener(type, fn);",
								"    },",
								"",
								"    keydown: function (evt) {",
								"        const { key } = evt;",
								"        if (['Delete', 'Backspace'].includes(key)) {",
								"            butNumpadClear.firePress();",
								"            return;",
								"        }",
								"",
								"        NumPad.enterKey(key);",
								"    },",
								"",
								"    KeypressHandlerSet: function () {",
								"        this.addEvent('keydown', NumPad.keydown);",
								"    },",
								"",
								"    KeypressHandlerRemove: function () {",
								"        this.removeEvent('keydown', NumPad.keydown);",
								"    },",
								"",
								"    enterKey: function (keyValue) {",
								"        // only purpose of these checkboxes is to keep count",
								"        // on how many characters have been entered",
								"        const checkboxes = [",
								"            Passcode1, Passcode2, Passcode3, Passcode4,",
								"            Passcode5, Passcode6, Passcode7, Passcode8,",
								"        ];",
								"",
								"        let checked = 0;",
								"        for (const cb of checkboxes) {",
								"            if (cb.getSelected() === true) {",
								"                checked += 1;",
								"                continue;",
								"            }",
								"",
								"            if (cb.getSelected() === false) {",
								"                cb.setSelected(true);",
								"                checked += 1;",
								"",
								"                NumPad.numValue += keyValue;",
								"",
								"                // possible keycode length can be 4, 6 or 8 characters",
								"                if (checked === AppCache.passcodeLength) {",
								"                    setTimeout(function () {",
								"                        NumPad.Logon();",
								"                    }, 50);",
								"                    NumPad.setPasscodeBusy(true);",
								"                }",
								"",
								"                return;",
								"            }",
								"        }",
								"    },",
								"",
								"    setPasscodeBusy: function (enabled) {",
								"        if (!enabled) {",
								"            sap.ui.core.BusyIndicator.hide();",
								"        } else {",
								"            sap.ui.core.BusyIndicator.show(0);",
								"        }",
								"    },",
								"",
								"    Clear: function () {",
								"        NumPad.numValue = '';",
								"",
								"        [",
								"            Passcode1, Passcode2, Passcode3, Passcode4,",
								"            Passcode5, Passcode6, Passcode7, Passcode8,",
								"        ].forEach(function (cb) {",
								"            cb.setSelected(false);",
								"        });",
								"",
								"        if (typeof window.cordova !== 'undefined' && !window.navigator.simulator && AppCache.biometricAuthentication) {",
								"            butNumpadLogin.setEnabled(AppCache.biometricAuthentication);",
								"        }",
								"    },",
								"",
								"    Logon: function () {",
								"        appCacheLog(`NumPad.Logon: Starting with auth ${AppCache.Encrypted}`);",
								"",
								"        if (!AppCache.Encrypted) {",
								"            appCacheLog('NumPad.Logon: No auth found');",
								"            appCacheLog(AppCache.userInfo);",
								"",
								"            if (AppCache.userInfo.auth) {",
								"                AppCache.Encrypted = AppCache.userInfo.auth;",
								"            } else {",
								"                NumPad.Clear();",
								"                AppCache.Logout();",
								"                sap.m.MessageToast.show(AppCache_tNoUserInfo.getText());",
								"                sap.ui.core.BusyIndicator.hide();",
								"                return;",
								"            }",
								"        }",
								"",
								"        // Decrypt with Passcode",
								"        let auth = '';",
								"        try {",
								"            const key = generatePBKDF2Key(NumPad.numValue, AppCache.deviceID);",
								"            auth = decryptAES(AppCache.Encrypted, key.toString());",
								"        } catch (err) {",
								"            appCacheLog('NumPad.Logon: decryption error');",
								"        }",
								"",
								"        if (auth === '') {",
								"            NumPad.Clear();",
								"",
								"            if (parseInt(AppCache.numPasscode) === NumPad.numPasscode) {",
								"                NumPad.numPasscode = 0;",
								"                NumPad.setPasscodeBusy(false);",
								"                AppCache.Logout();",
								"                AppCache.RemoveAllCache();",
								"                return;",
								"            }",
								"",
								"            if (navigator.notification && navigator.notification.vibrate) navigator.notification.vibrate(250);",
								"            boxNumpad02.addStyleClass('animated shake');",
								"            sap.m.MessageBox.error(\"Wrong Pin Code!\");",
								"",
								"            setTimeout(function () {",
								"                boxNumpad02.removeStyleClass('animated shake');",
								"            }, 500);",
								"",
								"            NumPad.setPasscodeBusy(false);",
								"            NumPad.numPasscode++;",
								"            return;",
								"        }",
								"",
								"        appCacheLog('NumPad.Logon: PIN Code OK');",
								"",
								"        AppCache.userInfo.authDecrypted = auth;",
								"        sap.ui.core.BusyIndicator.show(0);",
								"",
								"        // Re-Logon ",
								"        if (AppCache.isOffline) {",
								"            appCacheLog('NumPad.Logon: Starting in offline mode');",
								"",
								"            // Clear",
								"            NumPad.numPasscode = 0;",
								"            NumPad.Clear();",
								"            NumPad.Verify = true;",
								"",
								"            // Start App",
								"            AppCache.Encrypted = '';",
								"            AppCache.Update();",
								"",
								"        } else {",
								"            appCacheLog('NumPad.Logon: Starting in online mode');",
								"",
								"            // SAML ",
								"            if (AppCache.userInfo.logonData.type === 'saml') {",
								"                AppCacheLogonSaml.Relog(auth)",
								"                return;",
								"            }",
								"",
								"            // OIDC ",
								"            if (AppCache.userInfo.logonData.type === 'openid-connect') {",
								"                AppCacheLogonOIDC.Relog(auth)",
								"                return;",
								"            }",
								"",
								"            // Azure",
								"            if (AppCache.userInfo.logonData.type === 'azure-bearer') {",
								"                AppCacheLogonAzure.Relog(auth)",
								"                return;",
								"            }",
								"",
								"            // LDAP/Local",
								"            const action = [];",
								"            switch (AppCache.userInfo.logonData.type) {",
								"                case 'local':",
								"                    action.push(AppCacheLogonLocal.Relog(auth));",
								"                    break;",
								"",
								"                case 'ldap':",
								"                    action.push(AppCacheLogonLdap.Relog(auth));",
								"                    break;",
								"            }",
								"",
								"            // Build Data",
								"            Promise",
								"                .all(action)",
								"                .then(function (values) {",
								"                    // Check if OK ",
								"                    if (values[0] === 'OK') {",
								"                        // Clear",
								"                        NumPad.numPasscode = 0;",
								"                        NumPad.Clear();",
								"                        NumPad.Verify = true;",
								"",
								"                        // Start App",
								"                        AppCache.Encrypted = '';",
								"                        AppCache.Update();",
								"                    } else {",
								"                        NumPad.numPasscode = 0;",
								"                        NumPad.Clear();",
								"                        NumPad.Verify = false;",
								"",
								"                        sap.m.MessageToast.show(AppCache_tWrongUserNamePass.getText());",
								"                        AppCache.Logout();",
								"                    }",
								"                });",
								"        }",
								"    }",
								"};"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "54700f86-7223-451a-c36a-8db02024123b",
							"fieldName": "Init",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"// Globals",
								"let dataSet = 'Launchpad';",
								"let currFav = [];",
								"let currTiles = [];",
								"let currCategory = [];",
								"let currCategoryChild = [];",
								"let deviceType;",
								"let parentObject;",
								"let cacheLoaded = 0;",
								"let searchCancelItemPress = false;",
								"let navBarTimeout;",
								"let screenSplit = 1300;",
								"let enableFavDnD = false;",
								"",
								"// Get URL Parameters",
								"let params = {};",
								"if (location.search) {",
								"    let parts = location.search.substring(1).split('&');",
								"    for (let i = 0; i < parts.length; i++) {",
								"        let nv = parts[i].split('=');",
								"        if (!nv[0]) continue;",
								"        params[nv[0]] = nv[1];",
								"    }",
								"}",
								"",
								"// TNT Icons",
								"sap.ui.core.IconPool.registerFont({",
								"    collectionName: 'tnt',",
								"    fontFamily: 'SAP-icons-TNT',",
								"    fontURI: sap.ui.require.toUrl('sap/tnt/themes/base/fonts'),",
								"    lazy: false",
								"});",
								"",
								"// Wrapper for OnInit Event",
								"sap.ui.getCore().attachInit(function () {",
								"    sap.ui.core.BusyIndicator.hide();",
								"",
								"    // Enhancement",
								"    if (params['getEnhancement'] === 'true') sap.n.Enhancement.getSpots();",
								"",
								"    // New IOS devices detected as Mac",
								"    if (isCordova() && sap.ui.Device.os.name === 'mac') sap.ui.Device.os.name === 'iOS';",
								"",
								"    // jQuery UI",
								"    try {",
								"        [",
								"            'sap.ui.core.format.DateFormat', 'sap.ui.core.format.NumberFormat',",
								"            'sap.ui.core.format.FileSizeFormat', 'sap.m.MessageBox',",
								"            'sap.ui.thirdparty.jqueryui.jquery-ui-core',",
								"            'sap.ui.thirdparty.jqueryui.jquery-ui-sortable',",
								"            'sap.ui.integration.widgets.Card'",
								"        ].forEach(function (name) {",
								"            jQuery.sap.require(name);",
								"        });",
								"    } catch (e) { }",
								"",
								"    // Hash Navigation - Clear topmenu/sections",
								"    if (isSection(location.hash)) location.hash = '';",
								"",
								"    // Detect URL Parameters ",
								"    if (params['isMobile'] === 'true') AppCache.isMobile = true;",
								"    if (params['mobileClient']) AppCache.mobileClient = params['mobileClient'];",
								"",
								"    // Add Check for Opera ",
								"    sap.ui.Device.browser.BROWSER.OPERA = \"op\";",
								"    if (navigator.userAgent.indexOf('Opera') > -1 || navigator.userAgent.indexOf('OPR') > -1) sap.ui.Device.browser.name = 'op';",
								"",
								"    // Check for Layout from localStorage",
								"    let newLayout = localStorage.getItem(AppCache.AppID + '.layout');",
								"",
								"    if (newLayout) {",
								"        try {",
								"            AppCache.layout = JSON.parse(newLayout);",
								"        } catch (e) {",
								"            console.error('Error parsing layout');",
								"        }",
								"    }",
								"",
								"    // UI Settings Mobile/Desktop",
								"    if (sap.n.Launchpad.isPhone()) {",
								"        AppCacheDiaSettings.setStretch(true);",
								"        diaText.setStretch(true);",
								"    }",
								"",
								"    // Event When changing Theme",
								"    sap.n.Launchpad.applyThemeMode();",
								"",
								"    sap.ui.getCore().attachThemeChanged(function () {",
								"        sap.n.Launchpad.applyThemeMode();",
								"    });",
								"",
								"    sap.ui.Device.resize.attachHandler(function (mParams) {",
								"        if (mParams.width < sap.n.Launchpad.verticalMenuLimit) launchpadContentMenu.setWidth('0px');",
								"        sap.n.Launchpad.setLaunchpadContentWidth();",
								"    });",
								"",
								"    launchpadOverflowClickArea.attachBrowserEvent('click', function (e) {",
								"        sap.n.Launchpad.overflowMenuClose();",
								"    });",
								"    launchpadSettingsClickArea.attachBrowserEvent('click', function (e) {",
								"        sap.n.Launchpad.settingsMenuClose();",
								"    });",
								"    ",
								"    toolVerticalMenuFilter.onAfterRendering = function() {",
								"        const input = toolVerticalMenuFilter.getInputElement();",
								"",
								"        if (input) {",
								"            input.setAttribute('title', toolVerticalMenuFilter.getPlaceholder());",
								"        }",
								"",
								"        this.__proto__.onAfterRendering.apply(this);",
								"    }",
								"",
								"    AppCachePageSideTab.onAfterRendering = function() {",
								"        const dom = this.getDomRef();",
								"",
								"        if (dom) {",
								"            const input = dom.getElementsByTagName('input')[0];",
								"            if (input) {",
								"                input.title = 'Side App Select';",
								"            }",
								"        }",
								"",
								"        this.__proto__.onAfterRendering.apply(this);",
								"    }",
								"",
								"    applyWCAGFixes();",
								"",
								"    setTimeout(function () {",
								"        // Browser Title ",
								"        if (AppCache.launchpadTitle && AppCache.launchpadTitle !== 'null') document.title = AppCache.launchpadTitle;",
								"",
								"        // UI Settings w/StartApp",
								"        if (AppCache.StartApp) AppCacheShellMenu.setVisible(false);",
								"",
								"        // Sort Users",
								"        AppCacheUsers.getBinding('items').sort(new sap.ui.model.Sorter('username', false, false))",
								"",
								"        // Phone UI Handling",
								"        if (sap.n.Launchpad.isPhone()) {",
								"            [AppCache_boxLogonCenter, AppCache_boxLogonPasscode, AppCache_boxLogonUsers].forEach(function (i) {",
								"                i.setHeight('100%');",
								"                i.addStyleClass('nepFlexPhone');    ",
								"            });",
								"            ",
								"            AppCache_boxLogonPasscodeEntry.setHeight('100%');",
								"",
								"            [panLogon, panLogonPasscode, panLogonUsers, boxNumpadPanel].forEach(function (i) {",
								"                i.setWidth('100%');",
								"                i.setHeight('100%');",
								"                i.removeStyleClass('nepPanLogonBorder');    ",
								"            });",
								"",
								"            [panLinks, panLinksUsers, panLinksPass, panLinksPin].forEach(function (i) {",
								"                i.addStyleClass('nepLinks');",
								"            });",
								"        }",
								"",
								"        // Models ",
								"        modelContentMenu.setSizeLimit(5000);",
								"",
								"        // Config ",
								"        if (AppCache.config) {",
								"            const c = AppCache.config;",
								"            // Launchpad Simulate previous setup ",
								"            if (!c.verticalMenu && !c.enableTopMenu && !c.activeAppsSide && !c.showAppTitle && !c.activeAppsTop) {",
								"                AppCache.config.verticalMenu = false;",
								"                AppCache.config.enableTopMenu = true;",
								"                AppCache.config.activeAppsSide = true;",
								"            }",
								"",
								"            // Settings",
								"            if (c.languages) sap.n.Launchpad.applyLanguages(AppCache.config.languages);",
								"            if (c.hideTopHeader && !AppCache.isMobile) topMenu.setHeight('0px');",
								"            if (c.hideLoginSelection) AppCache_loginTypes.setVisible(false);",
								"            if (",
								"                c.verticalMenu &&",
								"                sap.ui.Device.resize.width >= sap.n.Launchpad.verticalMenuLimit &&",
								"                !AppCache.isMobile",
								"            ) {",
								"                sap.n.Launchpad.overflowMenuOpen();",
								"            }",
								"",
								"            // Enhancement",
								"            if (c.enhancement) {",
								"                try {",
								"                    eval(c.enhancement);",
								"                } catch (e) {",
								"                    console.log(e);",
								"                }",
								"            }",
								"",
								"            // Paths",
								"            if (AppCache.config.ui5ModulePath) {",
								"                [",
								"                    'sap.viz', 'sap.chart', 'sap.me', 'sap.ui.comp', 'sap.ushell', 'sap.ui.fl', ",
								"                    'sap.ui.commons', 'sap.ui.ux3', 'sap.suite.ui.microchart', 'sap.suite.ui.commons',",
								"                ].forEach(function (name) {",
								"                    const path = AppCache.config.ui5ModulePath + '/' + name.replace(/\\./g, '/');",
								"                    jQuery.sap.registerModulePath(name, path);",
								"                });",
								"            }",
								"        }",
								"",
								"        // Get Setting or Startup",
								"        if (AppCache.isMobile) {",
								"            if (!AppCache.enablePwa) {",
								"                location.hash = '';",
								"            }",
								"",
								"            inAppCacheFormSettingsBACK.setVisible(false);",
								"            AppCacheUserActionSettings.setVisible(false);",
								"",
								"            (function () {",
								"                function waitForCache() {",
								"                    if (sap.n.Phonegap.loaded) {",
								"                        getCacheDataSettings(true);",
								"                        AppCache.getSettings();",
								"                    } else {",
								"                        setTimeout(waitForCache, 50);",
								"                    }",
								"                }",
								"                waitForCache();",
								"            })();",
								"        } else {",
								"            // Get Users Settings",
								"            getCacheAppCacheDiaSettings(true);",
								"",
								"            // Layout",
								"            if (AppCache.layout) {",
								"                ModelData.Delete(AppCache.layout, 'active', false);",
								"",
								"                // Add to Settings",
								"                AppCache.layout.forEach(function (data) {",
								"                    inAppCacheFormSettingsTHEME.addItem(new sap.ui.core.Item({",
								"                        key: data.id,",
								"                        text: data.name",
								"                    }));",
								"                });",
								"",
								"                // Override theme from URL ",
								"                if (params['nep-ui-layout']) modelAppCacheDiaSettings.oData.userTheme = params['nep-ui-layout'];",
								"",
								"                if (modelAppCacheDiaSettings.oData && modelAppCacheDiaSettings.oData.userTheme) {",
								"                    sap.n.Launchpad.applyUserTheme();",
								"                } else {",
								"                    sap.n.Launchpad.applyLayout(AppCache.layout[0]);",
								"                }",
								"            }",
								"",
								"            let logonType = localStorage.getItem('selectedLoginType');",
								"            if (logonType === 'local') AppCacheUserActionPassword.setVisible(true);",
								"",
								"            // Startup",
								"            AppCache.Startup();",
								"        }",
								"",
								"        // UI Settings",
								"        topShell.setAppWidthLimited(AppCache.limitWidth);",
								"",
								"        // Connect external Tools",
								"        setTimeout(function () {",
								"            AppCache.enableExternalTools();",
								"        }, 500);",
								"",
								"        // Blackout tile message",
								"        sap.n.Adaptive.editor(descBlackout, { editable: false, buttonList: [] });",
								"",
								"    }, 100);",
								"});",
								"",
								"// Sorter Function",
								"let sort_by = function (field, reverse, primer) {",
								"    let key = primer ?",
								"        function (x) {",
								"            return primer(x[field])",
								"        } :",
								"        function (x) {",
								"            return x[field]",
								"        };",
								"    reverse = !reverse ? 1 : -1;",
								"    return function (a, b) {",
								"        return a = key(a), b = key(b), reverse * ((a > b) - (b > a));",
								"    }",
								"}",
								""
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "484846cb-0160-4dbf-e545-78367e13b2f2",
							"fieldName": "GlobalAjaxError",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"// jQuery's global ajax error event handler - https://api.jquery.com/Ajax_Events/",
								"jQuery(document).ajaxError(function (_event, request, _settings) {",
								"    sap.ui.core.BusyIndicator.hide();",
								"    if (AppCache.hideGlobalAjaxError) return;",
								"",
								"    const code = request.status;",
								"    if (code === 401) {",
								"        // Not logged in -> Exit",
								"        if (AppCache.isRestricted) return;",
								"",
								"        // handling based on authentication method",
								"        const r = 'refresh';",
								"        const u = AppCache.userInfo;",
								"        if (u && u.logonData && u.logonData.type) {",
								"            const t = u.logonData.type;",
								"            const decrypted = u.authDecrypted;",
								"",
								"            if (t === 'saml') AppCacheLogonSaml.Relog(decrypted, r);",
								"            else if (t === 'azure-bearer') AppCacheLogonAzure.Relog(decrypted, r);",
								"            else if (t === 'openid-connect') AppCacheLogonOIDC.Relog(decrypted, r);",
								"            else if (t === 'local') AppCacheLogonLocal.Relog(decrypted, r);",
								"            else if (t === 'ldap') AppCacheLogonLdap.Relog(decrypted, r);",
								"        }",
								"",
								"        // AutoLogin",
								"        if (AppCache.enableAutoLogin) AppCacheLogonLocal.Relog(decrypted, r);",
								"    } else if ([0, 400, 404, 500].includes(code)) {",
								"    } else {",
								"        if (!AppCache.isOffline) sap.m.MessageToast.show(`${request.status} - ${request.statusText}`);",
								"    }",
								"});"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "5d8d3b28-67d9-4a51-cdda-16ddc3a989bd",
							"fieldName": "CBOR",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"/*\r",
								" * The MIT License (MIT)\r",
								" *\r",
								" * Copyright (c) 2014-2016 Patrick Gansterer <paroga@paroga.com>\r",
								" *\r",
								" * Permission is hereby granted, free of charge, to any person obtaining a copy\r",
								" * of this software and associated documentation files (the \"Software\"), to deal\r",
								" * in the Software without restriction, including without limitation the rights\r",
								" * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r",
								" * copies of the Software, and to permit persons to whom the Software is\r",
								" * furnished to do so, subject to the following conditions:\r",
								" *\r",
								" * The above copyright notice and this permission notice shall be included in all\r",
								" * copies or substantial portions of the Software.\r",
								" *\r",
								" * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r",
								" * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r",
								" * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r",
								" * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r",
								" * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r",
								" * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r",
								" * SOFTWARE.\r",
								" */\r",
								"\r",
								"(function (global, undefined) {\r",
								"    \"use strict\";\r",
								"    var POW_2_24 = 5.960464477539063e-8,\r",
								"        POW_2_32 = 4294967296,\r",
								"        POW_2_53 = 9007199254740992;\r",
								"\r",
								"    function encode(value) {\r",
								"        var data = new ArrayBuffer(256);\r",
								"        var dataView = new DataView(data);\r",
								"        var lastLength;\r",
								"        var offset = 0;\r",
								"\r",
								"        function prepareWrite(length) {\r",
								"            var newByteLength = data.byteLength;\r",
								"            var requiredLength = offset + length;\r",
								"            while (newByteLength < requiredLength)\r",
								"                newByteLength <<= 1;\r",
								"            if (newByteLength !== data.byteLength) {\r",
								"                var oldDataView = dataView;\r",
								"                data = new ArrayBuffer(newByteLength);\r",
								"                dataView = new DataView(data);\r",
								"                var uint32count = (offset + 3) >> 2;\r",
								"                for (var i = 0; i < uint32count; ++i)\r",
								"                    dataView.setUint32(i << 2, oldDataView.getUint32(i << 2));\r",
								"            }\r",
								"\r",
								"            lastLength = length;\r",
								"            return dataView;\r",
								"        }\r",
								"        function commitWrite() {\r",
								"            offset += lastLength;\r",
								"        }\r",
								"        function writeFloat64(value) {\r",
								"            commitWrite(prepareWrite(8).setFloat64(offset, value));\r",
								"        }\r",
								"        function writeUint8(value) {\r",
								"            commitWrite(prepareWrite(1).setUint8(offset, value));\r",
								"        }\r",
								"        function writeUint8Array(value) {\r",
								"            var dataView = prepareWrite(value.length);\r",
								"            for (var i = 0; i < value.length; ++i)\r",
								"                dataView.setUint8(offset + i, value[i]);\r",
								"            commitWrite();\r",
								"        }\r",
								"        function writeUint16(value) {\r",
								"            commitWrite(prepareWrite(2).setUint16(offset, value));\r",
								"        }\r",
								"        function writeUint32(value) {\r",
								"            commitWrite(prepareWrite(4).setUint32(offset, value));\r",
								"        }\r",
								"        function writeUint64(value) {\r",
								"            var low = value % POW_2_32;\r",
								"            var high = (value - low) / POW_2_32;\r",
								"            var dataView = prepareWrite(8);\r",
								"            dataView.setUint32(offset, high);\r",
								"            dataView.setUint32(offset + 4, low);\r",
								"            commitWrite();\r",
								"        }\r",
								"        function writeTypeAndLength(type, length) {\r",
								"            if (length < 24) {\r",
								"                writeUint8(type << 5 | length);\r",
								"            } else if (length < 0x100) {\r",
								"                writeUint8(type << 5 | 24);\r",
								"                writeUint8(length);\r",
								"            } else if (length < 0x10000) {\r",
								"                writeUint8(type << 5 | 25);\r",
								"                writeUint16(length);\r",
								"            } else if (length < 0x100000000) {\r",
								"                writeUint8(type << 5 | 26);\r",
								"                writeUint32(length);\r",
								"            } else {\r",
								"                writeUint8(type << 5 | 27);\r",
								"                writeUint64(length);\r",
								"            }\r",
								"        }\r",
								"\r",
								"        function encodeItem(value) {\r",
								"            var i;\r",
								"\r",
								"            if (value === false)\r",
								"                return writeUint8(0xf4);\r",
								"            if (value === true)\r",
								"                return writeUint8(0xf5);\r",
								"            if (value === null)\r",
								"                return writeUint8(0xf6);\r",
								"            if (value === undefined)\r",
								"                return writeUint8(0xf7);\r",
								"\r",
								"            switch (typeof value) {\r",
								"                case \"number\":\r",
								"                    if (Math.floor(value) === value) {\r",
								"                        if (0 <= value && value <= POW_2_53)\r",
								"                            return writeTypeAndLength(0, value);\r",
								"                        if (-POW_2_53 <= value && value < 0)\r",
								"                            return writeTypeAndLength(1, -(value + 1));\r",
								"                    }\r",
								"                    writeUint8(0xfb);\r",
								"                    return writeFloat64(value);\r",
								"\r",
								"                case \"string\":\r",
								"                    var utf8data = [];\r",
								"                    for (i = 0; i < value.length; ++i) {\r",
								"                        var charCode = value.charCodeAt(i);\r",
								"                        if (charCode < 0x80) {\r",
								"                            utf8data.push(charCode);\r",
								"                        } else if (charCode < 0x800) {\r",
								"                            utf8data.push(0xc0 | charCode >> 6);\r",
								"                            utf8data.push(0x80 | charCode & 0x3f);\r",
								"                        } else if (charCode < 0xd800) {\r",
								"                            utf8data.push(0xe0 | charCode >> 12);\r",
								"                            utf8data.push(0x80 | (charCode >> 6) & 0x3f);\r",
								"                            utf8data.push(0x80 | charCode & 0x3f);\r",
								"                        } else {\r",
								"                            charCode = (charCode & 0x3ff) << 10;\r",
								"                            charCode |= value.charCodeAt(++i) & 0x3ff;\r",
								"                            charCode += 0x10000;\r",
								"\r",
								"                            utf8data.push(0xf0 | charCode >> 18);\r",
								"                            utf8data.push(0x80 | (charCode >> 12) & 0x3f);\r",
								"                            utf8data.push(0x80 | (charCode >> 6) & 0x3f);\r",
								"                            utf8data.push(0x80 | charCode & 0x3f);\r",
								"                        }\r",
								"                    }\r",
								"\r",
								"                    writeTypeAndLength(3, utf8data.length);\r",
								"                    return writeUint8Array(utf8data);\r",
								"\r",
								"                default:\r",
								"                    var length;\r",
								"                    if (Array.isArray(value)) {\r",
								"                        length = value.length;\r",
								"                        writeTypeAndLength(4, length);\r",
								"                        for (i = 0; i < length; ++i)\r",
								"                            encodeItem(value[i]);\r",
								"                    } else if (value instanceof Uint8Array) {\r",
								"                        writeTypeAndLength(2, value.length);\r",
								"                        writeUint8Array(value);\r",
								"                    } else {\r",
								"                        var keys = Object.keys(value);\r",
								"                        length = keys.length;\r",
								"                        writeTypeAndLength(5, length);\r",
								"                        for (i = 0; i < length; ++i) {\r",
								"                            var key = keys[i];\r",
								"                            encodeItem(key);\r",
								"                            encodeItem(value[key]);\r",
								"                        }\r",
								"                    }\r",
								"            }\r",
								"        }\r",
								"\r",
								"        encodeItem(value);\r",
								"\r",
								"        if (\"slice\" in data)\r",
								"            return data.slice(0, offset);\r",
								"\r",
								"        var ret = new ArrayBuffer(offset);\r",
								"        var retView = new DataView(ret);\r",
								"        for (var i = 0; i < offset; ++i)\r",
								"            retView.setUint8(i, dataView.getUint8(i));\r",
								"        return ret;\r",
								"    }\r",
								"\r",
								"    function decode(data, tagger, simpleValue) {\r",
								"        var dataView = new DataView(data);\r",
								"        var offset = 0;\r",
								"\r",
								"        if (typeof tagger !== \"function\")\r",
								"            tagger = function (value) { return value; };\r",
								"        if (typeof simpleValue !== \"function\")\r",
								"            simpleValue = function () { return undefined; };\r",
								"\r",
								"        function commitRead(length, value) {\r",
								"            offset += length;\r",
								"            return value;\r",
								"        }\r",
								"        function readArrayBuffer(length) {\r",
								"            return commitRead(length, new Uint8Array(data, offset, length));\r",
								"        }\r",
								"        function readFloat16() {\r",
								"            var tempArrayBuffer = new ArrayBuffer(4);\r",
								"            var tempDataView = new DataView(tempArrayBuffer);\r",
								"            var value = readUint16();\r",
								"\r",
								"            var sign = value & 0x8000;\r",
								"            var exponent = value & 0x7c00;\r",
								"            var fraction = value & 0x03ff;\r",
								"\r",
								"            if (exponent === 0x7c00)\r",
								"                exponent = 0xff << 10;\r",
								"            else if (exponent !== 0)\r",
								"                exponent += (127 - 15) << 10;\r",
								"            else if (fraction !== 0)\r",
								"                return (sign ? -1 : 1) * fraction * POW_2_24;\r",
								"\r",
								"            tempDataView.setUint32(0, sign << 16 | exponent << 13 | fraction << 13);\r",
								"            return tempDataView.getFloat32(0);\r",
								"        }\r",
								"        function readFloat32() {\r",
								"            return commitRead(4, dataView.getFloat32(offset));\r",
								"        }\r",
								"        function readFloat64() {\r",
								"            return commitRead(8, dataView.getFloat64(offset));\r",
								"        }\r",
								"        function readUint8() {\r",
								"            return commitRead(1, dataView.getUint8(offset));\r",
								"        }\r",
								"        function readUint16() {\r",
								"            return commitRead(2, dataView.getUint16(offset));\r",
								"        }\r",
								"        function readUint32() {\r",
								"            return commitRead(4, dataView.getUint32(offset));\r",
								"        }\r",
								"        function readUint64() {\r",
								"            return readUint32() * POW_2_32 + readUint32();\r",
								"        }\r",
								"        function readBreak() {\r",
								"            if (dataView.getUint8(offset) !== 0xff) return false;\r",
								"            offset += 1;\r",
								"            return true;\r",
								"        }\r",
								"        function readLength(additionalInformation) {\r",
								"            if (additionalInformation < 24) return additionalInformation;\r",
								"            if (additionalInformation === 24) return readUint8();\r",
								"            if (additionalInformation === 25) return readUint16();\r",
								"            if (additionalInformation === 26) return readUint32();\r",
								"            if (additionalInformation === 27) return readUint64();\r",
								"            if (additionalInformation === 31) return -1;\r",
								"            throw \"Invalid length encoding\";\r",
								"        }\r",
								"        function readIndefiniteStringLength(majorType) {\r",
								"            var initialByte = readUint8();\r",
								"            if (initialByte === 0xff)\r",
								"                return -1;\r",
								"            var length = readLength(initialByte & 0x1f);\r",
								"            if (length < 0 || (initialByte >> 5) !== majorType)\r",
								"                throw \"Invalid indefinite length element\";\r",
								"            return length;\r",
								"        }\r",
								"\r",
								"        function appendUtf16Data(utf16data, length) {\r",
								"            for (var i = 0; i < length; ++i) {\r",
								"                var value = readUint8();\r",
								"                if (value & 0x80) {\r",
								"                    if (value < 0xe0) {\r",
								"                        value = (value & 0x1f) << 6\r",
								"                            | (readUint8() & 0x3f);\r",
								"                        length -= 1;\r",
								"                    } else if (value < 0xf0) {\r",
								"                        value = (value & 0x0f) << 12\r",
								"                            | (readUint8() & 0x3f) << 6\r",
								"                            | (readUint8() & 0x3f);\r",
								"                        length -= 2;\r",
								"                    } else {\r",
								"                        value = (value & 0x0f) << 18\r",
								"                            | (readUint8() & 0x3f) << 12\r",
								"                            | (readUint8() & 0x3f) << 6\r",
								"                            | (readUint8() & 0x3f);\r",
								"                        length -= 3;\r",
								"                    }\r",
								"                }\r",
								"\r",
								"                if (value < 0x10000) {\r",
								"                    utf16data.push(value);\r",
								"                } else {\r",
								"                    value -= 0x10000;\r",
								"                    utf16data.push(0xd800 | (value >> 10));\r",
								"                    utf16data.push(0xdc00 | (value & 0x3ff));\r",
								"                }\r",
								"            }\r",
								"        }\r",
								"\r",
								"        function decodeItem() {\r",
								"            var initialByte = readUint8();\r",
								"            var majorType = initialByte >> 5;\r",
								"            var additionalInformation = initialByte & 0x1f;\r",
								"            var i;\r",
								"            var length;\r",
								"\r",
								"            if (majorType === 7) {\r",
								"                switch (additionalInformation) {\r",
								"                    case 25:\r",
								"                        return readFloat16();\r",
								"                    case 26:\r",
								"                        return readFloat32();\r",
								"                    case 27:\r",
								"                        return readFloat64();\r",
								"                }\r",
								"            }\r",
								"\r",
								"            length = readLength(additionalInformation);\r",
								"            if (length < 0 && (majorType < 2 || 6 < majorType)) throw \"Invalid length\";\r",
								"\r",
								"            switch (majorType) {\r",
								"                case 0:\r",
								"                    return length;\r",
								"                case 1:\r",
								"                    return -1 - length;\r",
								"                case 2:\r",
								"                    if (length < 0) {\r",
								"                        var elements = [];\r",
								"                        var fullArrayLength = 0;\r",
								"                        while ((length = readIndefiniteStringLength(majorType)) >= 0) {\r",
								"                            fullArrayLength += length;\r",
								"                            elements.push(readArrayBuffer(length));\r",
								"                        }\r",
								"                        var fullArray = new Uint8Array(fullArrayLength);\r",
								"                        var fullArrayOffset = 0;\r",
								"                        for (i = 0; i < elements.length; ++i) {\r",
								"                            fullArray.set(elements[i], fullArrayOffset);\r",
								"                            fullArrayOffset += elements[i].length;\r",
								"                        }\r",
								"                        return fullArray;\r",
								"                    }\r",
								"                    return readArrayBuffer(length);\r",
								"                case 3:\r",
								"                    var utf16data = [];\r",
								"                    if (length < 0) {\r",
								"                        while ((length = readIndefiniteStringLength(majorType)) >= 0)\r",
								"                            appendUtf16Data(utf16data, length);\r",
								"                    } else\r",
								"                        appendUtf16Data(utf16data, length);\r",
								"                    return String.fromCharCode.apply(null, utf16data);\r",
								"                case 4:\r",
								"                    var retArray;\r",
								"                    if (length < 0) {\r",
								"                        retArray = [];\r",
								"                        while (!readBreak())\r",
								"                            retArray.push(decodeItem());\r",
								"                    } else {\r",
								"                        retArray = new Array(length);\r",
								"                        for (i = 0; i < length; ++i)\r",
								"                            retArray[i] = decodeItem();\r",
								"                    }\r",
								"                    return retArray;\r",
								"                case 5:\r",
								"                    var retObject = {};\r",
								"                    for (i = 0; i < length || length < 0 && !readBreak(); ++i) {\r",
								"                        var key = decodeItem();\r",
								"                        retObject[key] = decodeItem();\r",
								"                    }\r",
								"                    return retObject;\r",
								"                case 6:\r",
								"                    return tagger(decodeItem(), length);\r",
								"                case 7:\r",
								"                    switch (length) {\r",
								"                        case 20:\r",
								"                            return false;\r",
								"                        case 21:\r",
								"                            return true;\r",
								"                        case 22:\r",
								"                            return null;\r",
								"                        case 23:\r",
								"                            return undefined;\r",
								"                        default:\r",
								"                            return simpleValue(length);\r",
								"                    }\r",
								"            }\r",
								"        }\r",
								"\r",
								"        var ret = decodeItem();\r",
								"        if (offset !== data.byteLength)\r",
								"            throw \"Remaining bytes\";\r",
								"        return ret;\r",
								"    }\r",
								"\r",
								"    var obj = { encode: encode, decode: decode };\r",
								"    window.CBOR = obj;\r",
								"\r",
								"})(this);\r",
								""
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						},
						{
							"fieldNo": "7dde1e17-3273-4811-de56-7767ae8a36a3",
							"fieldName": "WCAG",
							"fieldParent": "00323fe3-7d1a-4da1-a549-5fc51fb40e6a",
							"fieldType": "neptune.Script",
							"script": [
								"==OBJECT STRING==",
								"// Based upon code from https://github.com/LordOfTheStack/UI5-WCAG-HELPER",
								"// Removed jQuery usage",
								"",
								"// MIT License",
								"",
								"// Copyright (c) 2020 Lord Phillip Smith",
								"",
								"// Permission is hereby granted, free of charge, to any person obtaining a copy",
								"// of this software and associated documentation files (the \"Software\"), to deal",
								"// in the Software without restriction, including without limitation the rights",
								"// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell",
								"// copies of the Software, and to permit persons to whom the Software is",
								"// furnished to do so, subject to the following conditions:",
								"",
								"// The above copyright notice and this permission notice shall be included in all",
								"// copies or substantial portions of the Software.",
								"",
								"// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR",
								"// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,",
								"// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE",
								"// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER",
								"// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,",
								"// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE",
								"// SOFTWARE.",
								"",
								"function applyWCAGFixes() {",
								"    const panelAfterRender = sap.m.Panel.prototype.onAfterRendering;",
								"    sap.m.Panel.prototype.onAfterRendering = function () {",
								"        const dom = this.getDomRef();",
								"        if (dom && !this.getHeaderText()) {",
								"            dom.removeAttribute('aria-labelledby');",
								"        }",
								"",
								"        panelAfterRender.apply(this);",
								"    }",
								"",
								"    const buttonAfterRender = sap.m.Button.prototype.onAfterRendering;",
								"    sap.m.Button.prototype.onAfterRendering = function () {",
								"        const dom = this.getDomRef();",
								"        if (!this.getText() && dom) {",
								"            const tooltip = dom.getAttribute(\"title\");",
								"",
								"            if (tooltip) {",
								"                dom.setAttribute(\"aria-label\", tooltip);",
								"            }",
								"        }",
								"",
								"        buttonAfterRender.apply(this);",
								"    }",
								"",
								"    const checkboxAfterRender = sap.m.CheckBox.prototype.onAfterRendering;",
								"    sap.m.CheckBox.prototype.onAfterRendering = function () {",
								"        const dom = this.getDomRef();",
								"",
								"        if (dom) {",
								"            const input = dom.getElementsByTagName('input')[0];",
								"            const ariaLabel = dom.getAttribute('aria-labelledby');",
								"",
								"            if (ariaLabel) {",
								"                const splitLabel = ariaLabel.split(' ');",
								"",
								"                if (splitLabel && splitLabel.length) {",
								"                    const formLabel = document.getElementById(splitLabel[0]);",
								"",
								"                    if (formLabel) {",
								"                        formLabel.setAttribute('for', input.id);",
								"                    }",
								"                }",
								"            }",
								"",
								"            if (input && ariaLabel) {",
								"                input.setAttribute('aria-labelledby', ariaLabel);",
								"            }",
								"",
								"            const text = this.getText();",
								"            if (input && !ariaLabel) {",
								"                input.setAttribute('aria-label', text);",
								"            }",
								"        }",
								"",
								"        checkboxAfterRender.apply(this);",
								"    }",
								"",
								"    const selectAfterRender = sap.m.Select.prototype.onAfterRendering;",
								"    sap.m.Select.prototype.onAfterRendering = function () {",
								"        const dom = this.getDomRef();",
								"",
								"        if (dom) {",
								"            const labels = dom.getElementsByTagName('label');",
								"",
								"            if (labels && labels.length) { ",
								"                for (const label of labels) {",
								"                    label.outerHTML = label.outerHTML.replaceAll('label', 'span');",
								"                }",
								"            }",
								"        }",
								"",
								"        selectAfterRender.apply(this);",
								"    }",
								"}"
							],
							"request": [],
							"response": [],
							"attributes": [],
							"data": []
						}
					]
				}
			]
		},
		{
			"fieldNo": 99998,
			"data": []
		}
	],
	"ver": "22.10.12.1325",
	"application": "dxptest_launchpad",
	"title": "",
	"description": "Planet 9 Launchpad ",
	"enableFileStorage": false,
	"enableManifest": false,
	"enableStylesheet": true,
	"enableObfuscate": false,
	"onlyRunLaunchpad": false,
	"disabled": false,
	"loadLaunchpadCode": null,
	"loadApplicationCode": null,
	"appType": "L",
	"ui5_m": true,
	"ui5_f": true,
	"ui5_table": false,
	"ui5_tnt": false,
	"ui5_uxap": false,
	"ui5_chart": false,
	"ui5_theme": "sap_fiori_3",
	"ui5_version": "1.71CDN",
	"ui5_language": "",
	"cus_theme": "",
	"css": [
		"==OBJECT STRING==",
		".sapUiLoSplitter.sapUiLoSplitterH>.sapUiLoSplitterBar.sapUiLoSplitterNoResize,",
		".sapUiLoSplitter.sapUiLoSplitterV>.sapUiLoSplitterBar.sapUiLoSplitterNoResize {",
		"    height: 0 !important;",
		"    width: 0 !important;",
		"}",
		"",
		".sapMBarPH {",
		"    display: inline-block !important;",
		"}",
		"",
		".sapMShellBrandingBar {",
		"    background-color: transparent",
		"}",
		"",
		".nepMobileTitle {",
		"    line-height: 48px;",
		"}",
		"",
		".nepFormInput {",
		"    max-width: 800px;",
		"    margin-left: auto;",
		"    margin-right: auto;",
		"}",
		"",
		"/* HELP LABLE */",
		"",
		".sapUiFormLblColon .sapUiFormElementLbl>.sapMLabel.nepLabelHelp:after {",
		"    font-family: 'SAP-icons';",
		"    content: \"\\e1c4\";",
		"    vertical-align: inherit;",
		"    margin-left: .325rem;",
		"}",
		"",
		".sapMLabel.nepLabelHelp {",
		"    pointer-events: none;",
		"    cursor: pointer;",
		"}",
		"",
		".sapMLabel.nepLabelHelp::after {",
		"    pointer-events: all;",
		"}",
		"",
		".sapUiFormResGridCont>.sapUiFormElementLbl>.nepLabelHelp.sapMLabel {",
		"    width: auto;",
		"}",
		"",
		".sapUiRespGridMedia-Std-Phone.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanS12)>.sapMLabel.nepLabelHelp,",
		".sapUiRespGridMedia-Std-Tablet.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanM12)>.sapMLabel.nepLabelHelp,",
		".sapUiRespGridMedia-Std-Desktop.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanL12)>.sapMLabel.nepLabelHelp,",
		".sapUiRespGridMedia-Std-LargeDesktop.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanXL12)>.sapMLabel.nepLabelHelp {",
		"    width: 100%;",
		"}",
		"",
		".sapUiRespGridMedia-Std-Phone.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanS12)>.sapMLabel.nepLabelHelp:after,",
		".sapUiRespGridMedia-Std-Tablet.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanM12)>.sapMLabel.nepLabelHelp:after,",
		".sapUiRespGridMedia-Std-Desktop.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanL12)>.sapMLabel.nepLabelHelp:after,",
		".sapUiRespGridMedia-Std-LargeDesktop.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanXL12)>.sapMLabel.nepLabelHelp:after {",
		"    content: \":\";",
		"    pointer-events: none;",
		"}",
		"",
		".sapUiRespGridMedia-Std-Phone.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanS12)>.sapMLabel.nepLabelHelp:before,",
		".sapUiRespGridMedia-Std-Tablet.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanM12)>.sapMLabel.nepLabelHelp:before,",
		".sapUiRespGridMedia-Std-Desktop.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanL12)>.sapMLabel.nepLabelHelp:before,",
		".sapUiRespGridMedia-Std-LargeDesktop.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanXL12)>.sapMLabel.nepLabelHelp:before {",
		"    font-family: 'SAP-icons';",
		"    content: \"\\e1c4\";",
		"    margin-right: .325rem;",
		"    vertical-align: inherit;",
		"    pointer-events: all;",
		"}",
		"",
		"/* HELP OBJECT HEADER */",
		"",
		".sapMOHROuter.nepLabelHelp {",
		"    pointer-events: none;",
		"}",
		"",
		".sapMOHROuter.nepLabelHelp .sapMOHRTitleText {",
		"    pointer-events: none;",
		"    cursor: pointer;",
		"}",
		"",
		".sapMOHROuter.nepLabelHelp .sapMOHRTitleText:after {",
		"    font-family: 'SAP-icons';",
		"    content: \"\\e1c4\";",
		"    margin-left: .325rem;",
		"    font-size: .875rem;",
		"    pointer-events: all;",
		"}",
		"",
		"/* DIALOG WITH OBJECTHEADER*/",
		"",
		".nepDialogWithObjHeader .sapMOHR {",
		"    margin-top: -.5rem;",
		"    padding-top: 0 !important;",
		"}",
		"",
		".nepDialogWithObjHeader .sapMSwt {",
		"    border-radius: 0;",
		"}",
		"",
		".nepDialogWithObjHeader.nepDocPop .sapMOHR {",
		"    margin-top: 0;",
		"    padding-top: 1.1rem !important;",
		"    border: 1px solid #dedede;",
		"    border-bottom: none;",
		"    border-radius: .25rem;",
		"}",
		"",
		".nepDialogWithObjHeader .sapContrastPlus.sapMOHR.sapMOHRBgTranslucent,",
		".sapContrastPlus .nepDialogWithObjHeader .sapMOHR.sapMOHRBgTranslucent {",
		"    background: #2f3c48;",
		"    box-shadow: none;",
		"}",
		"",
		".nepDialogWithObjHeader.sapUiSizeCompact .sapMBar {",
		"    height: 2.5rem;",
		"    border-radius: 4px 4px 0px 0px;",
		"}",
		"",
		".nepDialogWithObjHeader.sapUiSizeCompact.sapMDialog>.sapMDialogTitle,",
		".nepDialogWithObjHeader.sapUiSizeCompact .sapMDialog>.sapMDialogTitle {",
		"    height: 2.5rem;",
		"}",
		"",
		".nepDialogWithObjHeader .nepCloseBtn {",
		"    z-index: 9999;",
		"}",
		"",
		".nepDialogWithObjHeader .sapMOHRTitle h1,",
		".nepDialogWithObjHeader .sapMOHRIntro .sapMText,",
		".nepDialogWithObjHeader .sapMOHRIcon .sapUiIcon {",
		"    color: #cae4fb;",
		"}",
		"",
		".nepDialogWithObjHeader .nepStateSuccess .sapMOHRIcon .sapUiIcon,",
		".nepDialogWithObjHeader .nepStateSuccess .sapContrastPlus .sapMOHRIcon .sapUiIcon {",
		"    color: #abe2ab;",
		"}",
		"",
		".nepDialogWithObjHeader .nepStateWarning .sapMOHRIcon .sapUiIcon,",
		".nepDialogWithObjHeader .nepStateWarning .sapContrastPlus .sapMOHRIcon .sapUiIcon {",
		"    color: #e78c07;",
		"}",
		"",
		".nepDialogWithObjHeader .nepStateError .sapMOHRIcon .sapUiIcon,",
		".nepDialogWithObjHeader .nepStateError .sapContrastPlus .sapMOHRIcon .sapUiIcon {",
		"    color: #ff8888;",
		"}",
		"",
		".nepDialogWithObjHeader .sapMOHRIcon {",
		"    top: .675rem;",
		"}",
		"",
		".nepDialogWithObjHeader .sapMBtnIcon {",
		"    color: #cae4fb;",
		"}",
		"",
		".nepDialogWithObjHeader .nepStackedToolBar.sapMTB {",
		"    border-left: 1px solid #ddd;",
		"    background: #fff;",
		"}",
		"",
		".nepDialogWithObjHeader .sapUiLocalBusyIndicatorSizeMedium {",
		"    border-radius: .25rem;",
		"}",
		"",
		".nepDialogWithObjHeader .sapMITH {",
		"    border-bottom: none;",
		"}",
		"",
		".nepDialogSubObjHeader {",
		"    background: #2f3c48;",
		"    margin-top: -1rem;",
		"}",
		"",
		".nepDialogSubObjHeader .sapMText {",
		"    color: #cae4fb;",
		"    padding: 0 1rem 1rem 7rem;",
		"}",
		"",
		".nepDialogSubObjHeader .sapMDialog>.sapMDialogSection {",
		"    margin-top: -1rem;",
		"    height: calc(100% + 1rem);",
		"}",
		"",
		".nepSubMenu.sapMPopover .sapMPopoverCont {",
		"    border-radius: 0 !important;",
		"}",
		"",
		".nepSubMenu.sapMPopover {",
		"    border-radius: 0 !important;",
		"    box-shadow: rgba(0, 0, 0, 0.5) 5px 5px 10px 0px;",
		"    min-width: 200px;",
		"}",
		"",
		".nepSubMenu .sapMSLITitleOnly {",
		"    font-size: 0.875rem;",
		"}",
		"",
		".nepSubMenu .sapMLIB {",
		"    border-bottom: none;",
		"}",
		"",
		".nepFCard.sapFCard:not(.nepICCard) .sapFCardHeader:not(.nepFCardFooter) {",
		"    border-bottom: none;",
		"}",
		"",
		".nepTileApplicationPanel .sapMPanelContent {",
		"    overflow: hidden",
		"}",
		"",
		"html.sap-desktop .nepDialogSubObjHeader .sapContrastPlus .sapMIBar.sapMFooter-CTX,",
		"html.sap-desktop .nepDialogSubObjHeader .sapContrastPlus.sapMIBar.sapMFooter-CTX {",
		"    border-top-color: #2f3c48;",
		"}",
		"",
		".nepDialogSubObjHeader .sapContrastPlus.sapMOHR:not(.sapMOHRNoBorder),",
		".nepDialogSubObjHeader .sapContrastPlus .sapMOHR:not(.sapMOHRNoBorder) {",
		"    box-shadow: 0 0.125rem 0 0 #3f5161, inset 0 -0.125rem 0 0 #2F3C45;",
		"}",
		"",
		".nepDialogWithObjHeader.sapMDialog:not(.sapMDialogWithSubHeader)>header>.sapMIBar,",
		".nepDialogWithObjHeader.sapMDialog>header:last-of-type .sapMIBar {",
		"    box-shadow: none;",
		"    background-color: #2f3c48;",
		"    border-top: none;",
		"}",
		"",
		"/*NEPTUNE*/",
		"",
		".nepSideCollapsed {",
		"    padding-left: 68px;",
		"}",
		"",
		".nepSideExpanded {",
		"    padding-left: 300px;",
		"}",
		"",
		".nepSideMenu {",
		"    padding-left: 300px;",
		"}",
		"",
		".nepSideMenuCollapsed {",
		"    padding-left: 368px;",
		"}",
		"",
		".nepSideMenuExpanded {",
		"    padding-left: 600px;",
		"}",
		"",
		".nepSmallFont {",
		"    font-size: 12px !important;",
		"}",
		"",
		".nepLinks {",
		"    position: absolute;",
		"    bottom: 20px;",
		"}",
		"",
		".nepPanLinks .sapMTB {",
		"    border-bottom: none;",
		"    margin-top: 20px;",
		"}",
		"",
		"@media (max-height: 550px) {",
		"    .nepPanLinks {",
		"        display: none;",
		"    }",
		"}",
		"",
		".nepPanLogon {",
		"    border-bottom: none;",
		"    background-color: rgba(255, 255, 255, 0.6);",
		"    box-shadow: 0 0 1rem 0 rgb(250 250 250 / 30%);",
		"}",
		"",
		".nepPanLogon .sapMTB-Transparent-CTX.sapMTB {",
		"    background: transparent;",
		"}",
		"",
		".sapUiTheme-sap_fiori_3_dark .nepPanLogon,",
		".sapUiTheme-sap_horizon_dark .nepPanLogon {",
		"    background-color: rgba(0, 0, 0, 0.3);",
		"}",
		"",
		".nepPanLogonBorder {",
		"    border-radius: 15px;",
		"}",
		"",
		".nepFlexPhone .sapMFlexItem {",
		"    width: 100%;",
		"    height: 100%;",
		"}",
		"",
		".nepLinkNoBorder.sapMTBStandard {",
		"    border-bottom: none;",
		"}",
		"",
		".nepDocPage .sapMTabStrip {",
		"    padding-top: 0;",
		"    height: 44px;",
		"}",
		"",
		".nepDocPage .sapMTabContainer {",
		"    padding-top: 0;",
		"}",
		"",
		".nepDocPage {",
		"    overflow: hidden;",
		"}",
		"",
		".nepTopMenu {",
		"    min-height: auto;",
		"    border-radius: 0;",
		"}",
		"",
		".nepTopMenu .iconNetwork .sapMBtnCustomIcon {",
		"    color: red !important;",
		"}",
		"",
		"#AppCacheDiaSettings .sapMITBContent {",
		"    border-bottom: none !important;",
		"}",
		"",
		".sapMFT {",
		"    white-space: normal;",
		"}",
		"",
		".nepPage .sapMPageEnableScrolling {",
		"    scroll-behavior: smooth;",
		"}",
		"",
		".nepUserList .sapMLIB.sapMObjLItem {",
		"    margin-bottom: 10px;",
		"    border-radius: 10px;",
		"}",
		"",
		".nepUserList .sapMObjLIntro {",
		"    color: orange !important;",
		"}",
		"",
		".nepNavBarBoxTitle {",
		"    padding-left: 15px;",
		"}",
		"",
		".nepNavBarAction {",
		"    position: absolute;",
		"    top: -6px;",
		"}",
		"",
		".nepNavBarAction .sapMBtnInner {",
		"    color: white;",
		"    border-radius: 6px !important;",
		"}",
		"",
		".nepNavBarActionInverse .sapMBtnCustomIcon {",
		"    color: white !important;",
		"}",
		"",
		".nepNavBarActionInverse .sapMBtnInner {",
		"    color: white !important;",
		"}",
		"",
		".nepNavBarBoxIcon {",
		"    text-align: center;",
		"    min-width: 45px;",
		"}",
		"",
		".nepTopMenu .sapMPanelContent {",
		"    overflow: hidden;",
		"}",
		"",
		".nepTopMenu.sapMTBStandard {",
		"    height: 60px;",
		"}",
		"",
		".nepTopMenu .sapMTB-Transparent-CTX.sapMTB {",
		"    padding-left: 0;",
		"    /* height: 48px; */",
		"}",
		"",
		".nepTopMenu .sapMTBNewFlex>* {",
		"    -webkit-flex-shrink: unset;",
		"    flex-shrink: unset;",
		"    overflow: hidden;",
		"}",
		"",
		".nepTopMenu .sapMBtnIcon {",
		"    font-size: 1.375rem;",
		"}",
		"",
		".nepTopMenu .sapMBtnInner {",
		"    background-color: transparent;",
		"}",
		"",
		".nepTopMenu :not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive {",
		"    background-color: transparent !important;",
		"    border-color: transparent !important;",
		"}",
		"",
		".nepTopMenu .sapMImgFocusable:focus {",
		"    outline: unset;",
		"}",
		"",
		".nepTopMenuActive {",
		"    border-bottom: 4px solid orange;",
		"}",
		"",
		".nepIconActive {",
		"    border-left: 4px solid orange;",
		"}",
		"",
		"html.sap-desktop .nepTopMenuActive.sapMBtn:focus>.sapMFocusable {",
		"    outline: none;",
		"}",
		"",
		".nepNavBarTile {",
		"    cursor: pointer;",
		"}",
		"",
		".nepShell .sapUiGlobalBackgroundColor,",
		".nepShell .sapMShellGlobalInnerBackground {",
		"    background: transparent;",
		"}",
		"",
		".nepShell .sapMShellBG.sapUiGlobalBackgroundImage {",
		"    background: transparent;",
		"}",
		"",
		".nepListSetting .sapMLIB {",
		"    padding: 0 1rem 0 0.1rem;",
		"}",
		"",
		"/*OPENUI5*/",
		"",
		".sapMDialogScroll {",
		"    height: 100%;",
		"}",
		"",
		"html.sap-desktop .sapMBtn:focus>.sapMFocusable {",
		"    outline: none;",
		"}",
		"",
		"/*TILES*/",
		"",
		".nepTile .sapUiBlockCellTitle {",
		"    margin-bottom: 6px;",
		"}",
		"",
		".nepPopCards.sapMPopover {",
		"    background: transparent;",
		"}",
		"",
		".nepPopCards.sapMPopover .sapMPopoverCont {",
		"    background: transparent;",
		"}",
		"",
		".nepTileCardsPop {",
		"    margin: 0;",
		"    box-shadow: none;",
		"    border-radius: 0 6px 6px 0;",
		"    border-left: none;",
		"}",
		"",
		".nepTileCardsPop .sapUiBlockCellContent {",
		"    padding: 10px 10px 10px 4px;",
		"}",
		"",
		".nepTileCardsRunning {",
		"    margin: 4px 4px 4px 4px;",
		"    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);",
		"    border-radius: 6px;",
		"    border-left: 4px solid transparent;",
		"}",
		"",
		".nepTileCardsRunning .sapUiBlockCellContent {",
		"    padding: 10px 10px 10px 4px;",
		"}",
		"",
		".nepTileCards {",
		"    margin: 8px 8px 8px 8px;",
		"    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);",
		"    border-radius: 4px;",
		"}",
		"",
		".nepTileCards:hover {",
		"    box-shadow: 0 10px 24px 0 rgba(0, 0, 0, 0.2);",
		"}",
		"",
		".nepChartTile {",
		"    padding: 0 !important;",
		"}",
		"",
		".nepCatPanel .sapMTBStandard {",
		"    border-bottom: none;",
		"}",
		"",
		".nepCatPanel .sapMPanelContent {",
		"    padding-bottom: 10px;",
		"    padding-top: 0px;",
		"}",
		"",
		".nepCatPanel .sapMTB {",
		"    border-bottom: none;",
		"}",
		"",
		".nepCatPaddingImage {",
		"    padding-left: 8px;",
		"    padding-right: 8px;",
		"    padding-top: 8px;",
		"    margin-bottom: -4px;",
		"}",
		"",
		".nepCatNoPaddingImage {",
		"    margin-bottom: -4px;",
		"}",
		"",
		".nepTileCardsFixed10 {",
		"    flex: unset !important;",
		"    width: calc(10% - 1rem);",
		"    min-width: 250px;",
		"}",
		"",
		".nepTileCardsFixed20 {",
		"    flex: unset !important;",
		"    width: calc(20% - 1rem);",
		"    min-width: 250px;",
		"}",
		"",
		".nepTileCardsFixed25 {",
		"    flex: unset !important;",
		"    width: calc(25% - 1rem);",
		"    min-width: 250px;",
		"}",
		"",
		".nepTileCardsFixed30 {",
		"    flex: unset !important;",
		"    width: calc(30% - 1rem);",
		"    min-width: 250px;",
		"}",
		"",
		".nepTileCardsFixed40 {",
		"    flex: unset !important;",
		"    width: calc(40% - 1rem);",
		"    min-width: 250px;",
		"}",
		"",
		".nepTileCardsFixed50 {",
		"    flex: unset !important;",
		"    width: calc(50% - 1rem);",
		"    min-width: 250px;",
		"}",
		"",
		".nepTileCardsFixed60 {",
		"    flex: unset !important;",
		"    width: calc(60% - 1rem);",
		"    min-width: 250px;",
		"}",
		"",
		".nepTileCardsFixed70 {",
		"    flex: unset !important;",
		"    width: calc(70% - 1rem);",
		"    min-width: 250px;",
		"}",
		"",
		".nepTileCardsFixed75 {",
		"    flex: unset !important;",
		"    width: calc(75% - 1rem);",
		"    min-width: 250px;",
		"}",
		"",
		".nepTileCardsFixed80 {",
		"    flex: unset !important;",
		"    width: calc(80% - 1rem);",
		"    min-width: 250px;",
		"}",
		"",
		".nepTileCardsFixed90 {",
		"    flex: unset !important;",
		"    width: calc(90% - 1rem);",
		"    min-width: 250px;",
		"}",
		"",
		"/* SCROLLBAR */",
		"",
		"html.sap-desktop .sapContrast ::-webkit-scrollbar-thumb,",
		"html.sap-desktop .sapContrast ::-webkit-scrollbar-thumb:hover {",
		"    background-color: #346187;",
		"}",
		"",
		"html.sap-desktop ::-webkit-scrollbar {",
		"    width: 10px !important;",
		"    height: 10px !important;",
		"    background-color: transparent !important;",
		"}",
		"",
		"html.sap-desktop ::-webkit-scrollbar-corner {",
		"    background-color: transparent !important;",
		"}",
		"",
		"html.sap-desktop ::-webkit-scrollbar-thumb {",
		"    background-color: #6b7d8e !important;",
		"}",
		"",
		"html.sap-desktop ::-webkit-scrollbar-thumb:hover {",
		"    background-color: #6b7d8e !important;",
		"}",
		"",
		"html.sap-desktop:not(.sap-tablet) .sapUiTableVSb::-webkit-scrollbar-thumb,",
		"html.sap-desktop.sap-tablet .sapUiTableVSb::-webkit-scrollbar-thumb {",
		"    border-left: unset !important;",
		"    border-right: unset !important;",
		"}",
		"",
		"html.sap-desktop:not(.sap-tablet) .sapUiTableHSb::-webkit-scrollbar-thumb,",
		"html.sap-desktop.sap-tablet .sapUiTableHSb::-webkit-scrollbar-thumb {",
		"    border-top: unset !important;",
		"    border-bottom: unset !important;",
		"}",
		"",
		"/*PASSCODE APP*/",
		"",
		"#boxNumpadPanel .sapMBtn {",
		"    height: 4.6rem;",
		"    margin: 5px;",
		"}",
		"",
		"#butNumpadClear-inner {",
		"    padding-left: 0;",
		"    padding-right: 0;",
		"}",
		"",
		"#boxNumpadPanel .sapMPanelContent {",
		"    border-bottom: none;",
		"    background: transparent;",
		"    overflow: hidden;",
		"}",
		"",
		"#boxNumpad02 {",
		"    margin: auto;",
		"}",
		"",
		".numPad .sapMBtnInner {",
		"    border-top-left-radius: 3rem;",
		"    border-top-right-radius: 3rem;",
		"    border-bottom-right-radius: 3rem;",
		"    border-bottom-left-radius: 3rem;",
		"    height: 3.9rem;",
		"    min-width: 4rem;",
		"    border: none;",
		"    padding-top: .8rem;",
		"    font-size: 1.875rem;",
		"    background: rgba(0, 0, 0, 0.5);",
		"    color: #fff;",
		"    text-shadow: none;",
		"}",
		"",
		"#boxNumpadPanel .sapMBtnIcon {",
		"    color: #ffffff;",
		"    font-size: 1.875rem;",
		"}",
		"",
		"#boxNumpadPanel .sapMBtn:hover>.sapMBtnHoverable {",
		"    background-color: rgba(0, 0, 0, 0.5);",
		"}",
		"",
		"#boxNumpadPanel :not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive {",
		"    background-color: rgba(0, 0, 0, 0.5);",
		"}",
		"",
		"#boxNumpadPanel .sapMCbBg.sapMCbMarkChecked {",
		"    background: rgba(0, 0, 0, 0.5);",
		"}",
		"",
		"#boxNumpadPanel .sapMCbBg.sapMCbMarkChecked:before {",
		"    content: \"\";",
		"}",
		"",
		"#boxNumpadPanel .sapMCbBg {",
		"    background: #fff;",
		"    border: none;",
		"    border-top-left-radius: 1rem;",
		"    border-top-right-radius: 1rem;",
		"    border-bottom-right-radius: 1rem;",
		"    border-bottom-left-radius: 1rem;",
		"    -webkit-focus-ring-color: none;",
		"}",
		"",
		"#boxNumpadPanel .sapMCb {",
		"    padding: 0 0 0 2rem;",
		"}",
		"",
		"#boxNumpadPanel .sapMCbBgDis {",
		"    opacity: 1;",
		"}",
		"",
		".sapUiTheme-sap_fiori_3_dark .numPad .sapMBtnInner {",
		"    background: #29313a;",
		"}",
		"",
		".sapUiTheme-sap_fiori_3_dark #boxNumpadPanel .sapMCbBg.sapMCbMarkChecked {",
		"    background: #29313a;",
		"}",
		"",
		".animated {",
		"    -webkit-animation-duration: .9s;",
		"    -moz-animation-duration: .9s;",
		"    -o-animation-duration: .9s;",
		"    -ms-animation-duration: .9s;",
		"    animation-duration: .9s;",
		"    -webkit-animation-fill-mode: both;",
		"    -moz-animation-fill-mode: both;",
		"    -o-animation-fill-mode: both;",
		"    -ms-animation-fill-mode: both;",
		"    animation-fill-mode: both;",
		"}",
		"",
		".shake {",
		"    -webkit-animation-name: shake;",
		"    -moz-animation-name: shake;",
		"    -o-animation-name: shake;",
		"    -ms-animation-name: shake;",
		"    animation-name: shake;",
		"}",
		"",
		"@-webkit-keyframes shake {",
		"    0%,",
		"    100% {",
		"        -webkit-transform: translateX(0);",
		"        -moz-transform: translateX(0);",
		"        -o-transform: translateX(0);",
		"        -ms-transform: translateX(0);",
		"    }",
		"    10%,",
		"    30%,",
		"    50%,",
		"    70%,",
		"    90% {",
		"        -webkit-transform: translateX(-20px);",
		"        -moz-transform: translateX(-20px);",
		"        -o-transform: translateX(-20px);",
		"        -ms-transofmr: translateX(-20px);",
		"    }",
		"    20%,",
		"    40%,",
		"    60%,",
		"    80% {",
		"        -webkit-transform: translateX(20px);",
		"        -moz-transform: translateX(20px);",
		"        -o-transform: translateX(20px);",
		"        -ms-transform: translateX(20px);",
		"    }",
		"}",
		"",
		"@keyframes shake {",
		"    0%,",
		"    100% {",
		"        transform: translateX(0);",
		"    }",
		"    10%,",
		"    30%,",
		"    50%,",
		"    70%,",
		"    90% {",
		"        transform: translateX(-20px);",
		"    }",
		"    20%,",
		"    40%,",
		"    60%,",
		"    80% {",
		"        transform: translateX(20px);",
		"    }",
		"}",
		"",
		"/*NAVIGATION SIDEBAR*/",
		"",
		"@media only screen and (max-width:1600px) {",
		"    .nepNavPanel {",
		"        display: none",
		"    }",
		"}",
		"",
		".navHidden {",
		"    visibility: hidden;",
		"}",
		"",
		".nepNavPanel {",
		"    position: fixed;",
		"    height: 100%;",
		"    z-index: 11;",
		"    width: 200px;",
		"    right: 0px;",
		"    top: 48px;",
		"    transition-duration: 200ms;",
		"    transition-timing-function: linear",
		"}",
		"",
		".nepNavPanel.minified {",
		"    pointer-events: none",
		"}",
		"",
		".nepNavPanel.minified .nav-container {",
		"    pointer-events: auto;",
		"    width: 100px",
		"}",
		"",
		".nepNavPanel.minified .nav-in-page {",
		"    pointer-events: none",
		"}",
		"",
		".nepNavPanel.minified .nav-in-page .nav-link {",
		"    height: 4px;",
		"    opacity: 1",
		"}",
		"",
		".nepNavPanel.minified .nav-in-page .nav-link.active {",
		"    height: 4px",
		"}",
		"",
		".nepNavPanel.minified .nav-in-page .nav-link.active a {",
		"    transition-duration: 200ms;",
		"    transition-timing-function: linear;",
		"    font-weight: normal;",
		"    line-height: 1.1em;",
		"    font-size: 14px",
		"}",
		"",
		".nepNavPanel.minified .nav-in-page .nav-link.active a.show {",
		"    opacity: 1;",
		"    transition-duration: 200ms;",
		"    transition-timing-function: linear",
		"}",
		"",
		".nepNavPanel.minified .nav-in-page .nav-link a {",
		"    opacity: 0;",
		"    transition-duration: 200ms;",
		"    transition-timing-function: linear",
		"}",
		"",
		".nepNavPanel .nav-container {",
		"    height: 100%",
		"}",
		"",
		".nepNavPanel .nav-links {",
		"    display: inline-block;",
		"    width: 190px;",
		"    padding-left: 0px;",
		"}",
		"",
		".nepNavPanel.full-state {",
		"    background: linear-gradient(to left, rgba(0, 0, 0, 0.8), rgba(0, 0, 0, 0.3));",
		"    transition-duration: 200ms;",
		"    transition-timing-function: linear",
		"}",
		"",
		".nepNavPanel.full-state .nav-in-page .nav-link {",
		"    height: 26px;",
		"    opacity: 1",
		"}",
		"",
		".nepNavPanel.full-state .nav-in-page .nav-link.active {",
		"    height: 42px",
		"}",
		"",
		".nepNavPanel.full-state .nav-in-page .nav-link.active a {",
		"    font-weight: normal;",
		"    line-height: 1.1em;",
		"    font-size: 16px",
		"}",
		"",
		".nepNavPanel.full-state .nav-in-page .nav-link a {",
		"    display: block;",
		"    opacity: 1",
		"}",
		"",
		".nepNavPanel .nav-in-page {",
		"    width: 200px;",
		"    transform: translateY(50%);",
		"    position: absolute;",
		"    bottom: 50%",
		"}",
		"",
		".nepNavPanel .nav-in-page .nav-link {",
		"    padding: 0 0 0 10px;",
		"    cursor: pointer;",
		"    border-right: 4px solid orange;",
		"    height: 26px;",
		"    display: flex;",
		"    align-items: center;",
		"    margin-top: 8px;",
		"    margin-bottom: 8px;",
		"    transition-duration: 200ms;",
		"    transition-timing-function: linear;",
		"    opacity: 0",
		"}",
		"",
		".nepNavPanel .nav-in-page .nav-link.active a,",
		".nepNavPanel .nav-in-page .nav-link:hover a {",
		"    color: #fff;",
		"    line-height: 1.1em",
		"}",
		"",
		".nepNavPanel .nav-in-page .nav-link.active {",
		"    height: 42px",
		"}",
		"",
		".nepNavPanel .nav-in-page .nav-link.active a {",
		"    font-weight: normal;",
		"    line-height: 1.1em;",
		"    font-size: 16px",
		"}",
		"",
		".nepNavPanel .nav-in-page .nav-link.initial {",
		"    opacity: 1;",
		"    transition-duration: 1000ms;",
		"    transition-timing-function: linear",
		"}",
		"",
		".nepNavPanel .nav-in-page .nav-link a {",
		"    display: block;",
		"    font-weight: normal;",
		"    font-size: 14px;",
		"    line-height: 1.1em;",
		"    color: rgba(255, 255, 255, 0.7);",
		"    text-decoration: none;",
		"}",
		"",
		"/* P8 */",
		"",
		"html[data-sap-ui-animation='on'] .nepCatPanel .sapMPanelContent {",
		"    transform: none;",
		"}",
		"",
		".nepCatPanel.nepCatTitleLayoutTitle.sapMPanel {",
		"    min-height: 60px;",
		"}",
		"",
		".nepCatPanel.nepCatTitleLayoutTitle.nepCatTitleLayoutSubTitle.sapMPanel {",
		"    min-height: 82px;",
		"}",
		"",
		".nepCatPanel .sapMPanelContent {",
		"    padding-bottom: 0;",
		"    padding-top: 0;",
		"}",
		"",
		".nepCatPanel .sapMTB {",
		"    border-bottom: none;",
		"}",
		"",
		".nepCatTitleLayout {",
		"    /* padding-left: 10px; */",
		"    /* padding-right: 10px; */",
		"    position: absolute;",
		"    top: 0;",
		"    left: 1rem;",
		"}",
		"",
		".nepCatTitle.sapMTitle {",
		"    font-size: 1.125rem;",
		"    color: #346187;",
		"    text-shadow: none;",
		"    font-weight: bold;",
		"    padding-top: 1.25rem;",
		"}",
		"",
		".nepCatSubTitle.sapMTitle {",
		"    color: #346187;",
		"    text-shadow: none;",
		"}",
		"",
		"html[dir=\"rtl\"] .nepCatTitleLayout {",
		"    right: 1rem;",
		"}",
		"",
		"html[dir=\"rtl\"] .nepCatPanel .sapMPanelContent {",
		"    background-position: left;",
		"}",
		"",
		"/* P8 COPY */",
		"",
		":root {",
		"    --xsmall: 380px;",
		"    --small: 680px;",
		"    --medium: 980px;",
		"    --large: 1280px;",
		"    --xlarge: 1580px;",
		"    --xxlarge: 1880px;",
		"    --xxxlarge: 2360px;",
		"    --gridGap: 0px;",
		"    --gridHeight: 170px;",
		"    --grid1: 100%;",
		"    --grid2: 50%;",
		"    --grid3: 33.3333%;",
		"    --grid4: 25%;",
		"    --grid5: 20%;",
		"    --grid6: 16.6666%;",
		"    --grid8: 12.5%;",
		"    --grid10: 10%;",
		"    --grid12: 8.3333%;",
		"    --grid14: 7.1428%;",
		"    --cardMargin: .25rem;",
		"    --white: #fff;",
		"    --lightGreyPrimary: #dedede;",
		"    --lightGreySecondary: #ccc;",
		"    --darkGreyPrimary: #666;",
		"    --darkGreySecondary: #888;",
		"    --lightPrimaryColor: #fafafa;",
		"    --lightSecondaryColor: #d3d7d9;",
		"    --darkPrimaryColor: #333;",
		"    --darkSecondaryColor: #444;",
		"    --darkThemePrimaryBackground: #1C2228;",
		"    --darkThemeSecondaryBackground: #29313a;",
		"    --lightThemeNotification: #dd0000;",
		"    --darkThemeNotification: #dd0000;",
		"    --lightThemeRequired: #c14646;",
		"    --darkThemeRequired: #c14646;",
		"    --lightActiveMenuColor: var(--lightSecondaryColor);",
		"    --darkActiveMenuColor: var(--darkSecondaryColor);",
		"    --quartzDarkPrimary: #91c8f6;",
		"}",
		"",
		".nepDialogWithObjHeader.sapMDialog {",
		"    transform: none;",
		"}",
		"",
		".nepBtnIcon .sapMBtnContent {",
		"    margin-left: .5rem;",
		"}",
		"",
		".nepLayout .nepFCard.sapFCard .nepFCardBody.sapFCardHeader {",
		"    padding: 0;",
		"    /*clip-path: initial !important;*/",
		"    box-shadow: none;",
		"}",
		"",
		".nepFCardBody.sapFCardHeader .sapFCardIcon.sapFAvatar {",
		"    justify-content: flex-end;",
		"}",
		"",
		".nepSubMenu .sapMBtn .sapMBtnInner {",
		"    justify-content: flex-start;",
		"}",
		"",
		"html[dir=\"rtl\"] .nepTreeItemAction .sapMSTIIcon {",
		"    margin: 0.5rem 0 0.5rem 0.75rem;",
		"}",
		"",
		".nepNavBarContent,",
		".nepMainBar {",
		"    position: relative;",
		"    z-index: 89;",
		"}",
		"",
		".nepTreeCategory .sapMTreeItemBaseExpander.sapUiIcon:before {",
		"    content: \"\\f0da\";",
		"}",
		"",
		".nepTreeCategory li[aria-expanded=\"true\"] .sapMTreeItemBaseExpander.sapUiIcon:before {",
		"    content: \"\\f0d7\";",
		"}",
		"",
		".nepSideAppTab.sapMTabContainer {",
		"    padding-top: 0;",
		"}",
		"",
		".nepLogonContainer {",
		"    height: 75%;",
		"}",
		"",
		".nepLogonLayout {",
		"    padding: 1rem;",
		"    border-radius: .5rem;",
		"    margin: auto;",
		"}",
		"",
		"@media (max-width: 420px) {",
		"    .nepLogonContainer {",
		"        height: auto;",
		"    }",
		"    .nepLogonLayout {",
		"        padding: 0;",
		"        border-radius: 0;",
		"        margin: auto;",
		"    }",
		"}",
		"",
		".nepLaunchpadOverflowContainer {",
		"    position: absolute;",
		"    top: 0;",
		"    width: 0;",
		"    background-color: rgba(0, 0, 0, 0.4);",
		"    z-index: 97;",
		"}",
		"",
		".nepLaunchpadOverflowClickArea {",
		"    position: absolute;",
		"    top: 0;",
		"    z-index: 98;",
		"    bottom: 0;",
		"}",
		"",
		"html[dir=\"ltr\"] .nepLaunchpadOverflowClickArea {",
		"    right: 0;",
		"    left: 300px;",
		"}",
		"",
		"html[dir=\"rtl\"] .nepLaunchpadOverflowClickArea {",
		"    right: 300px;",
		"    left: 0;",
		"}",
		"",
		".nepLaunchpadMenuOverflow {",
		"    position: absolute;",
		"    top: 0;",
		"    width: 300px;",
		"    height: 100%;",
		"    z-index: 99;",
		"}",
		"",
		"html[dir=\"ltr\"] .nepLaunchpadMenuOverflow {",
		"    left: -300px;",
		"}",
		"",
		"html[dir=\"rtl\"] .nepLaunchpadMenuOverflow {",
		"    right: -300px;",
		"}",
		"",
		"html[dir=\"ltr\"] .nepLaunchpadMenuOverflowOpen {",
		"    left: 0;",
		"}",
		"",
		"html[dir=\"rtl\"] .nepLaunchpadMenuOverflowOpen {",
		"    right: 0;",
		"}",
		"",
		".nepLaunchpadSettingsContainer {",
		"    position: absolute;",
		"    top: 0;",
		"    right: 0;",
		"    width: 0;",
		"    background-color: rgba(0, 0, 0, 0.4);",
		"    z-index: 97;",
		"}",
		"",
		".nepLaunchpadSettingsClickArea {",
		"    position: absolute;",
		"    top: 0;",
		"    z-index: 98;",
		"    bottom: 0;",
		"}",
		"",
		"html[dir=\"ltr\"] .nepLaunchpadSettingsClickArea {",
		"    right: 300px;",
		"    left: 0;",
		"}",
		"",
		"html[dir=\"rtl\"] .nepLaunchpadSettingsClickArea {",
		"    right: 0;",
		"    left: 300px;",
		"}",
		"",
		".nepLaunchpadMenuSettings {",
		"    position: absolute;",
		"    top: 0;",
		"    /*right: -300px;*/",
		"    width: 300px;",
		"    height: 100%;",
		"    z-index: 99;",
		"    /*-webkit-transition: all .3s ease-out;*/",
		"    /*-moz-transition: all .3s ease-out;*/",
		"    /*-o-transition: all .3s ease-out;*/",
		"    /*transition: all .3s ease-out;*/",
		"}",
		"",
		"html[dir=\"ltr\"] .nepLaunchpadMenuSettings {",
		"    right: -300px;",
		"}",
		"",
		"html[dir=\"rtl\"] .nepLaunchpadMenuSettings {",
		"    left: -300px;",
		"    display: none;",
		"}",
		"",
		"html[dir=\"ltr\"] .nepLaunchpadMenuSettingsOpen {",
		"    right: 0;",
		"}",
		"",
		"html[dir=\"rtl\"] .nepLaunchpadMenuSettingsOpen {",
		"    left: 0;",
		"}",
		"",
		".nepLaunchpadContentSideApp {",
		"    position: absolute;",
		"    top: 0;",
		"    right: 0;",
		"    height: 100%;",
		"    border-left: 1px solid #d9d9d9;",
		"    border-top: 1px solid #d9d9d9;",
		"}",
		"",
		".nepThemeDark .nepLaunchpadContentSideApp {",
		"    border-left: 1px solid #4b596a;",
		"    border-top: 1px solid #4b596a;",
		"}",
		"",
		".nepHeaderSearch .sapMInput {",
		"    padding-right: .5rem;",
		"}",
		"",
		".nepFCard .sapMListBGTranslucent .sapMListTblHeader,",
		".nepFCard .sapMListBGTranslucent .sapMListTblFooter,",
		".nepFCard .sapMListTblHeader>.sapMTableTH {",
		"    background-color: transparent;",
		"}",
		"",
		".nepGridMany .nepTileSmall .sapFCardHeaderSideIndicators .sapFCardHeaderSideIndicator:last-child {",
		"    display: none;",
		"}",
		"",
		".nepFCard.sapFCard.nepICCard {",
		"    height: 100%;",
		"}",
		"",
		".nepFCard.sapFCard.nepICCardActionBottom {",
		"    min-height: calc(3rem - 2px);",
		"    height: calc(3rem - 2px);",
		"    clip-path: inset(0 -5px -5px -5px);",
		"    clip-path: inset(0 -5px -5px -5px);",
		"    border-top-left-radius: 0;",
		"    border-top-right-radius: 0;",
		"}",
		"",
		".nepFCard.sapFCard.nepICCardActionTop {",
		"    clip-path: inset(-5px -5px 0 -5px);",
		"    border-bottom-left-radius: 0;",
		"    border-bottom-right-radius: 0;",
		"    height: 100%;",
		"}",
		"",
		".nepFCardContainer,",
		".nepTileContainer {",
		"    padding: .25rem;",
		"    padding: var(--cardMargin);",
		"    min-height: var(--gridHeight);",
		"}",
		"",
		".nepFCardContainer.nepFCardPlain,",
		".nepTileContainer.nepTilePlain {",
		"    padding: 0;",
		"}",
		"",
		".nepFCardContainer>.sapMFlexItem,",
		".nepFCardBody>.sapMFlexItem {",
		"    width: 100%;",
		"}",
		"",
		".nepICCardContainer>.sapMFlexItem {",
		"    height: 100%;",
		"}",
		"",
		".nepLaunchpadContent {",
		"    height: 100%;",
		"}",
		"",
		".nepLaunchpadContentMain {",
		"    position: absolute;",
		"    left: 0;",
		"    right: 0;",
		"    width: 100%;",
		"    height: 100%;",
		"}",
		"",
		".nepLaunchpadShell {",
		"    position: relative;",
		"}",
		"",
		".nepLaunchpadMenuOverflow>.sapMFlexItem:last-child,",
		".nepLaunchpadContentMenu>.sapMFlexItem,",
		".nepLaunchpadContentNavigator>.sapMFlexItem,",
		".nepLaunchpadContentMain>.sapMFlexItem,",
		".nepLaunchpadContentSideApp>.sapMFlexItem {",
		"    height: 100% !important;",
		"}",
		"",
		".nepFCard.sapFCard .sapFCardHeader {",
		"    box-shadow: none;",
		"}",
		"",
		".nepFCard.sapFCard .sapFCardHeader.nepFCardFooter {",
		"    padding: 0;",
		"    width: 100%;",
		"    border-bottom: none;",
		"}",
		"",
		".nepFCard.sapFCard.nepTileClickable .sapFCardHeader.nepFCardFooter {",
		"    border-bottom: none;",
		"}",
		"",
		".nepFCard.sapFCard .sapFCardHeader.nepFCardFooter .sapFCardStatus {",
		"    padding: .25rem 1rem .25rem 0;",
		"    margin: 0;",
		"}",
		"",
		"html[dir=\"rtl\"] .nepFCard.sapFCard .sapFCardHeader.nepFCardFooter .sapFCardStatus {",
		"    padding: .25rem 0 .25rem 1rem;",
		"}",
		"",
		".nepFCard.sapFCard .sapFCardHeader {",
		"    background-color: transparent;",
		"}",
		"",
		".nepFCard.sapFCard .sapFCardContent {",
		"    flex: 1;",
		"}",
		"",
		".nepFCard.sapFCard {",
		"    height: 100%;",
		"    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);",
		"}",
		"",
		".nepFCard.sapFCard.sapFCardFitContent {",
		"    height: auto;",
		"}",
		"",
		".nepFCardInlineImage {",
		"    margin-bottom: .5rem;",
		"}",
		"",
		".nepFCard.sapFCard .sapFCardHeader.nepFCardFooter {",
		"    clip-path: inset(1px 0 -5px);",
		"}",
		"",
		".nepFCard.sapFCard .sapFCardHeader.nepFCardFooter,",
		".nepFCard.sapFCard .sapFCardHeader.nepFCardFooter.sapFCardNumericHeader .sapFCardHeaderIndicators {",
		"    flex-direction: row-reverse;",
		"}",
		"",
		".nepFCard.sapFCard .nepCardAction {",
		"    padding: .25rem 0.85rem;",
		"    min-height: 2.5rem;",
		"}",
		"",
		".nepFCard .sapSuiteRMCCircleBackground,",
		".nepTile .sapSuiteRMCCircleBackground {",
		"    stroke: transparent;",
		"    fill: transparent;",
		"}",
		"",
		".nepFCard .sapSuiteUiMicroChartNoData {",
		"    border-radius: .5rem;",
		"}",
		"",
		"html.sapUiMedia-Std-Phone .nepFCard .sapSuiteCpMCChartContent.sapSuiteCpMCSizeAuto,",
		".nepFCard .sapSuiteCpMCChartContent.sapSuiteCpMCSizeS {",
		"    height: auto;",
		"}",
		"",
		".nepTileClickable .sapFCardHeaderTitle,",
		".nepTileClickable .sapFCardSubtitle {",
		"    pointer-events: none;",
		"}",
		"",
		".nepTileClickable {",
		"    cursor: pointer;",
		"}",
		"",
		".nepICCard .sapMLIB {",
		"    background: transparent;",
		"}",
		"",
		".nepFCard .sapFCardHeaderSINumber span:first-child {",
		"    margin-right: .125rem;",
		"}",
		"",
		"html.sap-desktop .sapMDialog .sapMShellAppWidthLimited .sapMShellCentralBox {",
		"    width: 100%;",
		"    margin-left: auto;",
		"    left: auto;",
		"}",
		"",
		"@media (min-width: 1280px) {",
		"    html.sap-desktop .nepShell.sapMShellAppWidthLimited .sapMShellCentralBox {",
		"        width: 100%;",
		"        left: auto;",
		"        right: auto;",
		"        /* max-width: var(--large); */",
		"        margin: 0 auto 0 auto;",
		"    }",
		"}",
		"",
		"/* DIALOG WITH OBJECTHEADER */",
		"",
		".nepDialogWithObjHeader .sapMOHR {",
		"    padding-top: 0 !important;",
		"}",
		"",
		".nepDialogWithObjHeader.sapUiSizeCompact .sapMBar {",
		"    height: 2.5rem;",
		"    border-radius: 4px 4px 0px 0px;",
		"}",
		"",
		".nepDialogWithObjHeader.sapUiSizeCompact.sapMDialog>.sapMDialogTitle,",
		".nepDialogWithObjHeader.sapUiSizeCompact .sapMDialog>.sapMDialogTitle {",
		"    height: 2.5rem;",
		"}",
		"",
		".nepDialogWithObjHeader .nepCloseBtn {",
		"    z-index: 9999;",
		"}",
		"",
		".nepDialogWithObjHeader .sapMOHRIcon {",
		"    top: .675rem;",
		"}",
		"",
		".nepDialogWithObjHeader .sapUiLocalBusyIndicatorSizeMedium {",
		"    border-radius: .25rem;",
		"}",
		"",
		".nepDialogSubObjHeader {",
		"    margin-top: -1rem;",
		"}",
		"",
		".nepDialogSubObjHeader .sapMText {",
		"    padding: 0 1rem 1rem 7rem;",
		"}",
		"",
		".nepDialogSubObjHeader .sapMDialog>.sapMDialogSection {",
		"    margin-top: -1rem;",
		"    height: calc(100% + 1rem);",
		"}",
		"",
		".nepDialogWithObjHeader.sapMDialog:not(.sapMDialogWithSubHeader)>header>.sapMIBar,",
		".nepDialogWithObjHeader.sapMDialog>header:last-of-type .sapMIBar,",
		".nepPopover.sapMDialog:not(.sapMDialogWithSubHeader)>header>.sapMIBar,",
		".nepPopover.sapMDialog>header:last-of-type .sapMIBar {",
		"    box-shadow: none;",
		"}",
		"",
		".nepNotificationImage {",
		"    max-width: 2.25rem;",
		"    max-height: 2.25rem;",
		"}",
		"",
		"@media (max-width: 680px) {",
		"    .nepClientInstall {",
		"        flex-direction: column;",
		"    }",
		"}",
		"",
		".nepClientInstallContainer {",
		"    padding: .5rem;",
		"}",
		"",
		".nepClientInstallLayout {",
		"    padding: 1rem;",
		"    border-radius: .5rem;",
		"    width: 100%;",
		"}",
		"",
		".nepAppIcon {",
		"    border-radius: 2rem;",
		"}",
		"",
		".nepOverflowMenu .sapMLIB,",
		".nepMainBar .sapMLIB {",
		"    border: none;",
		"}",
		"",
		".nepOverflowMenu .sapMBtn:hover>.sapMBtnHoverable,",
		".nepMainBar .sapMBtn:hover>.sapMBtnHoverable {",
		"    background-color: transparent;",
		"    border-color: transparent;",
		"}",
		"",
		".nepOverflowLogo {",
		"    margin-top: -.5rem;",
		"}",
		"",
		".nepOverflowMenu .sapMBarLeft,",
		".nepMainBar .sapMBarLeft {",
		"    padding: 0;",
		"    height: 2.75rem !important;",
		"}",
		"",
		".nepOverflowMenu.sapMDialog>header.sapMDialogTitle .sapMImg {",
		"    margin-right: 0;",
		"    width: auto;",
		"}",
		"",
		".nepMenuBtnHidden {",
		"    position: relative;",
		"    top: 48px;",
		"}",
		"",
		".nepOpenAppsBtn {",
		"    margin-left: .3125rem;",
		"}",
		"",
		".sapMBtn.nepOpenAppsBtn.nepOpenAppsBtnItem .sapMBtnContent {",
		"    max-width: 200px;",
		"}",
		"",
		".sapUiSizeCompact .nepOpenAppsBtn {",
		"    margin-left: 0;",
		"}",
		"",
		".nepOpenAppsBtnItem {",
		"    margin-left: 2.4375rem;",
		"}",
		"",
		".sapUiSizeCompact .nepOpenAppsBtnItem {",
		"    margin-left: 1.675rem;",
		"}",
		"",
		".nepOpenAppsAlone .nepOpenAppsBtn {",
		"    margin-left: 0;",
		"}",
		"",
		".nepOpenAppsBtn .sapMBtnInner {",
		"    border: none;",
		"    background-color: transparent;",
		"}",
		"",
		".nepOpenAppsBtn .sapMBtnContent {",
		"    padding-left: .5rem;",
		"}",
		"",
		".sapUiSizeCompact .nepOpenAppsBtn .sapMBtnContent {",
		"    padding-left: .325rem;",
		"}",
		"",
		".nepOpenAppsClose.sapUiIcon {",
		"    margin-right: 1rem;",
		"    font-size: 1rem !important;",
		"}",
		"",
		".nepOverflowMenu .sapMBtnInner,",
		".nepMainBar .sapMBtnInner {",
		"    border: none;",
		"    background-color: transparent;",
		"}",
		"",
		".nepOverflowMenu .headerMobileMenu .sapMBtnIcon,",
		".nepMainBar .headerMobileMenu .sapMBtnIcon {",
		"    font-size: 1.375rem;",
		"}",
		"",
		".nepOverflowMenu .sapUiSizeCompact .nepOpenAppsBtn .sapMBtnIcon,",
		".nepMainBar .sapUiSizeCompact .nepOpenAppsBtn .sapMBtnIcon {",
		"    font-size: 1.125rem;",
		"    padding-left: .5rem;",
		"}",
		"",
		".nepOverflowMenu .sapUiSizeCompact .nepOpenAppsBtn.nepOpenAppsBtnItem .sapMBtnIcon,",
		".nepMainBar .sapUiSizeCompact .nepOpenAppsBtn.nepOpenAppsBtnItem .sapMBtnIcon {",
		"    font-size: 1rem;",
		"}",
		"",
		".nepOverflowMenu.sapUiPopupWithPadding .sapMDialogScrollCont {",
		"    padding: 0;",
		"}",
		"",
		".nepTopMenuIconContainerDesktop,",
		".nepTopMenuIconContainerMobile {",
		"    min-width: 48px;",
		"}",
		"",
		".nepTopMenuIconContainerMobile {",
		"    max-width: 48px;",
		"}",
		"",
		".nepTopMenuIconDesktop,",
		".nepTopMenuIconMobile {",
		"    max-height: 36px;",
		"}",
		"",
		".nepUserActionText.sapMText {",
		"    text-align: left;",
		"    margin: .5rem 0 .5rem 1rem;",
		"    font-weight: bold;",
		"    font-size: 1rem;",
		"}",
		"",
		".nepTopMenuIcon.sapMImg.sapMNoImg {",
		"    visibility: visible;",
		"}",
		"",
		"@media (max-width: 800px) {",
		"    .nepUserButton .sapMBtnContent {",
		"        display: none;",
		"    }",
		"}",
		"",
		".nepTile .sapMNCIconImage {",
		"    margin-top: .75rem;",
		"}",
		"",
		".nepFeed,",
		".nepFeed .sapMText {",
		"    cursor: grab;",
		"}",
		"",
		".nepTileContentContainer {",
		"    width: 100%;",
		"}",
		"",
		".nepAppCacheUser .sapMLIB.sapMObjLItem {",
		"    margin-bottom: 5px;",
		"    border-radius: 10px;",
		"}",
		"",
		".nepAppCacheUser .sapMLIBFocusable:focus {",
		"    outline: none;",
		"}",
		"",
		".nepSelectUser {",
		"    padding: 0 .5rem;",
		"    border-radius: 0.25rem;",
		"    border-width: 1px;",
		"    border-style: solid;",
		"}",
		"",
		".nepSelectUserBtn.sapMBtn,",
		".nepSelectUserBtn .sapMBtnInner.sapMBtnText {",
		"    padding: 0;",
		"}",
		"",
		".nepSelectUserBtn .sapMBtnInner {",
		"    height: 3rem;",
		"}",
		"",
		".nepSelectUserBtn .sapMBtnContent {",
		"    line-height: 2.875rem;",
		"}",
		"",
		"/* CHART FIX */",
		"",
		".sapSuiteRMC.sapSuiteRMCSizeResponsive {",
		"    max-height: 4.75rem;",
		"    max-width: 4.75rem;",
		"}",
		"",
		".nepMinimized .sapMTextLineClamp,",
		".nepMinimized .sapMOHRTitleTextWrappable {",
		"    white-space: nowrap;",
		"    text-overflow: ellipsis;",
		"    display: block;",
		"}",
		"",
		".sapMNC {",
		"    width: 100%;",
		"}",
		"",
		".nepHiddenItem {",
		"    opacity: .25;",
		"    pointer-events: none;",
		"}",
		"",
		".nepHiddenItem .sapMLIBIconDel {",
		"    opacity: 0;",
		"    pointer-events: none;",
		"}",
		"",
		"/* HELP LABLE */",
		"",
		".sapUiFormLblColon .sapUiFormElementLbl>.sapMLabel.nepLabelHelp:after {",
		"    font-family: 'SAP-icons';",
		"    content: \"\\e1c4\";",
		"    vertical-align: inherit;",
		"    margin-left: .325rem;",
		"}",
		"",
		".sapMLabel.nepLabelHelp {",
		"    pointer-events: none;",
		"    cursor: pointer;",
		"}",
		"",
		".sapMLabel.nepLabelHelp::after {",
		"    pointer-events: all;",
		"}",
		"",
		".sapUiFormResGridCont>.sapUiFormElementLbl>.nepLabelHelp.sapMLabel {",
		"    width: auto;",
		"}",
		"",
		".sapUiRespGridMedia-Std-Phone.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanS12)>.sapMLabel.nepLabelHelp,",
		".sapUiRespGridMedia-Std-Tablet.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanM12)>.sapMLabel.nepLabelHelp,",
		".sapUiRespGridMedia-Std-Desktop.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanL12)>.sapMLabel.nepLabelHelp,",
		".sapUiRespGridMedia-Std-LargeDesktop.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanXL12)>.sapMLabel.nepLabelHelp {",
		"    width: 100%;",
		"}",
		"",
		".sapUiRespGridMedia-Std-Phone.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanS12)>.sapMLabel.nepLabelHelp:after,",
		".sapUiRespGridMedia-Std-Tablet.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanM12)>.sapMLabel.nepLabelHelp:after,",
		".sapUiRespGridMedia-Std-Desktop.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanL12)>.sapMLabel.nepLabelHelp:after,",
		".sapUiRespGridMedia-Std-LargeDesktop.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanXL12)>.sapMLabel.nepLabelHelp:after {",
		"    content: \":\";",
		"    pointer-events: none;",
		"}",
		"",
		".sapUiRespGridMedia-Std-Phone.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanS12)>.sapMLabel.nepLabelHelp:before,",
		".sapUiRespGridMedia-Std-Tablet.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanM12)>.sapMLabel.nepLabelHelp:before,",
		".sapUiRespGridMedia-Std-Desktop.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanL12)>.sapMLabel.nepLabelHelp:before,",
		".sapUiRespGridMedia-Std-LargeDesktop.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanXL12)>.sapMLabel.nepLabelHelp:before {",
		"    font-family: 'SAP-icons';",
		"    content: \"\\e1c4\";",
		"    margin-right: .325rem;",
		"    vertical-align: inherit;",
		"    pointer-events: all;",
		"}",
		"",
		".sapUiRespGridMedia-Std-Phone.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanS12)>.sapMLabel.nepLabelHelp:before,",
		".sapUiRespGridMedia-Std-Tablet.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanM12)>.sapMLabel.nepLabelHelp:before,",
		".sapUiRespGridMedia-Std-Desktop.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanL12)>.sapMLabel.nepLabelHelp:before,",
		".sapUiRespGridMedia-Std-LargeDesktop.sapUiFormResGridCont>.sapUiFormElementLbl:not(.sapUiRespGridSpanXL12)>.sapMLabel.nepLabelHelp:before {",
		"    font-family: 'SAP-icons';",
		"    content: \"\\e1c4\";",
		"    margin-right: .325rem;",
		"    vertical-align: inherit;",
		"    pointer-events: all;",
		"}",
		"",
		".sapMLabelRequired.nepLabelHelp:before {",
		"    content: inherit;",
		"    font-size: inherit;",
		"    font-weight: inherit;",
		"    position: inherit;",
		"    vertical-align: inherit;",
		"    line-height: inherit;",
		"}",
		"",
		"/* SCROLLBAR COLOR */",
		"",
		"html.sap-desktop.nepThemeLight ::-webkit-scrollbar-thumb,",
		"html.sap-desktop.nepThemeLight ::-webkit-scrollbar-thumb:hover {",
		"    background-color: var(--lightGreySecondary);",
		"}",
		"",
		"html.sap-desktop.nepThemeDark ::-webkit-scrollbar-thumb,",
		"html.sap-desktop.nepThemeDark ::-webkit-scrollbar-thumb:hover {",
		"    background-color: var(--darkThemeSecondaryBackground);",
		"}",
		"",
		"/* BACKGROUND COLOR */",
		"",
		".nepThemeLight .nepTopMenu {",
		"    background: var(--white);",
		"}",
		"",
		".nepThemeDark .nepTopMenu {",
		"    background: var(--darkThemePrimaryBackground);",
		"    border-radius: 0;",
		"}",
		"",
		".nepThemeLight .nepNavBarContent {",
		"    background: var(--white);",
		"}",
		"",
		".nepThemeDark .nepNavBarContent {",
		"    background: var(--darkThemeSecondaryBackground);",
		"}",
		"",
		".nepThemeLight .nepMainBar {",
		"    background: var(--white);",
		"}",
		"",
		".nepThemeDark .nepMainBar {",
		"    background: var(--darkThemeSecondaryBackground);",
		"}",
		"",
		".nepThemeLight .nepLayoutOpenApps {",
		"    background-color: var(--white);",
		"}",
		"",
		".nepThemeDark .nepLayoutOpenApps {",
		"    background-color: var(--darkThemeSecondaryBackground);",
		"}",
		"",
		".nepThemeLight .nepTopMenu .nepNotificationButton span.sapMBtnInner:hover {",
		"    background-color: var(--lightThemeNotification);",
		"}",
		"",
		".nepThemeDark .nepTopMenu .nepNotificationButton span.sapMBtnInner:hover {",
		"    background-color: var(--darkThemeNotification);",
		"}",
		"",
		".nepThemeLight .nepSelectUser {",
		"    background-color: var(--white);",
		"}",
		"",
		".nepThemeDark .nepSelectUser {",
		"    background-color: var(--darkThemeSecondaryBackground);",
		"}",
		"",
		".nepThemeLight .nepLaunchpadMenuSettings {",
		"    background: var(--white);",
		"}",
		"",
		".nepThemeDark .nepLaunchpadMenuSettings {",
		"    background: var(--darkThemeSecondaryBackground);",
		"}",
		"",
		".nepThemeLight .numPad .sapMBtnInner,",
		".nepThemeLight .nepNumpadPanel .sapMCbBg.sapMCbMarkChecked,",
		".nepThemeLight .nepNumpadPanel .sapMBtn:hover>.sapMBtnHoverable,",
		".nepThemeLight .numPad:not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive {",
		"    background-color: rgba(0, 0, 0, 0.2);",
		"}",
		"",
		".nepThemeDark .numPad .sapMBtnInner,",
		".nepThemeDark .nepNumpadPanel .sapMCbBg.sapMCbMarkChecked,",
		".nepThemeDark .nepNumpadPanel .sapMBtn:hover>.sapMBtnHoverable,",
		".nepThemeDark .numPad:not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive {",
		"    background-color: rgba(255, 255, 255, 0.2);",
		"}",
		"",
		".nepThemeLight .nepNumpadPanel .sapMCbBg {",
		"    background: rgba(0, 0, 0, 0.1);",
		"}",
		"",
		".nepThemeDark .nepNumpadPanel .sapMCbBg {",
		"    background: rgba(255, 255, 255, 0.1);",
		"}",
		"",
		".nepThemeLight .nepLogonLayout {",
		"    background: rgba(0, 0, 0, 0.2);",
		"}",
		"",
		".nepThemeDark .nepLogonLayout {",
		"    background-color: rgb(255, 255, 255, 0.2);",
		"}",
		"",
		"@media (max-width: 420px) {",
		"    .nepThemeLight .nepLogonLayout,",
		"    .nepThemeDark .nepLogonLayout {",
		"        background-color: transparent;",
		"    }",
		"}",
		"",
		".nepThemeLight .nepLogonLayoutBtn .sapMBtn:not(.numPad):hover>.sapMBtnHoverable {",
		"    background-color: var(--white);",
		"}",
		"",
		".nepThemeDark .nepLogonLayoutBtn .sapMBtn:not(.numPad):hover>.sapMBtnHoverable {",
		"    background-color: var(--darkThemeSecondaryBackground);",
		"}",
		"",
		"/* TEXT COLOR */",
		"",
		".nepNavBarActionInverse .sapMBtnCustomIcon {",
		"    color: white !important;",
		"}",
		"",
		".nepNavBarActionInverse .sapMBtnInner {",
		"    color: white !important;",
		"}",
		"",
		".nepThemeLight .nepMainBar .sapMBtnIcon,",
		".nepThemeLight .nepTopMenuContent .sapMBtn,",
		".nepThemeLight .nepTopMenuContent .sapMBtnInner,",
		".nepThemeLight .nepTopMenuContent .sapMBtnIcon {",
		"    color: var(--darkSecondaryColor);",
		"}",
		"",
		".nepThemeDark .nepMainBar .sapMBtnIcon,",
		".nepThemeDark .nepTopMenuContent .sapMBtn,",
		".nepThemeDark .nepTopMenuContent .sapMBtnInner,",
		".nepThemeDark .nepTopMenuContent .sapMBtnIcon {",
		"    color: var(--lightSecondaryColor);",
		"}",
		"",
		".nepThemeLight .nepTopMenuContent .sapMBtn:hover>.sapMBtnHoverable,",
		".nepThemeLight .nepTopMenuContent :not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive,",
		".nepThemeLight .nepTopMenuContent :not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive .sapMBtnIcon,",
		".nepThemeLight .nepTopMenuContent span.sapMBtnInner.sapMBtnEmphasized,",
		".nepThemeLight .nepTopMenuContent .sapMBtn:hover:not(.sapMBtnDisabled)>.sapMBtnHoverable.sapMBtnTransparent:not(.sapMBtnActive):not(.sapMToggleBtnPressed)>.sapMBtnIcon,",
		".nepThemeLight .nepTopMenuContent *.sapMBtn:hover:not(.sapMBtnDisabled)>span.sapMBtnInner.sapMBtnTransparent:not(.sapMBtnActive):not(.sapMToggleBtnPressed)>.sapMBtnIcon,",
		".nepThemeLight .nepTopMenuContent :not(.sapMBtnDisabled):not(.sapMSBActive)>span.sapMBtnInner.sapMBtnTransparent:not(.sapMBtnActive):not(.sapMToggleBtnPressed):hover>.sapMBtnIcon {",
		"    color: var(--darkPrimaryColor);",
		"}",
		"",
		".nepThemeDark .nepTopMenuContent .sapMBtn:hover>.sapMBtnHoverable,",
		".nepThemeDark .nepTopMenuContent :not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive,",
		".nepThemeDark .nepTopMenuContent :not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive .sapMBtnIcon,",
		".nepThemeDark .nepTopMenuContent span.sapMBtnInner.sapMBtnEmphasized,",
		".nepThemeDark .nepTopMenuContent .sapMBtn:hover:not(.sapMBtnDisabled)>.sapMBtnHoverable.sapMBtnTransparent:not(.sapMBtnActive):not(.sapMToggleBtnPressed)>.sapMBtnIcon,",
		".nepThemeDark .nepTopMenuContent *.sapMBtn:hover:not(.sapMBtnDisabled)>span.sapMBtnInner.sapMBtnTransparent:not(.sapMBtnActive):not(.sapMToggleBtnPressed)>.sapMBtnIcon,",
		".nepThemeDark .nepTopMenuContent :not(.sapMBtnDisabled):not(.sapMSBActive)>span.sapMBtnInner.sapMBtnTransparent:not(.sapMBtnActive):not(.sapMToggleBtnPressed):hover>.sapMBtnIcon {",
		"    color: var(--lightPrimaryColor);",
		"}",
		"",
		".nepThemeLight .sapMNCIconImage {",
		"    color: var(--darkPrimaryColor);",
		"}",
		"",
		".nepThemeDark .sapMNCIconImage {",
		"    color: var(--lightPrimaryColor);",
		"}",
		"",
		".nepThemeLight .nepSubMenu .sapMBtnInner {",
		"    color: var(--darkGreyPrimary);",
		"}",
		"",
		".nepThemeDark .nepSubMenu .sapMBtnInner {",
		"    color: var(--lightGreyPrimary);",
		"}",
		"",
		".nepThemeLight .nepOpenAppsBtn .sapMBtnInner,",
		".nepThemeLight .nepTreeCategory .sapMTreeItemBaseExpander {",
		"    color: var(--darkGreyPrimary);",
		"}",
		"",
		".nepThemeDark .nepOpenAppsBtn .sapMBtnInner,",
		".nepThemeDark .nepTreeCategory .sapMTreeItemBaseExpander {",
		"    color: var(--lightGreyPrimary);",
		"}",
		"",
		".nepThemeLight .nepOpenAppsBtn .sapMBtnIcon,",
		".nepThemeLight .nepMainBar .sapMSFF,",
		".nepThemeLight .nepMainBar .sapMSFB,",
		".nepThemeLight .nepPopover .sapMSFF,",
		".nepThemeLight .nepPopover .sapMSFB {",
		"    color: var(--darkGreySecondary);",
		"}",
		"",
		".nepThemeDark .nepOpenAppsBtn .sapMBtnIcon,",
		".nepThemeDark .nepMainBar .sapMSFF,",
		".nepThemeDark .nepMainBar .sapMSFB,",
		".nepThemeDark .nepPopover .sapMSFF,",
		".nepThemeDark .nepPopover .sapMSFB {",
		"    color: var(--lightGreySecondary);",
		"}",
		"",
		".nepThemeLight .sapMDialogStretched.nepPopover .nepOpenAppsBtn .sapMBtnIcon,",
		".nepThemeLight .sapMDialogStretched .nepOpenAppsClose.sapUiIcon,",
		".nepThemeLight .sapMDialogStretched.nepOverflowMenu .sapMSTIIcon,",
		".nepThemeLight .sapMDialogStretched.nepOverflowMenu .nepTreeCategory .sapMTreeItemBaseExpander {",
		"    color: var(--darkGreySecondary);",
		"}",
		"",
		".nepThemeDark .sapMDialogStretched.nepPopover .nepOpenAppsBtn .sapMBtnIcon,",
		".nepThemeDark .sapMDialogStretched .nepOpenAppsClose.sapUiIcon,",
		".nepThemeDark .sapMDialogStretched.nepOverflowMenu .sapMSTIIcon,",
		".nepThemeDark .sapMDialogStretched.nepOverflowMenu .nepTreeCategory .sapMTreeItemBaseExpander {",
		"    color: var(--lightGreySecondary);",
		"}",
		"",
		".nepThemeLight .sapMDialogStretched .nepOpenAppsBtn .sapMBtnInner,",
		".nepThemeLight .sapMDialogStretched.nepOverflowMenu .nepOpenAppsBtn .sapMBtnInner,",
		".nepThemeLight .sapMDialogStretched.nepOverflowMenu .sapMBtnInner,",
		".nepThemeLight .sapMDialogStretched.nepOverflowMenu .sapMTreeItemBase {",
		"    color: var(--darkPrimaryColor);",
		"}",
		"",
		".nepThemeDark .sapMDialogStretched .nepOpenAppsBtn .sapMBtnInner,",
		".nepThemeDark .sapMDialogStretched.nepOverflowMenu .nepOpenAppsBtn .sapMBtnInner,",
		".nepThemeDark .sapMDialogStretched.nepOverflowMenu .sapMBtnInner,",
		".nepThemeDark .sapMDialogStretched.nepOverflowMenu .sapMTreeItemBase {",
		"    color: var(--lightPrimaryColor);",
		"}",
		"",
		".nepThemeLight .nepOpenAppsClose.sapUiIcon {",
		"    color: var(--darkPrimaryColor);",
		"}",
		"",
		".nepThemeDark .nepOpenAppsClose.sapUiIcon {",
		"    color: var(--lightPrimaryColor);",
		"}",
		"",
		".nepThemeLight .nepPopover .sapMBtnIcon,",
		".nepThemeLight .nepMainBar .sapMBtnIcon {",
		"    color: var(--darkGreySecondary);",
		"}",
		"",
		".nepThemeDark .nepPopover .sapMBtnIcon,",
		".nepThemeDark .nepMainBar .sapMBtnIcon {",
		"    color: var(--lightGreySecondary);",
		"}",
		"",
		".nepThemeLight .nepOpenAppsBtn .sapMBtnIcon {",
		"    color: var(--darkGreyPrimary);",
		"}",
		"",
		".nepThemeDark .nepOpenAppsBtn .sapMBtnIcon {",
		"    color: var(--lightGreyPrimary);",
		"}",
		"",
		".nepThemeLight .nepPopover .sapMIBar-CTX.sapMHeader-CTX :not(.sapMBtnDisabled)>.sapMBtnActive,",
		".nepThemeLight .nepPopover .sapMIBar-CTX.sapMFooter-CTX :not(.sapMBtnDisabled)>.sapMBtnActive,",
		".nepThemeLight .nepMainBar .sapMIBar-CTX.sapMHeader-CTX :not(.sapMBtnDisabled)>.sapMBtnActive,",
		".nepThemeLight .nepMainBar .sapMIBar-CTX.sapMFooter-CTX :not(.sapMBtnDisabled)>.sapMBtnActive {",
		"    color: var(--darkGreySecondary);",
		"}",
		"",
		".nepThemeDark .nepPopover .sapMIBar-CTX.sapMHeader-CTX :not(.sapMBtnDisabled)>.sapMBtnActive,",
		".nepThemeDark .nepPopover .sapMIBar-CTX.sapMFooter-CTX :not(.sapMBtnDisabled)>.sapMBtnActive,",
		".nepThemeDark .nepMainBar .sapMIBar-CTX.sapMHeader-CTX :not(.sapMBtnDisabled)>.sapMBtnActive,",
		".nepThemeDark .nepMainBar .sapMIBar-CTX.sapMFooter-CTX :not(.sapMBtnDisabled)>.sapMBtnActive {",
		"    color: var(--lightGreySecondary);",
		"}",
		"",
		".nepThemeLight .nepPopover :not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive .sapMBtnIcon,",
		".nepThemeLight .nepPopover .sapMIBar-CTX .sapMLabel,",
		".nepThemeLight .nepMainBar :not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive .sapMBtnIcon,",
		".nepThemeLight .nepMainBar .sapMIBar-CTX .sapMLabel {",
		"    color: var(--darkPrimaryColor);",
		"}",
		"",
		".nepThemeDark .nepPopover :not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive .sapMBtnIcon,",
		".nepThemeDark .nepPopover .sapMIBar-CTX .sapMLabel,",
		".nepThemeDark .nepMainBar :not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive .sapMBtnIcon,",
		".nepThemeDark .nepMainBar .sapMIBar-CTX .sapMLabel {",
		"    color: var(--lightPrimaryColor);",
		"}",
		"",
		".nepThemeLight .nepListSetting .sapMLIB.sapMLIBActive {",
		"    color: var(--darkPrimaryColor);",
		"}",
		"",
		".nepThemeDark .nepListSetting .sapMLIB.sapMLIBActive {",
		"    color: var(--lightPrimaryColor);",
		"}",
		"",
		".nepThemeLight .nepUserActionText.sapMText {",
		"    color: var(--darkPrimaryColor);",
		"}",
		"",
		".nepThemeDark .nepUserActionText.sapMText {",
		"    color: var(--lightPrimaryColor);",
		"}",
		"",
		".nepThemeLight .nepNotificationItem .sapMLIBIconDel:not(.sapMBtnDisabled) .sapMBtnTransparent>.sapMBtnIcon {",
		"    color: var(--darkGreyPrimary);",
		"}",
		"",
		".nepThemeDark .nepNotificationItem .sapMLIBIconDel:not(.sapMBtnDisabled) .sapMBtnTransparent>.sapMBtnIcon {",
		"    color: var(--lightGreyPrimary);",
		"}",
		"",
		".nepThemeLight .nepPopSimpleTitle.sapMText {",
		"    color: var(--darkGreyPrimary);",
		"}",
		"",
		".nepThemeDark .nepPopSimpleTitle.sapMText {",
		"    color: var(--lightGreyPrimary);",
		"}",
		"",
		".nepThemeLight .sapMLabelRequired.nepLabelHelp:before {",
		"    color: var(--lightThemeRequired);",
		"}",
		"",
		".nepThemeDark .sapMLabelRequired.nepLabelHelp:before {",
		"    color: var(--lightThemeRequired);",
		"}",
		"",
		".nepThemeLight .nepNotifHeader.sapMText {",
		"    color: var(--darkGreyPrimary);",
		"}",
		"",
		".nepThemeDark .nepNotifHeader.sapMText {",
		"    color: var(--lightGreyPrimary);",
		"}",
		"",
		".nepThemeLight .nepFeed .sapMText {",
		"    color: var(--darkSecondaryColor);",
		"}",
		"",
		".nepThemeDark .nepFeed .sapMText {",
		"    color: var(--lightSecondaryColor);",
		"}",
		"",
		".nepThemeLight .nepFCard .sapSuiteUiMicroChartNoData {",
		"    color: var(--lightGreySecondary);",
		"}",
		"",
		".nepThemeDark .nepFCard .sapSuiteUiMicroChartNoData {",
		"    color: var(--darkGreySecondary);",
		"}",
		"",
		".nepThemeLight .nepNumpadPanel .sapMBtnIcon,",
		".nepThemeLight .numPad .sapMBtnInner {",
		"    color: var(--darkPrimaryColor);",
		"}",
		"",
		".nepThemeDark .nepNumpadPanel .sapMBtnIcon,",
		".nepThemeDark .numPad .sapMBtnInner {",
		"    color: var(--lightPrimaryColor);",
		"}",
		"",
		".nepThemeLight .nepLogonLayout .sapMBtnInner,",
		".nepThemeLight .nepAppCacheUser .sapMLIB.sapMLIBActive,",
		".nepThemeLight .nepAppCacheUser .sapMLIBActive div,",
		".nepThemeLight .nepAppCacheUser .sapMLIBActive .sapMText {",
		"    color: var(--darkPrimaryColor);",
		"}",
		"",
		".nepThemeDark .nepLogonLayout .sapMBtnInner,",
		".nepThemeDark .nepAppCacheUser .sapMLIB.sapMLIBActive,",
		".nepThemeDark .nepAppCacheUser .sapMLIBActive div,",
		".nepThemeDark .nepAppCacheUser .sapMLIBActive .sapMText {",
		"    color: var(--lightPrimaryColor);",
		"}",
		"",
		"/* BORDER COLOR */",
		"",
		".nepThemeLight .nepMainBar .sapMSFF,",
		".nepThemeLight .nepPopover .sapMSFF,",
		".nepThemeLight .nepMainBar .sapMSFF:hover,",
		".nepThemeLight .nepPopover .sapMSFF:hover,",
		".nepThemeLight .nepLaunchpadMenuSettings {",
		"    border-color: var(--lightGreyPrimary);",
		"}",
		"",
		".nepThemeDark .nepMainBar .sapMSFF,",
		".nepThemeDark .nepPopover .sapMSFF,",
		".nepThemeDark .nepMainBar .sapMSFF:hover,",
		".nepThemeDark .nepPopover .sapMSFF:hover,",
		".nepThemeDark .nepLaunchpadMenuSettings {",
		"    border-color: var(--darkGreyPrimary);",
		"}",
		"",
		".nepThemeLight .nepTopMenu,",
		".nepThemeLight .nepMainBar,",
		".nepThemeLight .nepNavBarContent,",
		".nepThemeLight .nepNavBarContent .sapMTBStandard,",
		".nepThemeLight .nepDocPage {",
		"    border-color: var(--lightGreySecondary);",
		"}",
		"",
		".nepThemeDark .nepTopMenu,",
		".nepThemeDark .nepMainBar,",
		".nepThemeDark .nepNavBarContent,",
		".nepThemeDark .nepNavBarContent .sapMTBStandard,",
		".nepThemeDark .nepDocPage {",
		"    border-color: var(--darkGreySecondary);",
		"}",
		"",
		".nepThemeLight .nepCatTitle.sapMTitle,",
		".nepThemeLight .nepCatSubTitle.sapMTitle {",
		"    border-color: var(--darkPrimaryColor);",
		"}",
		"",
		".nepThemeDark .nepCatTitle.sapMTitle,",
		".nepThemeDark .nepCatSubTitle.sapMTitle {",
		"    border-color: var(--lightPrimaryColor);",
		"}",
		"",
		".nepThemeLight .nepTopMenuActive,",
		".nepThemeLight .nepTopMenuBtn.sapMBtn:hover,",
		".nepThemeLight .nepLayoutOpenApps.nepIconActive {",
		"    border-color: var(--darkActiveMenuColor);",
		"}",
		"",
		".nepThemeDark .nepTopMenuActive,",
		".nepThemeDark .nepTopMenuBtn.sapMBtn:hover,",
		".nepThemeDark .nepLayoutOpenApps.nepIconActive {",
		"    border-color: var(--lightActiveMenuColor);",
		"}",
		"",
		".nepThemeLight .nepOverflowMenu.nepPopover.sapMPopover {",
		"    border-top-color: var(--darkActiveMenuColor);",
		"}",
		"",
		".nepThemeDark .nepOverflowMenu.nepPopover.sapMPopover {",
		"    border-top-color: var(--lightActiveMenuColor);",
		"}",
		"",
		".nepThemeLight .nepOverflowMenu.sapMPopover {",
		"    border-top-color: var(--darkActiveMenuColor);",
		"}",
		"",
		".nepThemeDark .nepOverflowMenu.sapMPopover {",
		"    border-top-color: var(--lightActiveMenuColor);",
		"}",
		"",
		".nepThemeLight .nepSelectUser {",
		"    border-color: var(--darkGreySecondary);",
		"}",
		"",
		".nepThemeDark .nepSelectUser {",
		"    border-color: var(--lightGreySecondary);",
		"}",
		"",
		".nepThemeLight .nepLogonLayout .sapMBtnInner {",
		"    border-color: var(--darkGreySecondary);",
		"}",
		"",
		".nepThemeDark .nepLogonLayout .sapMBtnInner {",
		"    border-color: var(--lightGreySecondary);",
		"}",
		"",
		".nepThemeLight .numPad:not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive {",
		"    border-color: rgba(0, 0, 0, 0.5);",
		"}",
		"",
		".nepThemeDark .numPad:not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive {",
		"    border-color: rgba(255, 255, 255, 0.5);",
		"}",
		"",
		"/* BOX SHADOW */",
		"",
		".nepThemeLight .nepLayoutOpenApps,",
		".nepThemeLight .nepPinOpenApps,",
		".nepThemeLight .nepOverflowMenu.sapMPopover,",
		".nepThemeLight .nepPopover.sapMPopover,",
		".nepThemeLight .nepTileCards,",
		".nepThemeLight .nepFioriStyle .nepTile,",
		".nepThemeLight .nepClientInstallLayout {",
		"    box-shadow: 0 8px 18px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);",
		"}",
		"",
		".nepThemeDark .nepLayoutOpenApps,",
		".nepThemeDark .nepPinOpenApps,",
		".nepThemeDark .nepOverflowMenu.sapMPopover,",
		".nepThemeDark .nepPopover.sapMPopover,",
		".nepThemeDark .nepTileCards,",
		".nepThemeDark .nepFioriStyle .nepTile,",
		".nepThemeDark .nepClientInstallLayout {",
		"    box-shadow: 0 8px 18px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);",
		"}",
		"",
		".nepThemeLight .nepFCard:hover,",
		".nepThemeLight .nepLayoutOpenApps:hover,",
		".nepThemeLight .nepPinOpenApps:hover,",
		".nepThemeLight .nepOverflowMenu.sapMPopover:hover,",
		".nepThemeLight .nepTileCards:hover,",
		".nepThemeLight .nepFioriStyle .nepTile:hover,",
		".nepThemeLight .nepICCardActionHover {",
		"    box-shadow: 0 8px 18px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);",
		"}",
		"",
		".nepThemeDark .nepFCard:hover,",
		".nepThemeDark .nepLayoutOpenApps:hover,",
		".nepThemeDark .nepPinOpenApps:hover,",
		".nepThemeDark .nepOverflowMenu.sapMPopover:hover,",
		".nepThemeDark .nepTileCards:hover,",
		".nepThemeDark .nepFioriStyle .nepTile:hover,",
		".nepThemeDark .nepICCardActionHover {",
		"    box-shadow: 0 8px 18px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);",
		"}",
		"",
		"/* SAP QUARTZ LIGHT */",
		"",
		".nepThemeLight .nepActionContainer .sapMBtnInner,",
		".nepThemeLight .nepActionContainer .sapMBtn:hover>.sapMBtnHoverable {",
		"    background-color: transparent;",
		"    border-color: var(--darkPrimaryColor);",
		"    color: var(--darkPrimaryColor);",
		"}",
		"",
		".nepThemeLight .nepActionContainer .sapMBtnIcon {",
		"    color: var(--darkPrimaryColor);",
		"}",
		"",
		"/* SAP QUARTZ DARK */",
		"",
		".nepThemeDark .nepActionContainer .sapMBtnInner,",
		".nepThemeDark .nepActionContainer .sapMBtn:hover>.sapMBtnHoverable {",
		"    background-color: transparent;",
		"    border-color: var(--lightSecondaryColor);",
		"    color: var(--lightSecondaryColor);",
		"}",
		"",
		".nepThemeDark .nepActionContainer .sapMBtnIcon,",
		".nepThemeDark .nepFCard.sapFCard .sapFCardHeader .sapFCardIcon.sapFAvatar .sapUiIcon {",
		"    color: var(--lightSecondaryColor);",
		"}",
		"",
		"/* NEPTUNE TREE CATEGORY (TILE GROUPS)*/",
		"",
		".nepTreeCategory li[aria-level=\"2\"] {",
		"    padding-left: 1rem !important;",
		"}",
		"",
		".nepTreeCategory li[aria-level=\"3\"] {",
		"    padding-left: 2.5rem !important;",
		"}",
		"",
		".nepTreeCategory li[aria-level=\"4\"] {",
		"    padding-left: 4rem !important;",
		"}",
		"",
		".nepTreeCategory li[aria-level=\"5\"] {",
		"    padding-left: 5.5rem !important;",
		"}",
		"",
		".nepTreeCategory li[aria-level=\"2\"].nepTreeItemAction {",
		"    padding-left: 1.5rem !important;",
		"}",
		"",
		".nepTreeCategory li[aria-level=\"3\"].nepTreeItemAction {",
		"    padding-left: 3.5rem !important;",
		"}",
		"",
		".nepTreeCategory li[aria-level=\"4\"].nepTreeItemAction {",
		"    padding-left: 5rem !important;",
		"}",
		"",
		".nepTreeCategory li[aria-level=\"5\"].nepTreeItemAction {",
		"    padding-left: 6.5rem !important;",
		"}",
		"",
		".nepTreeCategory li[aria-level=\"6\"].nepTreeItemAction {",
		"    padding-left: 7rem !important;",
		"}",
		"",
		"html[dir=\"rtl\"] .nepTreeCategory li[aria-level=\"2\"] {",
		"    padding-left: 0 !important;",
		"    padding-right: 2rem !important;",
		"}",
		"",
		"html[dir=\"rtl\"] .nepTreeCategory li[aria-level=\"3\"] {",
		"    padding-left: 0 !important;",
		"    padding-right: 4rem !important;",
		"}",
		"",
		"html[dir=\"rtl\"] .nepTreeCategory li[aria-level=\"4\"] {",
		"    padding-left: 0 !important;",
		"    padding-right: 6rem !important;",
		"}",
		"",
		"html[dir=\"rtl\"] .nepTreeCategory li[aria-level=\"2\"] {",
		"    padding-left: 0 !important;",
		"    padding-right: 1.5rem !important;",
		"}",
		"",
		"html[dir=\"rtl\"] .nepTreeCategory li[aria-level=\"3\"] {",
		"    padding-left: 0 !important;",
		"    padding-right: 3rem !important;",
		"}",
		"",
		"html[dir=\"rtl\"] .nepTreeCategory li[aria-level=\"4\"] {",
		"    padding-left: 0 !important;",
		"    padding-right: 4.5rem !important;",
		"}",
		"",
		".nepTreeCategory .sapMTreeItemBaseChildren {",
		"    background-color: transparent;",
		"}",
		"",
		".nepTreeCategory .sapMTreeItemBaseExpander {",
		"    font-family: 'fa-solid' !important;",
		"}",
		"",
		".nepTreeCategory .sapMTreeItemBaseLeaf>.sapMTreeItemBaseExpander {",
		"    opacity: 1;",
		"}",
		"",
		".nepTreeCategory .nepTreeItemAction.sapMTreeItemBaseLeaf>.sapMTreeItemBaseExpander.sapUiIcon {",
		"    display: none;",
		"}",
		"",
		".nepTreeCategory .sapMTreeItemBaseExpander.sapUiIcon {",
		"    font-family: 'fa-solid' !important;",
		"    font-size: 1.5rem;",
		"    margin-right: .125rem;",
		"}",
		"",
		".nepTreeCategory .sapMTreeItemBaseExpander.sapUiIcon {",
		"    font-size: 1.125rem;",
		"}",
		"",
		".nepOpenAppsBtn:not(.nepOpenAppsBtnItem) .sapMBtnIcon {",
		"    font-size: 1.5rem;",
		"}",
		"",
		".nepOpenAppsBtn .sapMBtnIcon {",
		"    font-size: 1rem;",
		"}",
		"",
		".nepOpenAppsBtnMaster .sapMBtnIcon {",
		"    font-size: 1.125rem;",
		"    padding-left: .5rem;",
		"}",
		"",
		".nepTreeCategory .sapMBtnInner.sapMBtnText .sapMBtnIcon {",
		"    font-size: 1rem;",
		"}",
		"",
		"@-webkit-keyframes fadein {",
		"    0% {",
		"        opacity: 0;",
		"    }",
		"    100% {",
		"        opacity: 1;",
		"    }",
		"}",
		"",
		"@-moz-keyframes fadein {",
		"    0% {",
		"        opacity: 0;",
		"    }",
		"    100% {",
		"        opacity: 1;",
		"    }",
		"}",
		"",
		"@keyframes fadein {",
		"    0% {",
		"        opacity: 0;",
		"    }",
		"    100% {",
		"        opacity: 1;",
		"    }",
		"}",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		"/* MENU*/",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		".nepTopMenuContent {",
		"    overflow: hidden;",
		"}",
		"",
		".nepTopMenuContent .sapMBtnIcon {",
		"    font-size: 1.375rem;",
		"    line-height: 2.375rem;",
		"    width: 2.375rem;",
		"}",
		"",
		".nepTopMenuContent .sapMBtn {",
		"    height: 3rem;",
		"}",
		"",
		".nepTopMenuContent .sapMBtnInner {",
		"    height: 2.5rem;",
		"    min-width: 2.5rem;",
		"    border-radius: 0.2rem;",
		"}",
		"",
		".nepTopMenuContent .sapMBtnContent {",
		"    line-height: 2.375rem;",
		"}",
		"",
		".nepTopMenuContent .nepNotificationButton .sapMBtnInner {",
		"    height: 1.5rem;",
		"    min-width: 1.5rem;",
		"}",
		"",
		".nepTopMenuContent .nepNotificationButton .sapMBtnInner.sapMBtnText,",
		".nepTopMenuContent .nepNotificationButton .sapMBtnIconLeft+.sapMBtnIconRight,",
		".nepTopMenuContent .nepNotificationButton .sapMBtnIconLeft+.sapMBtnIconLeft {",
		"    padding-left: .25rem;",
		"    padding-right: .25rem;",
		"}",
		"",
		".nepTopMenuContent .nepNotificationButton .sapMBtnContent {",
		"    line-height: 1.5rem;",
		"}",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		"/* CANVAS */",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		"html.sap-desktop .nepShell.sapMShellAppWidthLimited .sapMShellCentralBox:before {",
		"    box-shadow: -15px 0 15px -15px rgba(0, 0, 0, 0.15) inset;",
		"    content: \" \";",
		"    height: 100%;",
		"    left: -15px;",
		"    position: absolute;",
		"    top: 0;",
		"    width: 15px;",
		"}",
		"",
		"html.sap-desktop .nepShell.sapMShellAppWidthLimited .sapMShellCentralBox:after {",
		"    box-shadow: 15px 0 15px -15px rgba(0, 0, 0, 0.15) inset;",
		"    content: \" \";",
		"    height: 100%;",
		"    position: absolute;",
		"    top: 0;",
		"    right: -15px;",
		"    width: 15px;",
		"}",
		"",
		"html.sap-desktop .nepShellXXXLarge.nepShell.sapMShellAppWidthLimited>.sapMShellCentralBox {",
		"    max-width: var(--xxxlarge);",
		"}",
		"",
		"html.sap-desktop .nepShellXXLarge.nepShell.sapMShellAppWidthLimited>.sapMShellCentralBox {",
		"    max-width: var(--xxlarge);",
		"}",
		"",
		"html.sap-desktop .nepShellXLarge.nepShell.sapMShellAppWidthLimited>.sapMShellCentralBox {",
		"    max-width: var(--xlarge);",
		"}",
		"",
		"html.sap-desktop .nepShellLarge.nepShell.sapMShellAppWidthLimited>.sapMShellCentralBox {",
		"    max-width: var(--large);",
		"}",
		"",
		"html.sap-desktop .nepShellMedium.nepShell.sapMShellAppWidthLimited>.sapMShellCentralBox {",
		"    max-width: var(--medium);",
		"}",
		"",
		"html.sap-desktop .nepShellSmall.nepShell.sapMShellAppWidthLimited>.sapMShellCentralBox {",
		"    max-width: var(--small);",
		"}",
		"",
		"html.sap-desktop .nepShellXSmall.nepShell.sapMShellAppWidthLimited>.sapMShellCentralBox {",
		"    max-width: var(--xsmall);",
		"}",
		"",
		".nepShellWidthApp .sapMShellCentralBox {",
		"    max-width: var(--large);",
		"}",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		"/* NORMAL GRID */",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		".nepGrid {",
		"    display: grid;",
		"    grid-gap: var(--gridGap);",
		"    grid-template-columns: repeat(12, var(--grid12));",
		"    width: 100%;",
		"    margin-bottom: 8px;",
		"    margin-bottom: var(--gridGap);",
		"}",
		"",
		".nepGrid.nepGridXXXLarge,",
		".nepGrid.nepGroupXXXLarge {",
		"    grid-template-columns: repeat(10, var(--grid10));",
		"    width: 100%;",
		"}",
		"",
		".nepGrid.nepGridXXLarge,",
		".nepGrid.nepGroupXXLarge {",
		"    grid-template-columns: repeat(8, var(--grid8));",
		"    width: 100%;",
		"}",
		"",
		".nepGrid.nepGridXLarge,",
		".nepGrid.nepGroupXLarge {",
		"    grid-template-columns: repeat(6, var(--grid6));",
		"    width: 100%;",
		"}",
		"",
		".nepGrid.nepGridLarge,",
		".nepGrid.nepGroupLarge {",
		"    grid-template-columns: repeat(4, var(--grid4));",
		"    width: 100%;",
		"}",
		"",
		".nepGrid.nepGridMedium,",
		".nepGrid.nepGroupMedium {",
		"    grid-template-columns: repeat(3, var(--grid3));",
		"    width: 100%;",
		"}",
		"",
		".nepGrid.nepGridSmall,",
		".nepGrid.nepGroupSmall {",
		"    grid-template-columns: repeat(2, var(--grid2));",
		"    width: 100%;",
		"}",
		"",
		".nepGrid.nepGridXSmall,",
		".nepGrid.nepGroupXSmall {",
		"    grid-template-columns: var(--grid1);",
		"    width: 100%;",
		"}",
		"",
		".nepHeaderXXXLarge,",
		".nepGrid.nepGroupXXXLarge {",
		"    max-width: var(--xxxlarge);",
		"    margin: 0 auto 0 auto;",
		"}",
		"",
		".nepHeaderXXLarge,",
		".nepGrid.nepGroupXXLarge {",
		"    max-width: var(--xxlarge);",
		"    margin: 0 auto 0 auto;",
		"}",
		"",
		".nepHeaderXLarge,",
		".nepGrid.nepGroupXLarge {",
		"    max-width: var(--xlarge);",
		"    margin: 0 auto 0 auto;",
		"}",
		"",
		".nepHeaderLarge,",
		".nepGrid.nepGroupLarge {",
		"    max-width: var(--large);",
		"    margin: 0 auto 0 auto;",
		"}",
		"",
		".nepHeaderMedium,",
		".nepGrid.nepGroupMedium {",
		"    max-width: var(--medium);",
		"    margin: 0 auto 0 auto;",
		"}",
		"",
		".nepHeaderSmall,",
		".nepGrid.nepGroupSmall {",
		"    max-width: var(--small);",
		"    margin: 0 auto 0 auto;",
		"}",
		"",
		".nepHeaderXSmall,",
		".nepGrid.nepGroupXSmall {",
		"    max-width: var(--xsmall);",
		"    margin: 0 auto 0 auto;",
		"}",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		"/* MANY GRID */",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		".nepGrid.nepGridMany {",
		"    grid-template-columns: repeat(14, var(--grid14));",
		"    width: 100%;",
		"    margin-bottom: var(--gridGap);",
		"}",
		"",
		".nepGrid.nepGridXXXLarge.nepGridMany,",
		".nepGrid.nepGroupXXXLarge.nepGridMany {",
		"    grid-template-columns: repeat(12, var(--grid12));",
		"    width: 100%;",
		"}",
		"",
		".nepGrid.nepGridXXLarge.nepGridMany,",
		".nepGrid.nepGroupXXLarge.nepGridMany {",
		"    grid-template-columns: repeat(10, var(--grid10));",
		"    width: 100%;",
		"}",
		"",
		".nepGrid.nepGridXLarge.nepGridMany,",
		".nepGrid.nepGroupXLarge.nepGridMany {",
		"    grid-template-columns: repeat(8, var(--grid8));",
		"    width: 100%;",
		"}",
		"",
		".nepGrid.nepGridLarge.nepGridMany,",
		".nepGrid.nepGroupLarge.nepGridMany {",
		"    grid-template-columns: repeat(6, var(--grid6));",
		"    width: 100%;",
		"}",
		"",
		".nepGrid.nepGridMedium.nepGridMany,",
		".nepGrid.nepGroupMedium.nepGridMany {",
		"    grid-template-columns: repeat(3, var(--grid3));",
		"    width: 100%;",
		"}",
		"",
		".nepGrid.nepGridSmall.nepGridMany,",
		".nepGrid.nepGroupSmall.nepGridMany {",
		"    grid-template-columns: repeat(2, var(--grid2));",
		"    width: 100%;",
		"}",
		"",
		".nepGrid.nepGridXSmall.nepGridMany,",
		".nepGrid.nepGroupXSmall.nepGridMany {",
		"    grid-template-columns: var(--grid1);",
		"    width: 100%;",
		"}",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		"/* FEW GRID */",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		".nepGrid.nepGridFew {",
		"    grid-template-columns: repeat(8, var(--grid8));",
		"    width: 100%;",
		"    margin-bottom: var(--gridGap);",
		"}",
		"",
		".nepGrid.nepGridXXXLarge.nepGridFew,",
		".nepGrid.nepGroupXXXLarge.nepGridFew {",
		"    grid-template-columns: repeat(8, var(--grid8));",
		"    width: 100%;",
		"}",
		"",
		".nepGrid.nepGridXXLarge.nepGridFew,",
		".nepGrid.nepGroupXXLarge.nepGridFew {",
		"    grid-template-columns: repeat(6, var(--grid6));",
		"    width: 100%;",
		"}",
		"",
		".nepGrid.nepGridXLarge.nepGridFew,",
		".nepGrid.nepGroupXLarge.nepGridFew {",
		"    grid-template-columns: repeat(4, var(--grid4));",
		"    width: 100%;",
		"}",
		"",
		".nepGrid.nepGridLarge.nepGridFew,",
		".nepGrid.nepGroupLarge.nepGridFew {",
		"    grid-template-columns: repeat(2, var(--grid2));",
		"    width: 100%;",
		"}",
		"",
		".nepGrid.nepGridMedium.nepGridFew,",
		".nepGrid.nepGroupMedium.nepGridFew,",
		".nepGrid.nepGridSmall.nepGridFew,",
		".nepGrid.nepGroupSmall.nepGridFew,",
		".nepGrid.nepGridXSmall.nepGridFew,",
		".nepGrid.nepGroupXSmall.nepGridFew {",
		"    grid-template-columns: var(--grid1);",
		"    width: 100%;",
		"}",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		"/* ONE GRID */",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		".nepGrid.nepGridOne {",
		"    grid-template-columns: var(--grid1);",
		"    width: 100%;",
		"    margin-bottom: var(--gridGap);",
		"}",
		"",
		".nepGrid.nepGridXXXLarge.nepGridOne,",
		".nepGrid.nepGroupXXXLarge.nepGridOne,",
		".nepGrid.nepGridXXLarge.nepGridOne,",
		".nepGrid.nepGroupXXLarge.nepGridOne,",
		".nepGrid.nepGridXLarge.nepGridOne,",
		".nepGrid.nepGroupXLarge.nepGridOne,",
		".nepGrid.nepGridLarge.nepGridOne,",
		".nepGrid.nepGroupLarge.nepGridOne,",
		".nepGrid.nepGridMedium.nepGridOne,",
		".nepGrid.nepGroupMedium.nepGridOne,",
		".nepGrid.nepGridSmall.nepGridOne,",
		".nepGrid.nepGroupSmall.nepGridOne,",
		".nepGrid.nepGridXSmall.nepGridOne,",
		".nepGrid.nepGroupXSmall.nepGridOne {",
		"    grid-template-columns: var(--grid1);",
		"    width: 100%;",
		"}",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		"/* TILE */",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		".nepTile,",
		".nepTileContentContainer {",
		"    height: calc(100% - 2 * var(--cardMargin));",
		"    min-height: var(--gridHeight);",
		"}",
		"",
		".nepTile.nepTileCards>.sapMFlexItem {",
		"    height: 100%;",
		"}",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		"/* TILE HEIGHT */",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		".nepTileTall {",
		"    grid-row: auto / span 2;",
		"    min-height: calc(2 * var(--gridHeight));",
		"}",
		"",
		".nepTileTower {",
		"    grid-row: auto / span 3;",
		"    min-height: calc(3 * var(--gridHeight));",
		"}",
		"",
		".nepTileSkyscraper {",
		"    grid-row: auto / span 4;",
		"    min-height: calc(4 * var(--gridHeight));",
		"}",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		"/* TILE WIDTH */",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		".nepTileMedium {",
		"    grid-column: auto / span 2;",
		"}",
		"",
		".nepTileWide {",
		"    grid-column: auto / span 3;",
		"}",
		"",
		".nepTileWider {",
		"    grid-column: auto / span 4;",
		"}",
		"",
		".nepTileMax {",
		"    grid-column: auto / span 12;",
		"}",
		"",
		".nepGroupXXXLarge .nepTileMax,",
		".nepGridXXXLarge .nepTileMax {",
		"    grid-column: auto / span 10;",
		"}",
		"",
		".nepGroupXXLarge .nepTileMax,",
		".nepGridXXLarge .nepTileMax {",
		"    grid-column: auto / span 8;",
		"}",
		"",
		".nepGroupXLarge .nepTileMax,",
		".nepGridXLarge .nepTileMax {",
		"    grid-column: auto / span 6;",
		"}",
		"",
		".nepGroupLarge .nepTileMax,",
		".nepGridLarge .nepTileMax {",
		"    grid-column: auto / span 4;",
		"}",
		"",
		".nepGroupMedium .nepTileWider,",
		".nepGroupMedium .nepTileMax,",
		".nepGridMedium .nepTileWider,",
		".nepGridMedium .nepTileMax {",
		"    grid-column: auto / span 3;",
		"}",
		"",
		".nepGroupSmall .nepTileWide,",
		".nepGroupSmall .nepTileWider,",
		".nepGroupSmall .nepTileMax,",
		".nepGridSmall .nepTileWide,",
		".nepGridSmall .nepTileWider,",
		".nepGridSmall .nepTileMax {",
		"    grid-column: auto / span 2;",
		"}",
		"",
		".nepGroupXSmall .nepTileMedium,",
		".nepGroupXSmall .nepTileWide,",
		".nepGroupXSmall .nepTileWider,",
		".nepGroupXSmall .nepTileMax,",
		".nepGridXSmall .nepTileMedium,",
		".nepGridXSmall .nepTileWide,",
		".nepGridXSmall .nepTileWider,",
		".nepGridXSmall .nepTileMax {",
		"    grid-column: auto / span 1;",
		"}",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		"/* TILE WIDTH MANY */",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		".nepGridMany .nepTileMax {",
		"    grid-column: auto / span 14;",
		"}",
		"",
		".nepGridMany.nepGroupXXXLarge .nepTileMax,",
		".nepGridMany.nepGridXXXLarge .nepTileMax {",
		"    grid-column: auto / span 12;",
		"}",
		"",
		".nepGridMany.nepGroupXXLarge .nepTileMax,",
		".nepGridMany.nepGridXXLarge .nepTileMax {",
		"    grid-column: auto / span 10;",
		"}",
		"",
		".nepGridMany.nepGroupXLarge .nepTileMax,",
		".nepGridMany.nepGridXLarge .nepTileMax {",
		"    grid-column: auto / span 8;",
		"}",
		"",
		".nepGridMany.nepGroupLarge .nepTileMax,",
		".nepGridMany.nepGridLarge .nepTileMax {",
		"    grid-column: auto / span 6;",
		"}",
		"",
		".nepGridMany.nepGroupMedium .nepTileWider,",
		".nepGridMany.nepGroupMedium .nepTileMax,",
		".nepGridMany.nepGridMedium .nepTileWider,",
		".nepGridMany.nepGridMedium .nepTileMax {",
		"    grid-column: auto / span 3;",
		"}",
		"",
		".nepGridMany.nepGroupSmall .nepTileWide,",
		".nepGridMany.nepGroupSmall .nepTileWider,",
		".nepGridMany.nepGroupSmall .nepTileMax,",
		".nepGridMany.nepGridSmall .nepTileWide,",
		".nepGridMany.nepGridSmall .nepTileWider,",
		".nepGridMany.nepGridSmall .nepTileMax {",
		"    grid-column: auto / span 2;",
		"}",
		"",
		".nepGridMany.nepGroupXSmall .nepTileMedium,",
		".nepGridMany.nepGroupXSmall .nepTileWide,",
		".nepGridMany.nepGroupXSmall .nepTileWider,",
		".nepGridMany.nepGroupXSmall .nepTileMax,",
		".nepGridMany.nepGridXSmall .nepTileMedium,",
		".nepGridMany.nepGridXSmall .nepTileWide,",
		".nepGridMany.nepGridXSmall .nepTileWider,",
		".nepGridMany.nepGridXSmall .nepTileMax {",
		"    grid-column: auto / span 1;",
		"}",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		"/* TILE WIDTH FEW */",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		".nepGridFew .nepTileMax {",
		"    grid-column: auto / span 8;",
		"}",
		"",
		".nepGridFew.nepGroupXXXLarge .nepTileMax,",
		".nepGridFew.nepGridXXXLarge .nepTileMax {",
		"    grid-column: auto / span 8;",
		"}",
		"",
		".nepGridFew.nepGroupXXLarge .nepTileMax,",
		".nepGridFew.nepGridXXLarge .nepTileMax {",
		"    grid-column: auto / span 6;",
		"}",
		"",
		".nepGridFew.nepGroupXLarge .nepTileMax,",
		".nepGridFew.nepGridXLarge .nepTileMax {",
		"    grid-column: auto / span 4;",
		"}",
		"",
		".nepGridFew.nepGroupLarge .nepTileWide,",
		".nepGridFew.nepGroupLarge .nepTileWider,",
		".nepGridFew.nepGroupLarge .nepTileMax,",
		".nepGridFew.nepGridLarge .nepTileWide,",
		".nepGridFew.nepGridLarge .nepTileWider,",
		".nepGridFew.nepGridLarge .nepTileMax {",
		"    grid-column: auto / span 2;",
		"}",
		"",
		".nepGridFew.nepGroupMedium .nepTileMedium,",
		".nepGridFew.nepGroupMedium .nepTileWide,",
		".nepGridFew.nepGroupMedium .nepTileWider,",
		".nepGridFew.nepGroupMedium .nepTileMax,",
		".nepGridFew.nepGridMedium .nepTileMedium,",
		".nepGridFew.nepGridMedium .nepTileWide,",
		".nepGridFew.nepGridMedium .nepTileWider,",
		".nepGridFew.nepGridMedium .nepTileMax {",
		"    grid-column: auto / span 1;",
		"}",
		"",
		".nepGridFew.nepGroupSmall .nepTileMedium,",
		".nepGridFew.nepGroupSmall .nepTileWide,",
		".nepGridFew.nepGroupSmall .nepTileWider,",
		".nepGridFew.nepGroupSmall .nepTileMax,",
		".nepGridFew.nepGridSmall .nepTileMedium,",
		".nepGridFew.nepGridSmall .nepTileWide,",
		".nepGridFew.nepGridSmall .nepTileWider,",
		".nepGridFew.nepGridSmall .nepTileMax {",
		"    grid-column: auto / span 1;",
		"}",
		"",
		".nepGridFew.nepGroupXSmall .nepTileMedium,",
		".nepGridFew.nepGroupXSmall .nepTileWide,",
		".nepGridFew.nepGroupXSmall .nepTileWider,",
		".nepGridFew.nepGroupXSmall .nepTileMax,",
		".nepGridFew.nepGridXSmall .nepTileMedium,",
		".nepGridFew.nepGridXSmall .nepTileWide,",
		".nepGridFew.nepGridXSmall .nepTileWider,",
		".nepGridFew.nepGridXSmall .nepTileMax {",
		"    grid-column: auto / span 1;",
		"}",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		"/* TILE WIDTH ONE */",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		".nepGrid.nepGridOne .nepTileMedium,",
		".nepGrid.nepGridOne .nepTileWide,",
		".nepGrid.nepGridOne .nepTileWider,",
		".nepGrid.nepGridOne .nepTileMax {",
		"    grid-column: auto / span 1;",
		"}",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		"/* TILE ALIGNMENT ",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		".nepHeaderAlignLeft,",
		".nepGrid.nepGridAlignLeft {",
		"    margin: 0 auto 0 0;",
		"}",
		"",
		".nepHeaderAlignRight,",
		".nepGrid.nepGridAlignRight {",
		"    margin: 0 0 0 auto;",
		"}",
		"",
		"/* --------------------------------------------------------------------------------------------------",
		"/* FIORI TILES ",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		".nepGrid.nepGridFiori {",
		"    display: flex;",
		"    flex-wrap: wrap;",
		"}",
		"",
		".nepGridFiori .nepTileMax {",
		"    width: 100%;",
		"}",
		"",
		".nepGridFiori .nepTile {",
		"    width: 11rem;",
		"    height: 11rem;",
		"}",
		"",
		".nepGridFiori .nepTile.nepFioriStyleTwoByOne {",
		"    width: 22.5rem;",
		"}",
		"",
		".nepTileCards {",
		"    height: 100%;",
		"}",
		"",
		".nepTileCards,",
		".nepFioriStyle .nepTile {",
		"    border-radius: 4px;",
		"}",
		"",
		".nepFitTileContent .nepTileContentContainer {",
		"    min-height: auto;",
		"}",
		"",
		".nepFitTileContent.nepTileCards {",
		"    height: auto;",
		"}",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		"/* INTERNET EXPLORER */",
		"",
		"/*--------------------------------------------------------------------------------------------------*/",
		"",
		"@media all and (-ms-high-contrast: none),",
		"(-ms-high-contrast: active) {",
		"    .sapFCard .sapFCardHeader {",
		"        box-shadow: none !important;",
		"    }",
		"    .nepFCardContainer>.sapMFlexItem,",
		"    .nepFCardBody>.sapMFlexItem {",
		"        width: 100% !important;",
		"    }",
		"    .nepGrid {",
		"        display: flex;",
		"        flex-wrap: wrap;",
		"    }",
		"    html.sap-desktop .nepShell.sapMShellAppWidthLimited .sapMShellCentralBox {",
		"        max-width: 1280px;",
		"    }",
		"    html.sap-desktop .nepShellXXXLarge.nepShell.sapMShellAppWidthLimited .sapMShellCentralBox {",
		"        max-width: 2360px;",
		"    }",
		"    html.sap-desktop .nepShellXXLarge.nepShell.sapMShellAppWidthLimited .sapMShellCentralBox {",
		"        max-width: 1880px;",
		"    }",
		"    html.sap-desktop .nepShellXLarge.nepShell.sapMShellAppWidthLimited .sapMShellCentralBox {",
		"        max-width: 1580px;",
		"    }",
		"    html.sap-desktop .nepShellLarge.nepShell.sapMShellAppWidthLimited .sapMShellCentralBox {",
		"        max-width: 1280px;",
		"    }",
		"    html.sap-desktop .nepShellMedium.nepShell.sapMShellAppWidthLimited>.sapMShellCentralBox {",
		"        max-width: 980px;",
		"    }",
		"    html.sap-desktop .nepShellSmall.nepShell.sapMShellAppWidthLimited .sapMShellCentralBox {",
		"        max-width: 680px;",
		"    }",
		"    html.sap-desktop .nepShellXSmall.nepShell.sapMShellAppWidthLimited .sapMShellCentralBox {",
		"        max-width: 380px;",
		"    }",
		"    .nepShellWidthApp .sapMShellCentralBox {",
		"        max-width: 1280px;",
		"    }",
		"    .nepHeaderXXXLarge,",
		"    .nepGrid.nepGroupXXXLarge {",
		"        max-width: 2360px;",
		"    }",
		"    .nepHeaderXXLarge,",
		"    .nepGrid.nepGroupXXLarge {",
		"        max-width: 1880px;",
		"    }",
		"    .nepHeaderXLarge,",
		"    .nepGrid.nepGroupXLarge {",
		"        max-width: 1580px;",
		"    }",
		"    .nepHeaderLarge,",
		"    .nepGrid.nepGroupLarge {",
		"        max-width: 1280px;",
		"    }",
		"    .nepHeaderMedium,",
		"    .nepGrid.nepGroupMedium {",
		"        max-width: 980px;",
		"    }",
		"    .nepHeaderSmall,",
		"    .nepGrid.nepGroupSmall {",
		"        max-width: 680px;",
		"    }",
		"    .nepHeaderXSmall,",
		"    .nepGrid.nepGroupXSmall {",
		"        max-width: 380px;",
		"    }",
		"    /*--------------------------------------------------------------------------------------------------*/",
		"    /* TILE HEIGHT */",
		"    /*--------------------------------------------------------------------------------------------------*/",
		"    .nepTile,",
		"    .nepTileContentContainer,",
		"    .nepFCardContainer,",
		"    .nepTileContainer {",
		"        min-height: 270px;",
		"    }",
		"    .nepTileTall {",
		"        min-height: 540px;",
		"    }",
		"    .nepTileTower {",
		"        min-height: 710px;",
		"    }",
		"    .nepTileSkyscraper {",
		"        min-height: 880px;",
		"    }",
		"    /*--------------------------------------------------------------------------------------------------*/",
		"    /* TILE WIDTH */",
		"    /*--------------------------------------------------------------------------------------------------*/",
		"    .nepGrid .nepTileSmall {",
		"        width: 8.3333% !important;",
		"    }",
		"    .nepPageXXXLarge .nepGrid .nepTileSmall,",
		"    .nepGridXXXLarge.nepGrid .nepTileSmall {",
		"        width: 10% !important;",
		"    }",
		"    .nepPageXXLarge .nepGrid .nepTileSmall,",
		"    .nepGridXXLarge.nepGrid .nepTileSmall {",
		"        width: 12.5% !important;",
		"    }",
		"    .nepPageXLarge .nepGrid .nepTileSmall,",
		"    .nepGridXLarge.nepGrid .nepTileSmall {",
		"        width: 16.6666% !important;",
		"    }",
		"    .nepPageLarge .nepGrid .nepTileSmall,",
		"    .nepGridLarge.nepGrid .nepTileSmall {",
		"        width: 25% !important;",
		"    }",
		"    .nepPageMedium .nepGrid .nepTileSmall,",
		"    .nepGridMedium.nepGrid .nepTileSmall {",
		"        width: 50% !important;",
		"    }",
		"    .nepPageSmall .nepGrid .nepTileSmall,",
		"    .nepGridSmall.nepGrid .nepTileSmall,",
		"    .nepPageXSmall .nepGrid .nepTileSmall,",
		"    .nepGridXSmall.nepGrid .nepTileSmall {",
		"        width: 100% !important;",
		"    }",
		"    .nepGrid .nepTileMedium {",
		"        width: 25% !important;",
		"    }",
		"    .nepPageXLarge .nepGrid .nepTileMedium,",
		"    .nepGridXLarge.nepGrid .nepTileMedium,",
		"    .nepPageLarge .nepGrid .nepTileMedium,",
		"    .nepGridLarge.nepGrid .nepTileMedium {",
		"        width: 50% !important;",
		"    }",
		"    .nepPageMedium .nepGrid .nepTileMedium,",
		"    .nepGridMedium.nepGrid .nepTileMedium,",
		"    .nepPageSmall .nepGrid .nepTileMedium,",
		"    .nepGridSmall.nepGrid .nepTileMedium,",
		"    .nepPageXSmall .nepGrid .nepTileMedium,",
		"    .nepGridXSmall.nepGrid .nepTileMedium {",
		"        width: 100% !important;",
		"    }",
		"    .nepGrid .nepTileWide {",
		"        width: 25% !important;",
		"    }",
		"    .nepPageXLarge .nepGrid .nepTileWide,",
		"    .nepGridXLarge.nepGrid .nepTileWide {",
		"        width: 50% !important;",
		"    }",
		"    .nepPageLarge .nepGrid .nepTileWide,",
		"    .nepGridLarge.nepGrid .nepTileWide,",
		"    .nepPageMedium .nepGrid .nepTileWide,",
		"    .nepGridMedium.nepGrid .nepTileWide,",
		"    .nepPageSmall .nepGrid .nepTileWide,",
		"    .nepGridSmall.nepGrid .nepTileWide,",
		"    .nepPageXSmall .nepGrid .nepTileWide,",
		"    .nepGridXSmall.nepGrid .nepTileWide {",
		"        width: 100% !important;",
		"    }",
		"    .nepGrid .nepTileWider {",
		"        width: 50% !important;",
		"    }",
		"    .nepPageXLarge .nepGrid .nepTileWider,",
		"    .nepGridXLarge.nepGrid .nepTileWider,",
		"    .nepPageLarge .nepGrid .nepTileWider,",
		"    .nepGridLarge.nepGrid .nepTileWider,",
		"    .nepPageMedium .nepGrid .nepTileWider,",
		"    .nepGridMedium.nepGrid .nepTileWider,",
		"    .nepPageSmall .nepGrid .nepTileWider,",
		"    .nepGridSmall.nepGrid .nepTileWider,",
		"    .nepPageXSmall .nepGrid .nepTileWide,",
		"    .nepGridXSmall.nepGrid .nepTileWider {",
		"        width: 100% !important;",
		"    }",
		"    .nepGrid .nepTileMax {",
		"        width: 100% !important;",
		"    }",
		"    /*--------------------------------------------------------------------------------------------------*/",
		"    /* TILE WIDTH FEW */",
		"    /*--------------------------------------------------------------------------------------------------*/",
		"    .nepGridFew .nepTileSmall {",
		"        width: 10% !important;",
		"    }",
		"    .nepPageXXXLarge .nepGridFew .nepTileSmall,",
		"    .nepGridXXXLarge.nepGridFew .nepTileSmall {",
		"        width: 12.5% !important;",
		"    }",
		"    .nepPageXXLarge .nepGridFew .nepTileSmall,",
		"    .nepGridXXLarge.nepGridFew .nepTileSmall {",
		"        width: 16.6666% !important;",
		"    }",
		"    .nepPageXLarge .nepGridFew .nepTileSmall,",
		"    .nepGridXLarge.nepGridFew .nepTileSmall {",
		"        width: 25% !important;",
		"    }",
		"    .nepPageLarge .nepGridFew .nepTileSmall,",
		"    .nepGridLarge.nepGridFew .nepTileSmall {",
		"        width: 50% !important;",
		"    }",
		"    .nepPageMedium .nepGridFew .nepTileSmall,",
		"    .nepGridMedium.nepGridFew .nepTileSmall {",
		"        width: 100% !important;",
		"    }",
		"    .nepPageSmall .nepGridFew .nepTileSmall,",
		"    .nepGridSmall.nepGridFew .nepTileSmall,",
		"    .nepPageXSmall .nepGridFew .nepTileSmall,",
		"    .nepGridXSmall.nepGridFew .nepTileSmall {",
		"        width: 100% !important;",
		"    }",
		"    .nepGridFew .nepTileMedium {",
		"        width: 50% !important;",
		"    }",
		"    .nepPageXLarge .nepGridFew .nepTileMedium,",
		"    .nepGridXLarge.nepGridFew .nepTileMedium,",
		"    .nepPageLarge .nepGridFew .nepTileMedium,",
		"    .nepGridLarge.nepGridFew .nepTileMedium,",
		"    .nepPageMedium .nepGridFew .nepTileMedium,",
		"    .nepGridMedium.nepGridFew .nepTileMedium,",
		"    .nepPageSmall .nepGridFew .nepTileMedium,",
		"    .nepGridSmall.nepGridFew .nepTileMedium,",
		"    .nepPageXSmall .nepGridFew .nepTileMedium,",
		"    .nepGridXSmall.nepGridFew .nepTileMedium {",
		"        width: 100% !important;",
		"    }",
		"    .nepGridFew .nepTileWide {",
		"        width: 50% !important;",
		"    }",
		"    .nepPageXLarge .nepGridFew .nepTileWide,",
		"    .nepGridXLarge.nepGridFew .nepTileWide,",
		"    .nepPageLarge .nepGridFew .nepTileWide,",
		"    .nepGridLarge.nepGridFew .nepTileWide,",
		"    .nepPageMedium .nepGridFew .nepTileWide,",
		"    .nepGridMedium.nepGridFew .nepTileWide,",
		"    .nepPageSmall .nepGridFew .nepTileWide,",
		"    .nepGridSmall.nepGridFew .nepTileWide,",
		"    .nepPageXSmall .nepGridFew .nepTileWide,",
		"    .nepGridXSmall.nepGridFew .nepTileWide {",
		"        width: 100% !important;",
		"    }",
		"    .nepGridFew .nepTileWider,",
		"    .nepPageXLarge .nepGridFew .nepTileWider,",
		"    .nepGridXLarge.nepGridFew .nepTileWider,",
		"    .nepPageLarge .nepGridFew .nepTileWider,",
		"    .nepGridLarge.nepGridFew .nepTileWider,",
		"    .nepPageMedium .nepGridFew .nepTileWider,",
		"    .nepGridMedium.nepGridFew .nepTileWider,",
		"    .nepPageSmall .nepGridFew .nepTileWider,",
		"    .nepGridSmall.nepGridFew .nepTileWider,",
		"    .nepPageXSmall .nepGridFew .nepTileWide,",
		"    .nepGridXSmall.nepGridFew .nepTileWider {",
		"        width: 100% !important;",
		"    }",
		"    .nepGridFew .nepTileMax {",
		"        width: 100% !important;",
		"    }",
		"    /*--------------------------------------------------------------------------------------------------*/",
		"    /* TILE WIDTH ONE */",
		"    /*--------------------------------------------------------------------------------------------------*/",
		"    .nepGridOne .nepTileSmall,",
		"    .nepPageXXXLarge .nepGridOne .nepTileSmall,",
		"    .nepGridXXXLarge.nepGridOne .nepTileSmall,",
		"    .nepPageXXLarge .nepGridOne .nepTileSmall,",
		"    .nepGridXXLarge.nepGridOne .nepTileSmall,",
		"    .nepPageXLarge .nepGridOne .nepTileSmall,",
		"    .nepGridXLarge.nepGridOne .nepTileSmall,",
		"    .nepPageLarge .nepGridOne .nepTileSmall,",
		"    .nepGridLarge.nepGridOne .nepTileSmall,",
		"    .nepPageMedium .nepGridOne .nepTileSmall,",
		"    .nepGridMedium.nepGridOne .nepTileSmall,",
		"    .nepPageSmall .nepGridOne .nepTileSmall,",
		"    .nepGridSmall.nepGridOne .nepTileSmall,",
		"    .nepPageXSmall .nepGridOne .nepTileSmall,",
		"    .nepGridXSmall.nepGridOne .nepTileSmall,",
		"    .nepGridOne .nepTileMedium,",
		"    .nepPageXLarge .nepGridOne .nepTileMedium,",
		"    .nepGridXLarge.nepGridOne .nepTileMedium,",
		"    .nepPageLarge .nepGridOne .nepTileMedium,",
		"    .nepGridLarge.nepGridOne .nepTileMedium,",
		"    .nepPageMedium .nepGridOne .nepTileMedium,",
		"    .nepGridMedium.nepGridOne .nepTileMedium,",
		"    .nepPageSmall .nepGridOne .nepTileMedium,",
		"    .nepGridSmall.nepGridOne .nepTileMedium,",
		"    .nepPageXSmall .nepGridOne .nepTileMedium,",
		"    .nepGridXSmall.nepGridOne .nepTileMedium,",
		"    .nepGridOne .nepTileWide,",
		"    .nepPageXLarge .nepGridOne .nepTileWide,",
		"    .nepGridXLarge.nepGridOne .nepTileWide,",
		"    .nepPageLarge .nepGridOne .nepTileWide,",
		"    .nepGridLarge.nepGridOne .nepTileWide,",
		"    .nepPageMedium .nepGridOne .nepTileWide,",
		"    .nepGridMedium.nepGridOne .nepTileWide,",
		"    .nepPageSmall .nepGridOne .nepTileWide,",
		"    .nepGridSmall.nepGridOne .nepTileWide,",
		"    .nepPageXSmall .nepGridOne .nepTileWide,",
		"    .nepGridXSmall.nepGridOne .nepTileWide,",
		"    .nepGridOne .nepTileWider,",
		"    .nepPageXLarge .nepGridOne .nepTileWider,",
		"    .nepGridXLarge.nepGridOne .nepTileWider,",
		"    .nepPageLarge .nepGridOne .nepTileWider,",
		"    .nepGridLarge.nepGridOne .nepTileWider,",
		"    .nepPageMedium .nepGridOne .nepTileWider,",
		"    .nepGridMedium.nepGridOne .nepTileWider,",
		"    .nepPageSmall .nepGridOne .nepTileWider,",
		"    .nepGridSmall.nepGridOne .nepTileWider,",
		"    .nepPageXSmall .nepGridOne .nepTileWide,",
		"    .nepGridXSmall.nepGridOne .nepTileWider,",
		"    .nepGridOne .nepTileMax {",
		"        width: 100% !important;",
		"    }",
		"    .nepGrid.nepGridFiori .nepTileContainer {",
		"        width: 11.5rem !important;",
		"    }",
		"    .nepGrid.nepGridFiori .nepTileContainer.nepFioriStyleTwoByOne {",
		"        width: 23rem !important;",
		"    }",
		"    /* BACKGROUND COLOR */",
		"    .nepThemeLight .nepTopMenu {",
		"        background: white;",
		"    }",
		"    .nepThemeDark .nepTopMenu {",
		"        background: #1C2228;",
		"    }",
		"    .nepThemeLight .nepNavBarContent {",
		"        background: white;",
		"    }",
		"    .nepThemeDark .nepNavBarContent {",
		"        background: #29313a;",
		"    }",
		"    .nepThemeLight .nepMainBar {",
		"        background: white;",
		"    }",
		"    .nepThemeDark .nepMainBar {",
		"        background: #29313a;",
		"    }",
		"    .nepThemeLight .nepLayoutOpenApps {",
		"        background-color: white;",
		"    }",
		"    .nepThemeDark .nepLayoutOpenApps {",
		"        background-color: #29313a;",
		"    }",
		"    .nepThemeLight .nepTopMenu .nepNotificationButton span.sapMBtnInner:hover {",
		"        background-color: #dd0000;",
		"    }",
		"    .nepThemeDark .nepTopMenu .nepNotificationButton span.sapMBtnInner:hover {",
		"        background-color: #dd0000;",
		"    }",
		"    .nepThemeLight .nepSelectUser {",
		"        background-color: white;",
		"    }",
		"    .nepThemeDark .nepSelectUser {",
		"        background-color: #29313a;",
		"    }",
		"    .nepThemeLight .nepLaunchpadMenuSettings {",
		"        background: white;",
		"    }",
		"    .nepThemeDark .nepLaunchpadMenuSettings {",
		"        background: #29313a;",
		"    }",
		"    .nepThemeLight .numPad .sapMBtnInner,",
		"    .nepThemeLight .nepNumpadPanel .sapMCbBg.sapMCbMarkChecked,",
		"    .nepThemeLight .nepNumpadPanel .sapMBtn:hover>.sapMBtnHoverable,",
		"    .nepThemeLight .numPad:not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive {",
		"        background-color: rgba(0, 0, 0, 0.2);",
		"    }",
		"    .nepThemeDark .numPad .sapMBtnInner,",
		"    .nepThemeDark .nepNumpadPanel .sapMCbBg.sapMCbMarkChecked,",
		"    .nepThemeDark .nepNumpadPanel .sapMBtn:hover>.sapMBtnHoverable,",
		"    .nepThemeDark .numPad:not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive {",
		"        background-color: rgba(255, 255, 255, 0.2);",
		"    }",
		"    .nepThemeLight .nepNumpadPanel .sapMCbBg {",
		"        background: rgba(0, 0, 0, 0.1);",
		"    }",
		"    .nepThemeDark .nepNumpadPanel .sapMCbBg {",
		"        background: rgba(255, 255, 255, 0.1);",
		"    }",
		"    .nepThemeLight .nepLogonLayout {",
		"        background: rgba(0, 0, 0, 0.1);",
		"    }",
		"    .nepThemeDark .nepLogonLayout {",
		"        background-color: rgb(255, 255, 255, 0.1);",
		"    }",
		"    .nepThemeLight .nepLogonLayoutBtn .sapMBtn:not(.numPad):hover>.sapMBtnHoverable {",
		"        background-color: white;",
		"    }",
		"    .nepThemeDark .nepLogonLayoutBtn .sapMBtn:not(.numPad):hover>.sapMBtnHoverable {",
		"        background-color: #29313a;",
		"    }",
		"    /* TEXT COLOR */",
		"    .nepNavBarActionInverse .sapMBtnCustomIcon {",
		"        color: white !important;",
		"    }",
		"    .nepNavBarActionInverse .sapMBtnInner {",
		"        color: white !important;",
		"    }",
		"    .nepThemeLight .nepMainBar .sapMBtnIcon,",
		"    .nepThemeLight .nepTopMenuContent .sapMBtn,",
		"    .nepThemeLight .nepTopMenuContent .sapMBtnInner,",
		"    .nepThemeLight .nepTopMenuContent .sapMBtnIcon {",
		"        color: #444;",
		"    }",
		"    .nepThemeDark .nepMainBar .sapMBtnIcon,",
		"    .nepThemeDark .nepTopMenuContent .sapMBtn,",
		"    .nepThemeDark .nepTopMenuContent .sapMBtnInner,",
		"    .nepThemeDark .nepTopMenuContent .sapMBtnIcon {",
		"        color: #d3d7d9;",
		"    }",
		"    .nepThemeLight .nepTopMenuContent .sapMBtn:hover>.sapMBtnHoverable,",
		"    .nepThemeLight .nepTopMenuContent :not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive,",
		"    .nepThemeLight .nepTopMenuContent :not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive .sapMBtnIcon,",
		"    .nepThemeLight .nepTopMenuContent span.sapMBtnInner.sapMBtnEmphasized,",
		"    .nepThemeLight .nepTopMenuContent .sapMBtn:hover:not(.sapMBtnDisabled)>.sapMBtnHoverable.sapMBtnTransparent:not(.sapMBtnActive):not(.sapMToggleBtnPressed)>.sapMBtnIcon,",
		"    .nepThemeLight .nepTopMenuContent *.sapMBtn:hover:not(.sapMBtnDisabled)>span.sapMBtnInner.sapMBtnTransparent:not(.sapMBtnActive):not(.sapMToggleBtnPressed)>.sapMBtnIcon,",
		"    .nepThemeLight .nepTopMenuContent :not(.sapMBtnDisabled):not(.sapMSBActive)>span.sapMBtnInner.sapMBtnTransparent:not(.sapMBtnActive):not(.sapMToggleBtnPressed):hover>.sapMBtnIcon {",
		"        color: #333;",
		"    }",
		"    .nepThemeDark .nepTopMenuContent .sapMBtn:hover>.sapMBtnHoverable,",
		"    .nepThemeDark .nepTopMenuContent :not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive,",
		"    .nepThemeDark .nepTopMenuContent :not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive .sapMBtnIcon,",
		"    .nepThemeDark .nepTopMenuContent span.sapMBtnInner.sapMBtnEmphasized,",
		"    .nepThemeDark .nepTopMenuContent .sapMBtn:hover:not(.sapMBtnDisabled)>.sapMBtnHoverable.sapMBtnTransparent:not(.sapMBtnActive):not(.sapMToggleBtnPressed)>.sapMBtnIcon,",
		"    .nepThemeDark .nepTopMenuContent *.sapMBtn:hover:not(.sapMBtnDisabled)>span.sapMBtnInner.sapMBtnTransparent:not(.sapMBtnActive):not(.sapMToggleBtnPressed)>.sapMBtnIcon,",
		"    .nepThemeDark .nepTopMenuContent :not(.sapMBtnDisabled):not(.sapMSBActive)>span.sapMBtnInner.sapMBtnTransparent:not(.sapMBtnActive):not(.sapMToggleBtnPressed):hover>.sapMBtnIcon {",
		"        color: #fafafa;",
		"    }",
		"    .nepThemeLight .sapMNCIconImage {",
		"        color: #333;",
		"    }",
		"    .nepThemeDark .sapMNCIconImage {",
		"        color: #fafafa;",
		"    }",
		"    .nepThemeLight .nepSubMenu .sapMBtnInner {",
		"        color: #666;",
		"    }",
		"    .nepThemeDark .nepSubMenu .sapMBtnInner {",
		"        color: #dedede;",
		"    }",
		"    .nepThemeLight .nepOpenAppsBtn .sapMBtnInner,",
		"    .nepThemeLight .nepTreeCategory .sapMTreeItemBaseExpander {",
		"        color: #666;",
		"    }",
		"    .nepThemeDark .nepOpenAppsBtn .sapMBtnInner,",
		"    .nepThemeDark .nepTreeCategory .sapMTreeItemBaseExpander {",
		"        color: #dedede;",
		"    }",
		"    .nepThemeLight .nepOpenAppsBtn .sapMBtnIcon,",
		"    .nepThemeLight .nepMainBar .sapMSFF,",
		"    .nepThemeLight .nepMainBar .sapMSFB,",
		"    .nepThemeLight .nepPopover .sapMSFF,",
		"    .nepThemeLight .nepPopover .sapMSFB {",
		"        color: #888;",
		"    }",
		"    .nepThemeDark .nepOpenAppsBtn .sapMBtnIcon,",
		"    .nepThemeDark .nepMainBar .sapMSFF,",
		"    .nepThemeDark .nepMainBar .sapMSFB,",
		"    .nepThemeDark .nepPopover .sapMSFF,",
		"    .nepThemeDark .nepPopover .sapMSFB {",
		"        color: #ccc;",
		"    }",
		"    .nepThemeLight .sapMDialogStretched.nepPopover .nepOpenAppsBtn .sapMBtnIcon,",
		"    .nepThemeLight .sapMDialogStretched .nepOpenAppsClose.sapUiIcon,",
		"    .nepThemeLight .sapMDialogStretched.nepOverflowMenu .sapMSTIIcon,",
		"    .nepThemeLight .sapMDialogStretched.nepOverflowMenu .nepTreeCategory .sapMTreeItemBaseExpander {",
		"        color: #888;",
		"    }",
		"    .nepThemeDark .sapMDialogStretched.nepPopover .nepOpenAppsBtn .sapMBtnIcon,",
		"    .nepThemeDark .sapMDialogStretched .nepOpenAppsClose.sapUiIcon,",
		"    .nepThemeDark .sapMDialogStretched.nepOverflowMenu .sapMSTIIcon,",
		"    .nepThemeDark .sapMDialogStretched.nepOverflowMenu .nepTreeCategory .sapMTreeItemBaseExpander {",
		"        color: #ccc;",
		"    }",
		"    .nepThemeLight .sapMDialogStretched .nepOpenAppsBtn .sapMBtnInner,",
		"    .nepThemeLight .sapMDialogStretched.nepOverflowMenu .nepOpenAppsBtn .sapMBtnInner,",
		"    .nepThemeLight .sapMDialogStretched.nepOverflowMenu .sapMBtnInner,",
		"    .nepThemeLight .sapMDialogStretched.nepOverflowMenu .sapMTreeItemBase {",
		"        color: #333;",
		"    }",
		"    .nepThemeDark .sapMDialogStretched .nepOpenAppsBtn .sapMBtnInner,",
		"    .nepThemeDark .sapMDialogStretched.nepOverflowMenu .nepOpenAppsBtn .sapMBtnInner,",
		"    .nepThemeDark .sapMDialogStretched.nepOverflowMenu .sapMBtnInner,",
		"    .nepThemeDark .sapMDialogStretched.nepOverflowMenu .sapMTreeItemBase {",
		"        color: #fafafa;",
		"    }",
		"    .nepThemeLight .nepOpenAppsClose.sapUiIcon {",
		"        color: #333;",
		"    }",
		"    .nepThemeDark .nepOpenAppsClose.sapUiIcon {",
		"        color: #fafafa;",
		"    }",
		"    .nepThemeLight .nepPopover .sapMBtnIcon,",
		"    .nepThemeLight .nepMainBar .sapMBtnIcon {",
		"        color: #888;",
		"    }",
		"    .nepThemeDark .nepPopover .sapMBtnIcon,",
		"    .nepThemeDark .nepMainBar .sapMBtnIcon {",
		"        color: #ccc;",
		"    }",
		"    .nepThemeLight .nepOpenAppsBtn .sapMBtnIcon {",
		"        color: #888;",
		"    }",
		"    .nepThemeDark .nepOpenAppsBtn .sapMBtnIcon {",
		"        color: #ccc;",
		"    }",
		"    .nepThemeLight .nepPopover .sapMIBar-CTX.sapMHeader-CTX :not(.sapMBtnDisabled)>.sapMBtnActive,",
		"    .nepThemeLight .nepPopover .sapMIBar-CTX.sapMFooter-CTX :not(.sapMBtnDisabled)>.sapMBtnActive,",
		"    .nepThemeLight .nepMainBar .sapMIBar-CTX.sapMHeader-CTX :not(.sapMBtnDisabled)>.sapMBtnActive,",
		"    .nepThemeLight .nepMainBar .sapMIBar-CTX.sapMFooter-CTX :not(.sapMBtnDisabled)>.sapMBtnActive {",
		"        color: #888;",
		"    }",
		"    .nepThemeDark .nepPopover .sapMIBar-CTX.sapMHeader-CTX :not(.sapMBtnDisabled)>.sapMBtnActive,",
		"    .nepThemeDark .nepPopover .sapMIBar-CTX.sapMFooter-CTX :not(.sapMBtnDisabled)>.sapMBtnActive,",
		"    .nepThemeDark .nepMainBar .sapMIBar-CTX.sapMHeader-CTX :not(.sapMBtnDisabled)>.sapMBtnActive,",
		"    .nepThemeDark .nepMainBar .sapMIBar-CTX.sapMFooter-CTX :not(.sapMBtnDisabled)>.sapMBtnActive {",
		"        color: #ccc;",
		"    }",
		"    .nepThemeLight .nepPopover :not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive .sapMBtnIcon,",
		"    .nepThemeLight .nepPopover .sapMIBar-CTX .sapMLabel,",
		"    .nepThemeLight .nepMainBar :not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive .sapMBtnIcon,",
		"    .nepThemeLight .nepMainBar .sapMIBar-CTX .sapMLabel {",
		"        color: #333;",
		"    }",
		"    .nepThemeDark .nepPopover :not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive .sapMBtnIcon,",
		"    .nepThemeDark .nepPopover .sapMIBar-CTX .sapMLabel,",
		"    .nepThemeDark .nepMainBar :not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive .sapMBtnIcon,",
		"    .nepThemeDark .nepMainBar .sapMIBar-CTX .sapMLabel {",
		"        color: #fafafa;",
		"    }",
		"    .nepThemeLight .nepListSetting .sapMLIB.sapMLIBActive {",
		"        color: #333;",
		"    }",
		"    .nepThemeDark .nepListSetting .sapMLIB.sapMLIBActive {",
		"        color: #fafafa;",
		"    }",
		"    .nepThemeLight .nepUserActionText.sapMText {",
		"        color: #333;",
		"    }",
		"    .nepThemeDark .nepUserActionText.sapMText {",
		"        color: #fafafa;",
		"    }",
		"    .nepThemeLight .nepNotificationItem .sapMLIBIconDel:not(.sapMBtnDisabled) .sapMBtnTransparent>.sapMBtnIcon {",
		"        color: #666;",
		"    }",
		"    .nepThemeDark .nepNotificationItem .sapMLIBIconDel:not(.sapMBtnDisabled) .sapMBtnTransparent>.sapMBtnIcon {",
		"        color: #dedede;",
		"    }",
		"    .nepThemeLight .nepPopSimpleTitle.sapMText {",
		"        color: #666;",
		"    }",
		"    .nepThemeDark .nepPopSimpleTitle.sapMText {",
		"        color: #dedede;",
		"    }",
		"    .nepThemeLight .sapMLabelRequired.nepLabelHelp:before {",
		"        color: #c14646;",
		"    }",
		"    .nepThemeDark .sapMLabelRequired.nepLabelHelp:before {",
		"        color: #c14646;",
		"    }",
		"    .nepThemeLight .nepNotifHeader.sapMText {",
		"        color: #666;",
		"    }",
		"    .nepThemeDark .nepNotifHeader.sapMText {",
		"        color: #dedede;",
		"    }",
		"    .nepThemeLight .nepFeed .sapMText {",
		"        color: #444;",
		"    }",
		"    .nepThemeDark .nepFeed .sapMText {",
		"        color: #d3d7d9;",
		"    }",
		"    .nepThemeLight .nepFCard .sapSuiteUiMicroChartNoData {",
		"        color: #ccc;",
		"    }",
		"    .nepThemeDark .nepFCard .sapSuiteUiMicroChartNoData {",
		"        color: #888;",
		"    }",
		"    .nepThemeLight .nepNumpadPanel .sapMBtnIcon,",
		"    .nepThemeLight .numPad .sapMBtnInner {",
		"        color: #333;",
		"    }",
		"    .nepThemeDark .nepNumpadPanel .sapMBtnIcon,",
		"    .nepThemeDark .numPad .sapMBtnInner {",
		"        color: #fafafa;",
		"    }",
		"    .nepThemeLight .nepLogonLayout .sapMBtnInner,",
		"    .nepThemeLight .nepAppCacheUser .sapMLIB.sapMLIBActive,",
		"    .nepThemeLight .nepAppCacheUser .sapMLIBActive div,",
		"    .nepThemeLight .nepAppCacheUser .sapMLIBActive .sapMText {",
		"        color: #333;",
		"    }",
		"    .nepThemeDark .nepLogonLayout .sapMBtnInner,",
		"    .nepThemeDark .nepAppCacheUser .sapMLIB.sapMLIBActive,",
		"    .nepThemeDark .nepAppCacheUser .sapMLIBActive div,",
		"    .nepThemeDark .nepAppCacheUser .sapMLIBActive .sapMText {",
		"        color: #fafafa;",
		"    }",
		"    /* BORDER COLOR */",
		"    .nepThemeLight .nepMainBar .sapMSFF,",
		"    .nepThemeLight .nepPopover .sapMSFF,",
		"    .nepThemeLight .nepMainBar .sapMSFF:hover,",
		"    .nepThemeLight .nepPopover .sapMSFF:hover,",
		"    .nepThemeLight .nepLaunchpadMenuSettings {",
		"        border-color: #dedede;",
		"    }",
		"    .nepThemeDark .nepMainBar .sapMSFF,",
		"    .nepThemeDark .nepPopover .sapMSFF,",
		"    .nepThemeDark .nepMainBar .sapMSFF:hover,",
		"    .nepThemeDark .nepPopover .sapMSFF:hover,",
		"    .nepThemeDark .nepLaunchpadMenuSettings {",
		"        border-color: #666;",
		"    }",
		"    .nepThemeLight .nepTopMenu,",
		"    .nepThemeLight .nepMainBar,",
		"    .nepThemeLight .nepNavBarContent,",
		"    .nepThemeLight .nepNavBarContent .sapMTBStandard,",
		"    .nepThemeLight .nepDocPage {",
		"        border-color: #ccc;",
		"    }",
		"    .nepThemeDark .nepTopMenu,",
		"    .nepThemeDark .nepMainBar,",
		"    .nepThemeDark .nepNavBarContent,",
		"    .nepThemeDark .nepNavBarContent .sapMTBStandard,",
		"    .nepThemeDark .nepDocPage {",
		"        border-color: #888;",
		"    }",
		"    .nepThemeLight .nepCatTitle.sapMTitle,",
		"    .nepThemeLight .nepCatSubTitle.sapMTitle {",
		"        border-color: #333;",
		"    }",
		"    .nepThemeDark .nepCatTitle.sapMTitle,",
		"    .nepThemeDark .nepCatSubTitle.sapMTitle {",
		"        border-color: #fafafa;",
		"    }",
		"    .nepThemeLight .nepTopMenuActive,",
		"    .nepThemeLight .nepTopMenuBtn.sapMBtn:hover,",
		"    .nepThemeLight .nepIconActive {",
		"        border-color: #d3d7d9;",
		"    }",
		"    .nepThemeDark .nepTopMenuActive,",
		"    .nepThemeDark .nepTopMenuBtn.sapMBtn:hover,",
		"    .nepThemeDark .nepIconActive {",
		"        border-color: #d3d7d9;",
		"    }",
		"    .nepThemeLight .nepOverflowMenu.nepPopover.sapMPopover {",
		"        border-top-color: #d3d7d9;",
		"    }",
		"    .nepThemeDark .nepOverflowMenu.nepPopover.sapMPopover {",
		"        border-top-color: #d3d7d9;",
		"    }",
		"    .nepThemeLight .nepOverflowMenu.sapMPopover {",
		"        border-top-color: #d3d7d9;",
		"    }",
		"    .nepThemeDark .nepOverflowMenu.sapMPopover {",
		"        border-top-color: #d3d7d9;",
		"    }",
		"    .nepThemeLight .nepSelectUser {",
		"        border-color: #888;",
		"    }",
		"    .nepThemeDark .nepSelectUser {",
		"        border-color: #ccc;",
		"    }",
		"    .nepThemeLight .nepLogonLayout .sapMBtnInner {",
		"        border-color: #888;",
		"    }",
		"    .nepThemeDark .nepLogonLayout .sapMBtnInner {",
		"        border-color: #ccc;",
		"    }",
		"    .nepThemeLight .numPad:not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive {",
		"        border-color: rgba(0, 0, 0, 0.5);",
		"    }",
		"    .nepThemeDark .numPad:not(.sapMBtnDisabled)>.sapMBtnInner.sapMBtnActive {",
		"        border-color: rgba(255, 255, 255, 0.5);",
		"    }",
		"    /*--------------------------------------------------------------------------------------------------*/",
		"    /* SAP QUARTZ LIGHT */",
		"    /*--------------------------------------------------------------------------------------------------*/",
		"    .nepThemeLight .nepActionContainer .sapMBtnInner,",
		"    .nepThemeLight .nepActionContainer .sapMBtn:hover>.sapMBtnHoverable {",
		"        background-color: transparent;",
		"        border-color: #333;",
		"        color: #333;",
		"    }",
		"    .nepThemeLight .nepActionContainer .sapMBtnIcon {",
		"        color: #333;",
		"    }",
		"    /*--------------------------------------------------------------------------------------------------*/",
		"    /* SAP QUARTZ DARK */",
		"    /*--------------------------------------------------------------------------------------------------*/",
		"    .nepThemeDark .nepActionContainer .sapMBtnInner,",
		"    .nepThemeDark .nepActionContainer .sapMBtn:hover>.sapMBtnHoverable {",
		"        background-color: transparent;",
		"        border-color: #d3d7d9;",
		"        color: #d3d7d9;",
		"    }",
		"    .nepThemeDark .nepActionContainer .sapMBtnIcon,",
		"    .nepThemeDark .nepFCard.sapFCard .sapFCardHeader .sapFCardIcon.sapFAvatar .sapUiIcon {",
		"        color: #d3d7d9;",
		"    }",
		"}",
		"",
		"/* QUARTZ LIGHT CARD BACKGROUNDS */",
		"",
		".nepThemeLight .sapColorSet1A {",
		"    background-color: #fefaf4;",
		"}",
		"",
		".nepThemeLight .sapColorSet1B {",
		"    background-color: #fdf5eb;",
		"}",
		"",
		".nepThemeLight .sapColorSet1C {",
		"    background-color: #fcf1e2;",
		"}",
		"",
		".nepThemeLight .sapColorSet1D {",
		"    background-color: #fbecd8;",
		"}",
		"",
		".nepThemeLight .sapColorSet2A {",
		"    background-color: #fdf7f7;",
		"}",
		"",
		".nepThemeLight .sapColorSet2B {",
		"    background-color: #fbeeee;",
		"}",
		"",
		".nepThemeLight .sapColorSet2C {",
		"    background-color: #f9e6e6;",
		"}",
		"",
		".nepThemeLight .sapColorSet2D {",
		"    background-color: #f7dede;",
		"}",
		"",
		".nepThemeLight .sapColorSet3A {",
		"    background-color: #fef6fa;",
		"}",
		"",
		".nepThemeLight .sapColorSet3B {",
		"    background-color: #fcedf4;",
		"}",
		"",
		".nepThemeLight .sapColorSet3C {",
		"    background-color: #fbe4ef;",
		"}",
		"",
		".nepThemeLight .sapColorSet3D {",
		"    background-color: #fadbea;",
		"}",
		"",
		".nepThemeLight .sapColorSet4A {",
		"    background-color: #fefafd;",
		"}",
		"",
		".nepThemeLight .sapColorSet4B {",
		"    background-color: #fbf3f9;",
		"}",
		"",
		".nepThemeLight .sapColorSet4C {",
		"    background-color: #f9ebf5;",
		"}",
		"",
		".nepThemeLight .sapColorSet4D {",
		"    background-color: #f7e3f2;",
		"}",
		"",
		".nepThemeLight .sapColorSet5A {",
		"    background-color: #f6f7fd;",
		"}",
		"",
		".nepThemeLight .sapColorSet5B {",
		"    background-color: #eeeefb;",
		"}",
		"",
		".nepThemeLight .sapColorSet5C {",
		"    background-color: #e5e6fa;",
		"}",
		"",
		".nepThemeLight .sapColorSet5D {",
		"    background-color: #dddef8;",
		"}",
		"",
		".nepThemeLight .sapColorSet6A {",
		"    background-color: #f7fafd;",
		"}",
		"",
		".nepThemeLight .sapColorSet6B {",
		"    background-color: #eff5fb;",
		"}",
		"",
		".nepThemeLight .sapColorSet6C {",
		"    background-color: #e7f0fa;",
		"}",
		"",
		".nepThemeLight .sapColorSet6D {",
		"    background-color: #deebf8;",
		"}",
		"",
		".nepThemeLight .sapColorSet7A {",
		"    background-color: #f6fdfe;",
		"}",
		"",
		".nepThemeLight .sapColorSet7B {",
		"    background-color: #ecfbfd;",
		"}",
		"",
		".nepThemeLight .sapColorSet7C {",
		"    background-color: #e3fafc;",
		"}",
		"",
		".nepThemeLight .sapColorSet7D {",
		"    background-color: #daf8fb;",
		"}",
		"",
		".nepThemeLight .sapColorSet8A {",
		"    background-color: #fcfef5;",
		"}",
		"",
		".nepThemeLight .sapColorSet8B {",
		"    background-color: #f9feec;",
		"}",
		"",
		".nepThemeLight .sapColorSet8C {",
		"    background-color: #f6fde2;",
		"}",
		"",
		".nepThemeLight .sapColorSet8D {",
		"    background-color: #f3fcd9;",
		"}",
		"",
		".nepThemeLight .sapColorSet9A {",
		"    background-color: #ffffff;",
		"}",
		"",
		".nepThemeLight .sapColorSet9B {",
		"    background-color: #fafafa;",
		"}",
		"",
		".nepThemeLight .sapColorSet9C {",
		"    background-color: #f5f5f5;",
		"}",
		"",
		".nepThemeLight .sapColorSet9D {",
		"    background-color: #f0f0f0;",
		"}",
		"",
		".nepThemeLight .sapColorSet10A {",
		"    background-color: #ebebeb;",
		"}",
		"",
		".nepThemeLight .sapColorSet10B {",
		"    background-color: #e6e6e6;",
		"}",
		"",
		".nepThemeLight .sapColorSet10C {",
		"    background-color: #e0e0e0;",
		"}",
		"",
		".nepThemeLight .sapColorSet10D {",
		"    background-color: #dbdbdb;",
		"}",
		"",
		".nepThemeLight .sapColorSet11A {",
		"    background-color: #f5faff;",
		"}",
		"",
		".nepThemeLight .sapColorSet11B {",
		"    background-color: #ebf5fe;",
		"}",
		"",
		".nepThemeLight .sapColorSet11C {",
		"    background-color: #e2f0fe;",
		"}",
		"",
		".nepThemeLight .sapColorSet11D {",
		"    background-color: #d8ebfd;",
		"}",
		"",
		"/* QUARTZ DARK CARD BACKGROUNDS */",
		"",
		".nepThemeDark .sapColorSet1A {",
		"    background-color: #382700;",
		"}",
		"",
		".nepThemeDark .sapColorSet1B {",
		"    background-color: #422e00;",
		"}",
		"",
		".nepThemeDark .sapColorSet1C {",
		"    background-color: #4c3500;",
		"}",
		"",
		".nepThemeDark .sapColorSet1D {",
		"    background-color: #563d00;",
		"}",
		"",
		".nepThemeDark .sapColorSet2A {",
		"    background-color: #6d1c1c;",
		"}",
		"",
		".nepThemeDark .sapColorSet2B {",
		"    background-color: #751e1e;",
		"}",
		"",
		".nepThemeDark .sapColorSet2C {",
		"    background-color: #7d2020;",
		"}",
		"",
		".nepThemeDark .sapColorSet2D {",
		"    background-color: #862222;",
		"}",
		"",
		".nepThemeDark .sapColorSet3A {",
		"    background-color: #6a0a29;",
		"}",
		"",
		".nepThemeDark .sapColorSet3B {",
		"    background-color: #730a2d;",
		"}",
		"",
		".nepThemeDark .sapColorSet3C {",
		"    background-color: #7c0b31;",
		"}",
		"",
		".nepThemeDark .sapColorSet3D {",
		"    background-color: #860c34;",
		"}",
		"",
		".nepThemeDark .sapColorSet4A {",
		"    background-color: #400c35;",
		"}",
		"",
		".nepThemeDark .sapColorSet4B {",
		"    background-color: #480e3c;",
		"}",
		"",
		".nepThemeDark .sapColorSet4C {",
		"    background-color: #51104a;",
		"}",
		"",
		".nepThemeDark .sapColorSet4D {",
		"    background-color: #59114a;",
		"}",
		"",
		".nepThemeDark .sapColorSet5A {",
		"    background-color: #1c2d4c;",
		"}",
		"",
		".nepThemeDark .sapColorSet5B {",
		"    background-color: #1e3253;",
		"}",
		"",
		".nepThemeDark .sapColorSet5C {",
		"    background-color: #21365a;",
		"}",
		"",
		".nepThemeDark .sapColorSet5D {",
		"    background-color: #243b62;",
		"}",
		"",
		".nepThemeDark .sapColorSet6A {",
		"    background-color: #003952;",
		"}",
		"",
		".nepThemeDark .sapColorSet6B {",
		"    background-color: #00405c;",
		"}",
		"",
		".nepThemeDark .sapColorSet6C {",
		"    background-color: #004866;",
		"}",
		"",
		".nepThemeDark .sapColorSet6D {",
		"    background-color: #004f70;",
		"}",
		"",
		".nepThemeDark .sapColorSet7A {",
		"    background-color: #2a5e5e;",
		"}",
		"",
		".nepThemeDark .sapColorSet7B {",
		"    background-color: #2d6565;",
		"}",
		"",
		".nepThemeDark .sapColorSet7C {",
		"    background-color: #306c6c;",
		"}",
		"",
		".nepThemeDark .sapColorSet7D {",
		"    background-color: #337373;",
		"}",
		"",
		".nepThemeDark .sapColorSet8A {",
		"    background-color: #27410e;",
		"}",
		"",
		".nepThemeDark .sapColorSet8B {",
		"    background-color: #2c4a10;",
		"}",
		"",
		".nepThemeDark .sapColorSet8C {",
		"    background-color: #315212;",
		"}",
		"",
		".nepThemeDark .sapColorSet8D {",
		"    background-color: #365a14;",
		"}",
		"",
		".nepThemeDark .sapColorSet9A {",
		"    background-color: #30164c;",
		"}",
		"",
		".nepThemeDark .sapColorSet9B {",
		"    background-color: #351853;",
		"}",
		"",
		".nepThemeDark .sapColorSet9C {",
		"    background-color: #3a1b5b;",
		"}",
		"",
		".nepThemeDark .sapColorSet9D {",
		"    background-color: #3f1d63;",
		"}",
		"",
		".nepThemeDark .sapColorSet10A {",
		"    background-color: #323c44;",
		"}",
		"",
		".nepThemeDark .sapColorSet10B {",
		"    background-color: #36424a;",
		"}",
		"",
		".nepThemeDark .sapColorSet10C {",
		"    background-color: #3b4750;",
		"}",
		"",
		".nepThemeDark .sapColorSet10D {",
		"    background-color: #3f4c56;",
		"}",
		"",
		".nepThemeDark .sapColorSet11A {",
		"    background-color: #042037;",
		"}",
		"",
		".nepThemeDark .sapColorSet11B {",
		"    background-color: #052540;",
		"}",
		"",
		".nepThemeDark .sapColorSet11C {",
		"    background-color: #062b4a;",
		"}",
		"",
		".nepThemeDark .sapColorSet11D {",
		"    background-color: #073053;",
		"}",
		"",
		".nepCardDescription {",
		"    padding: 0 1rem 1rem 1rem",
		"}",
		"",
		".nepActionConfig {",
		"    margin-right: -10px;",
		"}",
		"",
		".nepActionConfig .sapMBtnInner {",
		"    border: none;",
		"}",
		"",
		".dragPlaceholder {",
		"    border: 2px dotted orange;",
		"    min-height: 200px;",
		"}",
		"",
		".dragCursor {",
		"    cursor: pointer;",
		"}",
		"",
		".nepToolNoBorder.sapMTBStandard {",
		"    border-bottom: none;",
		"}",
		"",
		".nepToolNoBorder.sapMIBar.sapMTB .sapMBarChild:only-child {",
		"    padding-left: 0rem;",
		"    padding-right: 0rem;",
		"}",
		"",
		".nepLayout .nepMainBar .sapMLIB {",
		"    background: transparent;",
		"}",
		"",
		".nepLayout .nepMainBar .sapMIBar.sapMHeader-CTX {",
		"    background: transparent;",
		"}",
		"",
		".nepMultiMenu.sapMDialog.sapUiPopupWithPadding:not(.sapUiNoContentPadding) .sapMDialogScrollCont {",
		"    padding: 0;",
		"}",
		"",
		".nepMultiMenu:not(.nepMainBar) {",
		"    min-width: 300px;",
		"}",
		"",
		".nepMultiMenu .sapMIBar.sapMSubHeader-CTX {",
		"    background-color: transparent;",
		"}",
		"",
		".nepMultiMenu .sapMBar {",
		"    box-shadow: none;",
		"}",
		"",
		".nepMultiMenu .sapMIBar.sapMTB .sapMBarChild:only-child {",
		"    padding-left: 0;",
		"}",
		"",
		".nepMultiMenu .sapMTBStandard {",
		"    border-bottom: none;",
		"    padding: 0 .5rem;",
		"    background-color: transparent !important;",
		"}",
		"",
		".nepMainBar.sapMPage>.sapMPageHeader {",
		"    box-shadow: none;",
		"    border-bottom: none;",
		"}",
		"",
		".nepMainBar.sapMPage.sapMPageWithSubHeader>.sapMPageSubHeader {",
		"    box-shadow: none;",
		"    border-bottom: none;",
		"}",
		"",
		".nepCardHeaderSubTitle {",
		"    margin: 0.2rem 0 0 0;",
		"    font-size: 0.875rem;",
		"    font-weight: normal;",
		"}",
		"",
		".nepCardHeaderStatus {",
		"    font-size: 0.75rem;",
		"}",
		"",
		".nepThemeDark .nepCardHeaderStatus {",
		"    color: #d3d7d9;",
		"}",
		"",
		".nepThemeLight .nepCardHeaderStatus {",
		"    color: #6a6d70;",
		"}",
		"",
		".nepCardHeaderIcon {",
		"    margin-right: 20px;",
		"    line-height: 2.5rem;",
		"    -webkit-border-radius: 50%;",
		"}",
		"",
		".nepICCard {",
		"    box-shadow: none !important;",
		"    background: transparent;",
		"}",
		"",
		".nepScrollContent .nepDynamicPage .sapFDynamicPageContent {",
		"    overflow-x: scroll;",
		"}",
		"",
		"/* Fix page height when PWA header is visible */",
		"",
		".pageShell>.sapMPageEnableScrolling {",
		"    height: auto !important;",
		"}",
		"",
		"/* Horizon Theme fixes */",
		"",
		".sapUiTheme-sap_horizon .nepFCardTopImage {",
		"    border-top-left-radius: 1rem;",
		"    border-top-right-radius: 1rem;",
		"}"
	],
	"header": [
		"==OBJECT STRING==",
		"<script src=\"/public/neptune/aes.js\"></script>",
		"<link rel=\"shortcut icon\" href=\"/public/images/favicon.png\" type=\"image/x-icon\" />",
		"<link rel=\"icon\" sizes=\"192x192\" href=\"/public/images/NeptuneIcon192px.png\">",
		"<link rel=\"apple-touch-icon\" href=\"/public/images/NeptuneIcon192px.png\">",
		"",
		"<script>",
		"\tlet _pwaInstall = false;",
		"    let _pwaUpdate = false;",
		"    let _pwadeferredPrompt = null;",
		"</script>"
	],
	"manifest": "",
	"globalScript": "",
	"deleted": false,
	"libHighchart": false,
	"libHighmap": false,
	"publicAccess": false,
	"ui5_bootstrap": false,
	"apis": [],
	"package": "29805CA6-5925-4DE9-A761-47279405B041"
}